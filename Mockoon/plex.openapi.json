{
  "uuid": "d62d8ea8-48b0-4687-b2d6-b18f5a42bdee",
  "lastMigration": 32,
  "name": "Plex-API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3003,
  "hostname": "",
  "folders": [],
  "routes": [
    {
      "uuid": "08c8e281-3861-4788-bcc2-a00443b31c5b",
      "type": "http",
      "documentation": "Get Server Capabilities",
      "method": "get",
      "endpoint": "",
      "responses": [
        {
          "uuid": "564ea949-35e6-4b1a-9efe-3ac479b9dbc1",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": {{faker 'number.int' max=99999}},\n    \"allowCameraUpload\": {{faker 'datatype.boolean'}},\n    \"allowChannelAccess\": {{faker 'datatype.boolean'}},\n    \"allowMediaDeletion\": {{faker 'datatype.boolean'}},\n    \"allowSharing\": {{faker 'datatype.boolean'}},\n    \"allowSync\": {{faker 'datatype.boolean'}},\n    \"allowTuners\": {{faker 'datatype.boolean'}},\n    \"backgroundProcessing\": {{faker 'datatype.boolean'}},\n    \"certificate\": {{faker 'datatype.boolean'}},\n    \"companionProxy\": {{faker 'datatype.boolean'}},\n    \"countryCode\": \"\",\n    \"diagnostics\": \"\",\n    \"eventStream\": {{faker 'datatype.boolean'}},\n    \"friendlyName\": \"\",\n    \"hubSearch\": {{faker 'datatype.boolean'}},\n    \"itemClusters\": {{faker 'datatype.boolean'}},\n    \"livetv\": {{faker 'number.int' max=99999}},\n    \"machineIdentifier\": \"\",\n    \"mediaProviders\": {{faker 'datatype.boolean'}},\n    \"multiuser\": {{faker 'datatype.boolean'}},\n    \"musicAnalysis\": {{faker 'number.int' max=99999}},\n    \"myPlex\": {{faker 'datatype.boolean'}},\n    \"myPlexMappingState\": \"\",\n    \"myPlexSigninState\": \"\",\n    \"myPlexSubscription\": {{faker 'datatype.boolean'}},\n    \"myPlexUsername\": \"\",\n    \"offlineTranscode\": {{faker 'number.int' max=99999}},\n    \"ownerFeatures\": \"\",\n    \"photoAutoTag\": {{faker 'datatype.boolean'}},\n    \"platform\": \"\",\n    \"platformVersion\": \"\",\n    \"pluginHost\": {{faker 'datatype.boolean'}},\n    \"pushNotifications\": {{faker 'datatype.boolean'}},\n    \"readOnlyLibraries\": {{faker 'datatype.boolean'}},\n    \"streamingBrainABRVersion\": {{faker 'number.int' max=99999}},\n    \"streamingBrainVersion\": {{faker 'number.int' max=99999}},\n    \"sync\": {{faker 'datatype.boolean'}},\n    \"transcoderActiveVideoSessions\": {{faker 'number.int' max=99999}},\n    \"transcoderAudio\": {{faker 'datatype.boolean'}},\n    \"transcoderLyrics\": {{faker 'datatype.boolean'}},\n    \"transcoderPhoto\": {{faker 'datatype.boolean'}},\n    \"transcoderSubtitles\": {{faker 'datatype.boolean'}},\n    \"transcoderVideo\": {{faker 'datatype.boolean'}},\n    \"transcoderVideoBitrates\": \"\",\n    \"transcoderVideoQualities\": \"\",\n    \"transcoderVideoResolutions\": \"\",\n    \"updatedAt\": {{faker 'number.int' max=99999}},\n    \"updater\": {{faker 'datatype.boolean'}},\n    \"version\": \"\",\n    \"voiceSearch\": {{faker 'datatype.boolean'}},\n    \"Directory\": [\n      {\n        \"count\": {{faker 'number.int' max=99999}},\n        \"key\": \"\",\n        \"title\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The Server Capabilities",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "04ad2f36-2ea5-4d4e-9aee-3d63a5d8d684",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "806e305e-9343-427b-ad11-aad05a93fa91",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "edfc5b84-09b4-4665-a000-aa7c626d7e8e",
      "type": "http",
      "documentation": "Get Server Preferences",
      "method": "get",
      "endpoint": ":/prefs",
      "responses": [
        {
          "uuid": "98cbbde8-99aa-4355-9e66-735bd17b9575",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 161,\n    \"Setting\": [\n      {\n        \"id\": \"EnableDatabaseTrace\",\n        \"label\": \"\",\n        \"summary\": \"\",\n        \"type\": \"bool\",\n        \"default\": {{faker 'datatype.boolean'}},\n        \"value\": {{faker 'datatype.boolean'}},\n        \"hidden\": true,\n        \"advanced\": {{faker 'datatype.boolean'}},\n        \"group\": \"\",\n        \"enumValues\": \"1:admin only|2:everyone\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Server Preferences",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "257a0d99-605e-4658-a29b-79436a078554",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "0df0d297-257b-40c6-8fad-2ced4add7809",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ad637582-881b-4400-a279-8c17925f2413",
      "type": "http",
      "documentation": "Mark Media Played",
      "method": "get",
      "endpoint": ":/scrobble",
      "responses": [
        {
          "uuid": "83ad08a0-249c-4639-a03e-759a7114a53b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Media is marked Played",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "0cb8ecb1-6095-46ef-8a82-b0cff3561293",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "554d7092-82b7-4db4-a3ec-c79988ab4dd4",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "4c67fc3e-f892-46c1-89eb-fd9b64635c09",
      "type": "http",
      "documentation": "Mark Media Unplayed",
      "method": "get",
      "endpoint": ":/unscrobble",
      "responses": [
        {
          "uuid": "e65ed6db-9f18-45c8-8e0d-a134eb8c42f1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Media is marked Unplayed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "921cc30e-c80c-4fcd-af80-48587c997a31",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "49568f08-57a4-411f-8fa0-5a6f9e8c49a0",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "bec833a2-b1e0-4bb4-95b0-d7de62daaea7",
      "type": "http",
      "documentation": "Update Media Play Progress",
      "method": "post",
      "endpoint": ":/progress",
      "responses": [
        {
          "uuid": "9d595819-0b04-4b7a-bb03-ada266633a72",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success - The request was successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "177e7291-f648-41a3-874d-953b3e84d399",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "7b55df38-a74d-496e-81b2-fefc110dddc4",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "b9829e76-f289-4dba-a12d-d9589baaf2e3",
      "type": "http",
      "documentation": "Get the timeline for a media item",
      "method": "get",
      "endpoint": ":/timeline",
      "responses": [
        {
          "uuid": "cb334f87-f509-498e-a4d3-7318da922f28",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The timeline for the media item",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "18c61cdb-34e7-4fe2-b65e-28518a47a182",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "fa12acc1-d100-49a9-b142-f6084d8feb67",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "0cea0fa9-583c-4b62-a496-34d4d0653085",
      "type": "http",
      "documentation": "Get Server Activities",
      "method": "get",
      "endpoint": "activities",
      "responses": [
        {
          "uuid": "4fdc38df-8ca8-47e4-a8ea-e8902192e131",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": {{faker 'number.int' max=99999}},\n    \"Activity\": [\n      {\n        \"uuid\": \"\",\n        \"type\": \"\",\n        \"cancellable\": {{faker 'datatype.boolean'}},\n        \"userID\": {{faker 'number.int' max=99999}},\n        \"title\": \"\",\n        \"subtitle\": \"\",\n        \"progress\": {{faker 'number.int' max=99999}},\n        \"Context\": {\n          \"librarySectionID\": \"\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The Server Activities",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "c6ff2769-9093-4d34-bfdc-5fe47282866c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "12114cc8-167b-4cc8-b25b-c2d22a7469b5",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "3c961e39-9600-4638-a081-4c4479104329",
      "type": "http",
      "documentation": "Cancel Server Activities",
      "method": "delete",
      "endpoint": "activities/:activityUUID",
      "responses": [
        {
          "uuid": "9a006ed5-4641-4970-9e09-038cf35714a5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The Server Activity was canceled",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "3c6b100a-66a1-4196-a979-90d197202876",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "68908b30-91a0-4e85-8024-ceae40b7a356",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "d8f62799-2352-4e02-885d-3f36fdf9d3a6",
      "type": "http",
      "documentation": "Get Butler tasks",
      "method": "get",
      "endpoint": "butler",
      "responses": [
        {
          "uuid": "4c666b45-59fc-400a-8df2-4739f07cdfeb",
          "body": "{\n  \"ButlerTasks\": {\n    \"ButlerTask\": [\n      {\n        \"name\": \"BackupDatabase\",\n        \"interval\": 3,\n        \"scheduleRandomized\": {{faker 'datatype.boolean'}},\n        \"enabled\": {{faker 'datatype.boolean'}},\n        \"title\": \"Backup Database\",\n        \"description\": \"Create a backup copy of the server's database in the configured backup directory\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "All butler tasks",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "e6ca602c-8d7b-4739-9ecf-10d969708132",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "9a1d10ef-85cd-46ee-9526-7d2067e97c6c",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "20f7ef77-0ad1-4b42-b200-ddd3b54aad28",
      "type": "http",
      "documentation": "Start all Butler tasks",
      "method": "post",
      "endpoint": "butler",
      "responses": [
        {
          "uuid": "cc0d97c3-70ee-40df-89ce-a979992798da",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "All tasks were started",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "9f69e4a1-4045-41f4-9fd2-ca27dc1d99dd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "1e4329fe-ddba-469e-9c1e-3a46acee5df2",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "6231e00e-06c7-4444-a008-d6d52f52c193",
      "type": "http",
      "documentation": "Stop all Butler tasks",
      "method": "delete",
      "endpoint": "butler",
      "responses": [
        {
          "uuid": "bbec64c3-ec85-43a7-b6a0-1da85fb215fa",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "All tasks were stopped",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "1f1854e6-1c4d-4c6c-8a06-25a53bbd7081",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "b407dbca-6354-4675-a1e3-d3df955c10ef",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "7ca18386-ca96-40a3-8751-09a4297e827a",
      "type": "http",
      "documentation": "Start a single Butler task",
      "method": "post",
      "endpoint": "butler/:taskName",
      "responses": [
        {
          "uuid": "e1f0b7f8-d3d8-4b7e-b082-917d19861a47",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The task was started successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "aacfaba0-71cd-46e6-843e-a2d04a241a8e",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "The task was already running.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "77585092-3982-47e4-a644-a90dbae43c51",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "17f42cac-98cc-4401-b1f8-5e72817c438e",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "a5a2c6e8-698a-41e9-a927-b39112fb770c",
      "type": "http",
      "documentation": "Stop a single Butler task",
      "method": "delete",
      "endpoint": "butler/:taskName",
      "responses": [
        {
          "uuid": "acb2f12c-6527-48b5-a6ff-8139e58bcd93",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The task was stopped",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "4dfc57b0-75db-4b2e-b466-068a3d7dc7cd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "cb865680-7e46-4162-94d2-f9c04ef1a003",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "2fc23fb6-f55a-46c6-bcc6-fb4804552fbc",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "The task was not running",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "dc295da5-ce97-46f8-ae34-30966e243d9e",
      "type": "http",
      "documentation": "Get Available Clients",
      "method": "get",
      "endpoint": "clients",
      "responses": [
        {
          "uuid": "05a9902e-2eb1-4fb0-8923-fdf09ae62f95",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 1,\n    \"Server\": [\n      {\n        \"name\": \"iPad\",\n        \"host\": \"10.10.10.102\",\n        \"address\": \"10.10.10.102\",\n        \"port\": 32500,\n        \"machineIdentifier\": \"A2E901F8-E016-43A7-ADFB-EF8CA8A4AC05\",\n        \"version\": \"8.17\",\n        \"protocol\": \"plex\",\n        \"product\": \"Plex for iOS\",\n        \"deviceClass\": \"tablet\",\n        \"protocolVersion\": 2,\n        \"protocolCapabilities\": \"playback,playqueues,timeline,provider-playback\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Available Clients",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "f67d0926-9efe-4e03-b3c9-b0624ff7dff3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "a9b6caee-4cc1-4ff2-b44a-0a858f15bb40",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "a1923f7d-f16c-4db6-9a1e-b729e5529dcb",
      "type": "http",
      "documentation": "Get Devices",
      "method": "get",
      "endpoint": "devices",
      "responses": [
        {
          "uuid": "4eedce16-b6cc-427f-a673-ef8d13e8e2a5",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 151,\n    \"identifier\": \"com.plexapp.system.devices\",\n    \"Device\": [\n      {\n        \"id\": 1,\n        \"name\": \"iPhone\",\n        \"platform\": \"iOS\",\n        \"clientIdentifier\": \"\",\n        \"createdAt\": 1654131230\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Devices",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "b57aa865-8246-4a1e-a840-660429110c51",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "44f63aaf-1955-4a2a-88c0-5cd8d63caf29",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ced3b406-0e96-471f-9570-75731e31f27d",
      "type": "http",
      "documentation": "Get Companions Data",
      "method": "get",
      "endpoint": "companions",
      "responses": [
        {
          "uuid": "17cdf6f0-c0ae-4f3c-841d-d1dbe21bcb79",
          "body": "[\n  {\n    \"identifier\": \"tv.plex.sonos\",\n    \"baseURL\": \"https://sonos.plex.tv\",\n    \"title\": \"Sonos\",\n    \"linkURL\": \"https://sonos.plex.tv/link\",\n    \"provides\": \"client,player\",\n    \"token\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Companions Data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "c1c9ce16-a518-4454-8d28-1fcb3ba57f05",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "b989d470-9ac9-4d83-9eb1-9d3481c2ac1a",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "b3aedaf3-1b04-4179-b865-13f703f3e83d",
      "type": "http",
      "documentation": "Get list of friends of the user logged in",
      "method": "get",
      "endpoint": "friends",
      "responses": [
        {
          "uuid": "05daa51c-2c70-402f-8860-99ae413d36bb",
          "body": "[\n  {\n    \"email\": \"username@email.com\",\n    \"friendlyName\": \"\",\n    \"home\": {{faker 'datatype.boolean'}},\n    \"id\": {{faker 'number.int' max=99999}},\n    \"restricted\": {{faker 'datatype.boolean'}},\n    \"sharedServers\": [\n      {}\n    ],\n    \"sharedSources\": [\n      {}\n    ],\n    \"status\": \"{{oneOf (array 'accepted')}}\",\n    \"thumb\": \"https://plex.tv/users/7d1916e0d8f6e76b/avatar?c=1694481578\",\n    \"title\": \"username123\",\n    \"username\": \"username123\",\n    \"uuid\": \"7d1916e0d8f6e76b\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Friends Data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "8fe8e337-1d50-43aa-a62d-7fb63cc0fe23",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "443fac94-789f-4bda-ac3e-16ea8560d1d0",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "651add9d-4950-4cc3-9805-aa0b84fc54cc",
      "type": "http",
      "documentation": "Get Geo Data",
      "method": "get",
      "endpoint": "geoip",
      "responses": [
        {
          "uuid": "3ba52fab-e61f-4bcf-a23b-396771a48f21",
          "body": "{\n  \"code\": \"VI\",\n  \"continent_code\": \"NA\",\n  \"country\": \"United States Virgin Islands\",\n  \"city\": \"Amsterdam\",\n  \"european_union_member\": true,\n  \"time_zone\": \"America/St_Thomas\",\n  \"postal_code\": 802,\n  \"in_privacy_restricted_country\": true,\n  \"in_privacy_restricted_region\": true,\n  \"subdivisions\": \"Saint Thomas\",\n  \"coordinates\": \"18.3381, -64.8941\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Gets the geo location data of the user",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "6be6a1af-a08e-43ea-add9-5af50551db49",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "61affbd8-eda7-4a19-b906-decc94e378dd",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "708a0052-150f-41ab-a278-f8f44ac83306",
      "type": "http",
      "documentation": "Get Plex Home Data",
      "method": "get",
      "endpoint": "home",
      "responses": [
        {
          "uuid": "358d4d84-6eab-4863-afe5-fb35624c2206",
          "body": "{\n  \"id\": 1841489,\n  \"name\": \"Blindkitty38's home\",\n  \"guestUserID\": 58815432,\n  \"guestUserUUID\": \"f3df4e01bfca0787\",\n  \"guestEnabled\": {{faker 'datatype.boolean'}},\n  \"subscription\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Home Data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "9c116f7c-1872-42f3-a793-468f55179d92",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "77841cd1-44b3-401f-b6b9-05fed7a5a222",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "fd661ea6-3498-4356-93b5-404b1b78dcbf",
      "type": "http",
      "documentation": "Get Global Hubs",
      "method": "get",
      "endpoint": "hubs",
      "responses": [
        {
          "uuid": "26080295-0922-4b99-af8a-5d699f51928b",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 8,\n    \"allowSync\": true,\n    \"identifier\": \"com.plexapp.plugins.library\",\n    \"Hub\": [\n      {\n        \"hubKey\": \"/library/metadata/50768,65523,58188,57341,57302,57070\",\n        \"key\": \"/playlists/all?type=15&sort=lastViewedAt:desc&playlistType=video,audio\",\n        \"title\": \"Recent Playlists\",\n        \"type\": \"playlist\",\n        \"hubIdentifier\": \"home.playlists\",\n        \"context\": \"hub.home.playlists\",\n        \"size\": 6,\n        \"more\": true,\n        \"style\": \"shelf\",\n        \"promoted\": true,\n        \"Metadata\": [\n          {\n            \"ratingKey\": \"57070\",\n            \"key\": \"/playlists/57070/items\",\n            \"guid\": \"com.plexapp.agents.none://9fee6c5b-3143-4923-813e-57bd0190056c\",\n            \"type\": \"playlist\",\n            \"title\": \"November Movie Day\",\n            \"titleSort\": \"Tracks\",\n            \"summary\": \"\",\n            \"smart\": {{faker 'datatype.boolean'}},\n            \"playlistType\": \"video\",\n            \"composite\": \"/playlists/57070/composite/1668787730\",\n            \"icon\": \"playlist://image.smart\",\n            \"viewCount\": 2,\n            \"lastViewedAt\": 1668787732,\n            \"duration\": 16873000,\n            \"leafCount\": 3,\n            \"addedAt\": 1668779618,\n            \"updatedAt\": 1668787730\n          }\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "returns global hubs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "ca3bbb1b-0bab-4930-b417-6bb35a04cf10",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "73b40341-f36b-471e-8e01-e30a2456edcb",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "acd9fff4-2a9f-443d-8a51-251263203451",
      "type": "http",
      "documentation": "Perform a search",
      "method": "get",
      "endpoint": "hubs/search",
      "responses": [
        {
          "uuid": "db3b16e4-bd4f-4b5d-89ca-9846259e6e28",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The search results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "0d8ae368-40ab-4178-8194-31f96e99fd3d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "7b6d6747-debb-4346-94fc-a88d04179a99",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ecd9de1e-e6df-4cd7-a868-f0a7a909c4a8",
      "type": "http",
      "documentation": "Perform a voice search",
      "method": "get",
      "endpoint": "hubs/search/voice",
      "responses": [
        {
          "uuid": "1844fea4-9d45-4178-84b9-117d0cf3aad3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The search results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "58b39d0e-7953-4a66-a225-bf18c33ae515",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "97fb3041-db2c-4374-8dee-4195a69c4a33",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "858ab47e-a72f-4ae8-b3b8-9443fa983c30",
      "type": "http",
      "documentation": "Get library specific hubs",
      "method": "get",
      "endpoint": "hubs/sections/:sectionId",
      "responses": [
        {
          "uuid": "3f225fd9-2e29-4b6b-926e-45c720873464",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 7,\n    \"allowSync\": true,\n    \"identifier\": \"com.plexapp.plugins.library\",\n    \"librarySectionID\": 1,\n    \"librarySectionTitle\": \"Movies\",\n    \"librarySectionUUID\": \"322a231a-b7f7-49f5-920f-14c61199cd30\",\n    \"Hub\": [\n      {\n        \"key\": \"/library/sections/1/all?sort=lastViewedAt:desc&unwatched=0&viewOffset=0\",\n        \"title\": \"Recently Played Movies\",\n        \"type\": \"movie\",\n        \"hubIdentifier\": \"movie.recentlyviewed.1\",\n        \"context\": \"hub.movie.recentlyviewed\",\n        \"size\": 6,\n        \"more\": true,\n        \"style\": \"shelf\",\n        \"hubKey\": \"/library/metadata/66485,66098,57249,11449,5858,14944\",\n        \"Metadata\": [\n          {\n            \"ratingKey\": \"14944\",\n            \"key\": \"/library/metadata/14944\",\n            \"guid\": \"plex://movie/5d77686eeb5d26001f1eb339\",\n            \"studio\": \"Walt Disney Animation Studios\",\n            \"type\": \"movie\",\n            \"title\": \"Tangled\",\n            \"librarySectionTitle\": \"Movies\",\n            \"librarySectionID\": 1,\n            \"librarySectionKey\": \"/library/sections/1\",\n            \"contentRating\": \"PG\",\n            \"summary\": \"The magically long-haired Rapunzel has spent her entire life in a tower, but now that a runaway thief has stumbled upon her, she is about to discover the world for the first time, and who she really is.\",\n            \"rating\": 8.9,\n            \"audienceRating\": 8.7,\n            \"viewCount\": 1,\n            \"lastViewedAt\": 1704936047,\n            \"year\": 2010,\n            \"tagline\": \"They're taking adventure to new lengths.\",\n            \"thumb\": \"/library/metadata/14944/thumb/1705739847\",\n            \"art\": \"/library/metadata/14944/art/1705739847\",\n            \"duration\": 6017237,\n            \"originallyAvailableAt\": \"2010-11-24T00:00:00.000Z\",\n            \"addedAt\": 1589412494,\n            \"updatedAt\": 1705739847,\n            \"audienceRatingImage\": \"rottentomatoes://image.rating.upright\",\n            \"primaryExtraKey\": \"/library/metadata/14952\",\n            \"ratingImage\": \"rottentomatoes://image.rating.ripe\",\n            \"Media\": [\n              {\n                \"id\": 38247,\n                \"duration\": 6017237,\n                \"bitrate\": 2051,\n                \"width\": 1920,\n                \"height\": 1080,\n                \"aspectRatio\": 1.78,\n                \"audioChannels\": 2,\n                \"audioCodec\": \"aac\",\n                \"videoCodec\": \"h264\",\n                \"videoResolution\": \"1080\",\n                \"container\": \"mp4\",\n                \"videoFrameRate\": \"24p\",\n                \"optimizedForStreaming\": 1,\n                \"audioProfile\": \"lc\",\n                \"has64bitOffsets\": {{faker 'datatype.boolean'}},\n                \"videoProfile\": \"high\",\n                \"Part\": [\n                  {\n                    \"id\": 38247,\n                    \"key\": \"/library/parts/38247/1589412494/file.mp4\",\n                    \"duration\": 6017237,\n                    \"file\": \"/movies/Tangled (2010)/Tangled (2010) Bluray-1080p.mp4\",\n                    \"size\": 1545647447,\n                    \"audioProfile\": \"lc\",\n                    \"container\": \"mp4\",\n                    \"has64bitOffsets\": {{faker 'datatype.boolean'}},\n                    \"optimizedForStreaming\": true,\n                    \"videoProfile\": \"high\"\n                  }\n                ]\n              }\n            ],\n            \"Genre\": [\n              {\n                \"tag\": \"Animation\"\n              }\n            ],\n            \"Country\": [\n              {\n                \"tag\": \"United States of America\"\n              }\n            ],\n            \"Director\": [\n              {\n                \"tag\": \"Nathan Greno\"\n              }\n            ],\n            \"Role\": [\n              {\n                \"tag\": \"Donna Murphy\"\n              }\n            ],\n            \"Writer\": [\n              {\n                \"tag\": \"Wilhelm Grimm\"\n              }\n            ],\n            \"skipCount\": 1,\n            \"chapterSource\": \"media\"\n          }\n        ],\n        \"promoted\": true,\n        \"random\": true\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The hubs specific to the library",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "344d3bbf-fc55-4435-a792-4b2079821e07",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "e7c86847-cb3f-4e15-a467-1790337404fe",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "7e400d52-93e1-41fd-b30e-1535cd902c3b",
      "type": "http",
      "documentation": "Get Server Identity",
      "method": "get",
      "endpoint": "identity",
      "responses": [
        {
          "uuid": "d7ad29e9-dc8f-45ec-b52e-3bd74f99fd5d",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": {{faker 'number.int' max=99999}},\n    \"claimed\": {{faker 'datatype.boolean'}},\n    \"machineIdentifier\": \"96f2fe7a78c9dc1f16a16bedbe90f98149be16b4\",\n    \"version\": \"1.31.3.6868-28fc46b27\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The Server Identity information",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "f6cdc44f-de61-4ac4-9556-6836aafa13f2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "951d12cc-f78d-4b0d-b242-18bff7f24108",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "6dcae78f-3050-490f-a6bd-2f53d6c01b2d",
      "type": "http",
      "documentation": "Get Hash Value",
      "method": "get",
      "endpoint": "library/hashes",
      "responses": [
        {
          "uuid": "3dcc4afa-a91d-474f-b709-07c5fc67a8f0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The hash of the file",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "29694fba-3472-411b-ad13-c6d86579bb56",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "b7b877a5-7944-4032-ab6c-e72b64b6f206",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "54a17150-9e32-485d-8415-83a86c0a7b43",
      "type": "http",
      "documentation": "Get Recently Added",
      "method": "get",
      "endpoint": "library/recentlyAdded",
      "responses": [
        {
          "uuid": "d60b8550-0936-4895-b406-2cee83ae2efc",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 50,\n    \"allowSync\": {{faker 'datatype.boolean'}},\n    \"identifier\": \"com.plexapp.plugins.library\",\n    \"mediaTagPrefix\": \"/system/bundle/media/flags/\",\n    \"mediaTagVersion\": 1680021154,\n    \"mixedParents\": {{faker 'datatype.boolean'}},\n    \"Metadata\": [\n      {\n        \"allowSync\": {{faker 'datatype.boolean'}},\n        \"librarySectionID\": 1,\n        \"librarySectionTitle\": \"Movies\",\n        \"librarySectionUUID\": \"322a231a-b7f7-49f5-920f-14c61199cd30\",\n        \"ratingKey\": 59398,\n        \"key\": \"/library/metadata/59398\",\n        \"guid\": \"plex://movie/5e161a83bea6ac004126e148\",\n        \"studio\": \"Marvel Studios\",\n        \"type\": \"movie\",\n        \"title\": \"Ant-Man and the Wasp: Quantumania\",\n        \"contentRating\": \"PG-13\",\n        \"summary\": \"Scott Lang and Hope Van Dyne along with Hank Pym and Janet Van Dyne explore the Quantum Realm where they interact with strange creatures and embark on an adventure that goes beyond the limits of what they thought was possible.\",\n        \"rating\": 4.7,\n        \"audienceRating\": 8.3,\n        \"year\": 2023,\n        \"tagline\": \"Witness the beginning of a new dynasty.\",\n        \"thumb\": \"/library/metadata/59398/thumb/1681888010\",\n        \"art\": \"/library/metadata/59398/art/1681888010\",\n        \"duration\": 7474422,\n        \"originallyAvailableAt\": \"2023-02-15T00:00:00.000Z\",\n        \"addedAt\": 1681803215,\n        \"updatedAt\": 1681888010,\n        \"audienceRatingImage\": \"rottentomatoes://image.rating.upright\",\n        \"chapterSource\": \"media\",\n        \"primaryExtraKey\": \"/library/metadata/59399\",\n        \"ratingImage\": \"rottentomatoes://image.rating.rotten\",\n        \"Media\": [\n          {\n            \"id\": 120345,\n            \"duration\": 7474422,\n            \"bitrate\": 3623,\n            \"width\": 1920,\n            \"height\": 804,\n            \"aspectRatio\": 2.35,\n            \"audioChannels\": 6,\n            \"audioCodec\": \"ac3\",\n            \"videoCodec\": \"h264\",\n            \"videoResolution\": 1080,\n            \"container\": \"mp4\",\n            \"videoFrameRate\": \"24p\",\n            \"optimizedForStreaming\": {{faker 'number.int' max=99999}},\n            \"has64bitOffsets\": {{faker 'datatype.boolean'}},\n            \"videoProfile\": \"high\",\n            \"Part\": [\n              {\n                \"id\": 120353,\n                \"key\": \"/library/parts/120353/1681803203/file.mp4\",\n                \"duration\": 7474422,\n                \"file\": \"/movies/Ant-Man and the Wasp Quantumania (2023)/Ant-Man.and.the.Wasp.Quantumania.2023.1080p.mp4\",\n                \"size\": 3395307162,\n                \"container\": \"mp4\",\n                \"has64bitOffsets\": {{faker 'datatype.boolean'}},\n                \"hasThumbnail\": 1,\n                \"optimizedForStreaming\": {{faker 'datatype.boolean'}},\n                \"videoProfile\": \"high\"\n              }\n            ]\n          }\n        ],\n        \"Genre\": [\n          {\n            \"tag\": \"Comedy\"\n          }\n        ],\n        \"Director\": [\n          {\n            \"tag\": \"Peyton Reed\"\n          }\n        ],\n        \"Writer\": [\n          {\n            \"tag\": \"Jeff Loveness\"\n          }\n        ],\n        \"Country\": [\n          {\n            \"tag\": \"United States of America\"\n          }\n        ],\n        \"Role\": [\n          {\n            \"tag\": \"Paul Rudd\"\n          }\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The recently added content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "e9df5085-14ee-41d8-9e94-2f8fadadbea9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "21a202d5-9bd4-4e5a-b362-f6a9d9e4dda9",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "87eb0fcf-2d2b-4530-968b-a60ee8f04d0e",
      "type": "http",
      "documentation": "Get All Libraries",
      "method": "get",
      "endpoint": "library/sections",
      "responses": [
        {
          "uuid": "bc86b087-6502-4b9c-a1e0-b5cb108f3b9b",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 5,\n    \"allowSync\": {{faker 'datatype.boolean'}},\n    \"title1\": \"Plex Library\",\n    \"Directory\": [\n      {\n        \"allowSync\": true,\n        \"art\": \"/:/resources/movie-fanart.jpg\",\n        \"composite\": \"/library/sections/1/composite/1705615584\",\n        \"filters\": true,\n        \"refreshing\": {{faker 'datatype.boolean'}},\n        \"thumb\": \"/:/resources/movie.png\",\n        \"key\": \"1\",\n        \"type\": \"movie\",\n        \"title\": \"Movies\",\n        \"agent\": \"tv.plex.agents.movie\",\n        \"scanner\": \"Plex Movie\",\n        \"language\": \"en-US\",\n        \"uuid\": \"322a231a-b7f7-49f5-920f-14c61199cd30\",\n        \"updatedAt\": 1556281940,\n        \"createdAt\": 1556281940,\n        \"scannedAt\": 1556281940,\n        \"content\": true,\n        \"directory\": true,\n        \"contentChangedAt\": 3192854,\n        \"hidden\": {{faker 'number.int' max=99999}},\n        \"Location\": [\n          {\n            \"id\": 1,\n            \"path\": \"/movies\"\n          }\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The libraries available on the Server",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "fa37529d-681e-4708-ad9c-27c2942fc303",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "dbc04cc4-d74b-47ef-9851-a209a9dc7ab5",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "200d1f28-409c-41ec-9249-0b88e2f5d43b",
      "type": "http",
      "documentation": "Get Library Details",
      "method": "get",
      "endpoint": "library/sections/:sectionId",
      "responses": [
        {
          "uuid": "3f064646-1724-4af1-895c-f6dda28f097f",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 29,\n    \"allowSync\": {{faker 'datatype.boolean'}},\n    \"art\": \"/:/resources/movie-fanart.jpg\",\n    \"content\": \"secondary\",\n    \"identifier\": \"com.plexapp.plugins.library\",\n    \"librarySectionID\": 1,\n    \"mediaTagPrefix\": \"/system/bundle/media/flags/\",\n    \"mediaTagVersion\": 1701731894,\n    \"thumb\": \"/:/resources/movie.png\",\n    \"title1\": \"Movies\",\n    \"viewGroup\": \"secondary\",\n    \"viewMode\": 65592,\n    \"Directory\": [\n      {\n        \"key\": \"search?type=1\",\n        \"title\": \"Search...\",\n        \"secondary\": true,\n        \"prompt\": \"Search Movies\",\n        \"search\": true\n      }\n    ],\n    \"Type\": [\n      {\n        \"key\": \"/library/sections/1/all?type=1\",\n        \"type\": \"movie\",\n        \"title\": \"Movies\",\n        \"active\": {{faker 'datatype.boolean'}},\n        \"Filter\": [\n          {\n            \"filter\": \"label\",\n            \"filterType\": \"string\",\n            \"key\": \"/library/sections/1/label\",\n            \"title\": \"Labels\",\n            \"type\": \"filter\"\n          }\n        ],\n        \"Sort\": [\n          {\n            \"default\": \"asc\",\n            \"defaultDirection\": \"desc\",\n            \"descKey\": \"random:desc\",\n            \"firstCharacterKey\": \"/library/sections/1/firstCharacter\",\n            \"key\": \"random\",\n            \"title\": \"Randomly\"\n          }\n        ],\n        \"Field\": [\n          {\n            \"key\": \"label\",\n            \"title\": \"Label\",\n            \"type\": \"tag\",\n            \"subType\": \"bitrate\"\n          }\n        ]\n      }\n    ],\n    \"FieldType\": [\n      {\n        \"type\": \"resolution\",\n        \"Operator\": [\n          {\n            \"key\": \"=\",\n            \"title\": \"is\"\n          }\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The details of the library",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "c8ae255d-1408-4d7f-8472-ad3f78eeb67d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "48dd890e-a37b-407a-8f40-46e155c55404",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "a245d48d-179d-4d3a-ac0d-1e4a8f8aa1ad",
      "type": "http",
      "documentation": "Delete Library Section",
      "method": "delete",
      "endpoint": "library/sections/:sectionId",
      "responses": [
        {
          "uuid": "b0ead753-bf6c-4e29-b494-7c3acbd02420",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The library is deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "42fdcc2c-e65c-4df9-96a3-559900d30677",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "726ad9a1-485f-4ac8-9276-8248b68320de",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "889caad0-668a-40e5-b6db-991df09d272f",
      "type": "http",
      "documentation": "Get Library Items",
      "method": "get",
      "endpoint": "library/sections/:sectionId/:tag",
      "responses": [
        {
          "uuid": "2bbf78a9-b4ea-4af4-b83b-15cc5b00c84c",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 70,\n    \"allowSync\": true,\n    \"art\": \"/:/resources/movie-fanart.jpg\",\n    \"identifier\": \"com.plexapp.plugins.library\",\n    \"librarySectionID\": {{faker 'number.int' max=99999}},\n    \"librarySectionTitle\": \"Movies\",\n    \"librarySectionUUID\": \"322a231a-b7f7-49f5-920f-14c61199cd30\",\n    \"mediaTagPrefix\": \"/system/bundle/media/flags/\",\n    \"mediaTagVersion\": 1701731894,\n    \"thumb\": \"/:/resources/movie.png\",\n    \"title1\": \"Movies\",\n    \"title2\": \"Recently Released\",\n    \"viewGroup\": \"movie\",\n    \"viewMode\": 65592,\n    \"mixedParents\": true,\n    \"Metadata\": [\n      {\n        \"ratingKey\": \"58683\",\n        \"key\": \"/library/metadata/58683\",\n        \"guid\": \"plex://movie/5d7768ba96b655001fdc0408\",\n        \"studio\": \"20th Century Studios\",\n        \"type\": \"movie\",\n        \"title\": \"Avatar: The Way of Water\",\n        \"contentRating\": \"PG-13\",\n        \"summary\": \"Jake Sully lives with his newfound family formed on the extrasolar moon Pandora. Once a familiar threat returns to finish what was previously started, Jake must work with Neytiri and the army of the Na'vi race to protect their home.\",\n        \"rating\": 7.6,\n        \"audienceRating\": 9.2,\n        \"year\": 2022,\n        \"tagline\": \"Return to Pandora.\",\n        \"thumb\": \"/library/metadata/58683/thumb/1703239236\",\n        \"art\": \"/library/metadata/58683/art/1703239236\",\n        \"duration\": 11558112,\n        \"originallyAvailableAt\": \"2022-12-14T00:00:00.000Z\",\n        \"addedAt\": 1680457607,\n        \"updatedAt\": 1703239236,\n        \"audienceRatingImage\": \"rottentomatoes://image.rating.upright\",\n        \"chapterSource\": \"media\",\n        \"primaryExtraKey\": \"/library/metadata/58684\",\n        \"ratingImage\": \"rottentomatoes://image.rating.ripe\",\n        \"grandparentRatingKey\": \"66\",\n        \"grandparentGuid\": \"plex://show/5d9c081b170e24001f2a7be4\",\n        \"grandparentKey\": \"/library/metadata/66\",\n        \"grandparentTitle\": \"Caprica\",\n        \"grandparentThumb\": \"/library/metadata/66/thumb/1705716261\",\n        \"grandparentArt\": \"/library/metadata/66/art/1705716261\",\n        \"grandparentTheme\": \"/library/metadata/66/theme/1705716261\",\n        \"Media\": [\n          {\n            \"id\": 119534,\n            \"duration\": 11558112,\n            \"bitrate\": 25025,\n            \"width\": 3840,\n            \"height\": 2072,\n            \"aspectRatio\": 1.85,\n            \"audioChannels\": 6,\n            \"audioCodec\": \"eac3\",\n            \"videoCodec\": \"hevc\",\n            \"videoResolution\": \"4k\",\n            \"container\": \"mkv\",\n            \"videoFrameRate\": \"24p\",\n            \"videoProfile\": \"main 10\",\n            \"Part\": [\n              {\n                \"id\": 119542,\n                \"key\": \"/library/parts/119542/1680457526/file.mkv\",\n                \"duration\": 11558112,\n                \"file\": \"/movies/Avatar The Way of Water (2022)/Avatar.The.Way.of.Water.2022.2160p.WEB-DL.DDP5.1.Atmos.DV.HDR10.HEVC-CMRG.mkv\",\n                \"size\": 36158371307,\n                \"container\": \"mkv\",\n                \"videoProfile\": \"main 10\"\n              }\n            ]\n          }\n        ],\n        \"Genre\": [\n          {\n            \"tag\": \"Adventure\"\n          }\n        ],\n        \"Country\": [\n          {\n            \"tag\": \"United States of America\"\n          }\n        ],\n        \"Director\": [\n          {\n            \"tag\": \"James Cameron\"\n          }\n        ],\n        \"Writer\": [\n          {\n            \"tag\": \"James Cameron\"\n          }\n        ],\n        \"Role\": [\n          {\n            \"tag\": \"Sigourney Weaver\"\n          }\n        ],\n        \"titleSort\": \"Whale\",\n        \"viewCount\": 1,\n        \"lastViewedAt\": 1682752242,\n        \"originalTitle\": \"映画 ブラッククローバー 魔法帝の剣\",\n        \"viewOffset\": 5222500,\n        \"skipCount\": 1,\n        \"index\": 1,\n        \"theme\": \"/library/metadata/1/theme/1705636920\",\n        \"leafCount\": 14,\n        \"viewedLeafCount\": {{faker 'number.int' max=99999}},\n        \"childCount\": 1,\n        \"hasPremiumExtras\": \"1\",\n        \"hasPremiumPrimaryExtra\": \"1\",\n        \"parentRatingKey\": \"66\",\n        \"parentGuid\": \"plex://show/5d9c081b170e24001f2a7be4\",\n        \"parentStudio\": \"UCP\",\n        \"parentKey\": \"/library/metadata/66\",\n        \"parentTitle\": \"Caprica\",\n        \"parentIndex\": 1,\n        \"parentYear\": 2010,\n        \"parentThumb\": \"/library/metadata/66/thumb/1705716261\",\n        \"parentTheme\": \"/library/metadata/66/theme/1705716261\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The contents of the library by section and tag",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "a22eb67e-b17b-4454-b4ab-9c01da2ce51d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "bc70e7a6-5f23-4467-9662-952c2e1cf275",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "a7220efc-0876-46b0-89b5-6ce00165a624",
      "type": "http",
      "documentation": "Refresh Metadata Of The Library",
      "method": "get",
      "endpoint": "library/sections/:sectionId/refresh",
      "responses": [
        {
          "uuid": "7d9cc294-8e84-48fa-acb6-db3117e773a8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The library is refreshing",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "5235fa92-440f-47b7-938e-10a1281f2906",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "23c712d1-26cd-455a-8e55-b052f97bc8b8",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "6e805567-2c1f-4087-a58e-7605de649e9f",
      "type": "http",
      "documentation": "Search Library",
      "method": "get",
      "endpoint": "library/sections/:sectionId/search",
      "responses": [
        {
          "uuid": "d9ca9573-a254-4128-a8f3-2d4c16a41ea5",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 2,\n    \"allowSync\": {{faker 'datatype.boolean'}},\n    \"art\": \"/:/resources/show-fanart.jpg\",\n    \"identifier\": \"com.plexapp.plugins.library\",\n    \"mediaTagPrefix\": \"/system/bundle/media/flags/\",\n    \"mediaTagVersion\": 1698860922,\n    \"nocache\": true,\n    \"thumb\": \"/:/resources/show.png\",\n    \"title1\": \"TV Shows\",\n    \"title2\": \"Search for ''\",\n    \"viewGroup\": \"season\",\n    \"viewMode\": 65593,\n    \"Metadata\": [\n      {\n        \"ratingKey\": \"2\",\n        \"key\": \"/library/metadata/2/children\",\n        \"parentRatingKey\": \"1\",\n        \"guid\": \"plex://season/602e67e766dfdb002c0a1b5b\",\n        \"parentGuid\": \"plex://show/5d9c086c7d06d9001ffd27aa\",\n        \"parentStudio\": \"Mutant Enemy Productions\",\n        \"type\": \"season\",\n        \"title\": \"Season 1\",\n        \"parentKey\": \"/library/metadata/1\",\n        \"parentTitle\": \"Firefly\",\n        \"summary\": \"Captain Malcolm 'Mal' Reynolds is a former galactic war veteran who is the captain of the transport ship \\\"Serenity\\\". Mal and his crew, ensign Zoe Alleyne Washburne; Zoe's husband, pilot Hoban 'Wash' Washburne; muscular mercenary Jayne Cobb; young mechanic Kaylee Frye; former Alliance medical officer Simon Tam; his disturbed teenage sister River (both on the run from the interplanetary government \\\"The Alliance\\\"); the beautiful courtesan Inara Serra; and preacher Shepherd Book do any jobs, legal or illegal, they can find as the Serenity crew travels across the outskirts of outer space.\",\n        \"index\": 1,\n        \"parentIndex\": 1,\n        \"parentYear\": 2002,\n        \"thumb\": \"/library/metadata/2/thumb/1705636920\",\n        \"art\": \"/library/metadata/1/art/1705636920\",\n        \"parentThumb\": \"/library/metadata/1/thumb/1705636920\",\n        \"parentTheme\": \"/library/metadata/1/theme/1705636920\",\n        \"addedAt\": 1705636916,\n        \"updatedAt\": 1705636920\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The contents of the library by section and type",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "285bc3b1-e3c1-46bf-a4c0-28b909041f4f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "6a4a09e1-cb57-4ac0-b487-63e32cb164ba",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "9a555973-4966-41ac-8d7d-e36b8853efc6",
      "type": "http",
      "documentation": "Get Items Metadata",
      "method": "get",
      "endpoint": "library/metadata/:ratingKey",
      "responses": [
        {
          "uuid": "8431cdee-add9-41de-bef2-69fc76128a53",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 1,\n    \"allowSync\": true,\n    \"identifier\": \"com.plexapp.plugins.library\",\n    \"librarySectionID\": 1,\n    \"librarySectionTitle\": \"Movies\",\n    \"librarySectionUUID\": \"cfc899d7-3000-46f6-8489-b9592714ada5\",\n    \"mediaTagPrefix\": \"/system/bundle/media/flags/\",\n    \"mediaTagVersion\": 1698860922,\n    \"Metadata\": [\n      {\n        \"ratingKey\": \"17\",\n        \"key\": \"/library/metadata/17\",\n        \"guid\": \"plex://movie/5d77683f6f4521001ea9dc53\",\n        \"studio\": \"Universal Pictures\",\n        \"type\": \"movie\",\n        \"title\": \"Serenity\",\n        \"librarySectionTitle\": \"Movies\",\n        \"librarySectionID\": 1,\n        \"librarySectionKey\": \"/library/sections/1\",\n        \"contentRating\": \"PG-13\",\n        \"summary\": \"Serenity continues the story of the TV series it was based upon (\\\"Firefly\\\"). River Tam had a secret - one in which she's not even aware - so dangerous, no one's safe, as an Alliance operative's sent to capture her, and all others are considered irrelevant to his job.\",\n        \"rating\": 8.2,\n        \"audienceRating\": 9.1,\n        \"year\": 2005,\n        \"tagline\": \"They aim to misbehave.\",\n        \"thumb\": \"/library/metadata/17/thumb/1705637165\",\n        \"art\": \"/library/metadata/17/art/1705637165\",\n        \"duration\": 141417,\n        \"originallyAvailableAt\": \"2005-09-29T00:00:00.000Z\",\n        \"addedAt\": 1705637164,\n        \"updatedAt\": 1705637165,\n        \"audienceRatingImage\": \"rottentomatoes://image.rating.upright\",\n        \"hasPremiumPrimaryExtra\": \"1\",\n        \"ratingImage\": \"rottentomatoes://image.rating.ripe\",\n        \"Media\": [\n          {\n            \"id\": 15,\n            \"duration\": 141417,\n            \"bitrate\": 2278,\n            \"width\": 1920,\n            \"height\": 814,\n            \"aspectRatio\": 2.35,\n            \"audioChannels\": 2,\n            \"audioCodec\": \"aac\",\n            \"videoCodec\": \"h264\",\n            \"videoResolution\": \"1080\",\n            \"container\": \"mp4\",\n            \"videoFrameRate\": \"24p\",\n            \"optimizedForStreaming\": {{faker 'number.int' max=99999}},\n            \"audioProfile\": \"lc\",\n            \"has64bitOffsets\": {{faker 'datatype.boolean'}},\n            \"videoProfile\": \"high\",\n            \"Part\": [\n              {\n                \"id\": 15,\n                \"key\": \"/library/parts/15/1705637151/file.mp4\",\n                \"duration\": 141417,\n                \"file\": \"/movies/Serenity (2005)/Serenity (2005).mp4\",\n                \"size\": 40271948,\n                \"audioProfile\": \"lc\",\n                \"container\": \"mp4\",\n                \"has64bitOffsets\": {{faker 'datatype.boolean'}},\n                \"optimizedForStreaming\": {{faker 'datatype.boolean'}},\n                \"videoProfile\": \"high\",\n                \"Stream\": [\n                  {\n                    \"id\": 29,\n                    \"streamType\": 2,\n                    \"default\": true,\n                    \"codec\": \"aac\",\n                    \"index\": {{faker 'number.int' max=99999}},\n                    \"bitrate\": 128,\n                    \"bitDepth\": 8,\n                    \"chromaLocation\": \"left\",\n                    \"chromaSubsampling\": 14520,\n                    \"codedHeight\": 816,\n                    \"codedWidth\": 1920,\n                    \"colorPrimaries\": \"bt709\",\n                    \"colorRange\": \"tv\",\n                    \"colorSpace\": \"bt709\",\n                    \"colorTrc\": \"bt709\",\n                    \"frameRate\": 24,\n                    \"hasScalingMatrix\": {{faker 'datatype.boolean'}},\n                    \"height\": 814,\n                    \"level\": 40,\n                    \"profile\": \"lc\",\n                    \"refFrames\": 4,\n                    \"scanType\": \"progressive\",\n                    \"streamIdentifier\": \"1\",\n                    \"width\": 1920,\n                    \"displayTitle\": \"English (AAC Stereo)\",\n                    \"extendedDisplayTitle\": \"English (AAC Stereo)\",\n                    \"selected\": true,\n                    \"channels\": 2,\n                    \"language\": \"English\",\n                    \"languageTag\": \"en\",\n                    \"languageCode\": \"eng\",\n                    \"samplingRate\": 44100\n                  }\n                ]\n              }\n            ]\n          }\n        ],\n        \"Genre\": [\n          {\n            \"id\": 184,\n            \"filter\": \"genre=184\",\n            \"tag\": \"Thriller\"\n          }\n        ],\n        \"Country\": [\n          {\n            \"id\": 116,\n            \"filter\": \"country=116\",\n            \"tag\": \"United States of America\"\n          }\n        ],\n        \"Guid\": [\n          {\n            \"id\": \"tvdb://2337\"\n          }\n        ],\n        \"Rating\": [\n          {\n            \"image\": \"themoviedb://image.rating\",\n            \"value\": 7.4,\n            \"type\": \"audience\"\n          }\n        ],\n        \"Director\": [\n          {\n            \"id\": 130,\n            \"filter\": \"director=130\",\n            \"tag\": \"Joss Whedon\",\n            \"tagKey\": \"5d776828880197001ec90e8f\",\n            \"thumb\": \"https://metadata-static.plex.tv/people/5d776828880197001ec90e8f.jpg\"\n          }\n        ],\n        \"Writer\": [\n          {\n            \"id\": 132,\n            \"filter\": \"writer=132\",\n            \"tag\": \"Joss Whedon\",\n            \"tagKey\": \"5d776828880197001ec90e8f\",\n            \"thumb\": \"https://metadata-static.plex.tv/people/5d776828880197001ec90e8f.jpg\"\n          }\n        ],\n        \"Role\": [\n          {\n            \"id\": 220,\n            \"filter\": \"actor=220\",\n            \"tag\": \"Dennis Keiffer\",\n            \"tagKey\": \"5d77683554f42c001f8c4708\",\n            \"role\": \"Bar Guy (uncredited)\",\n            \"thumb\": \"https://metadata-static.plex.tv/6/people/648e9a7ea1d537bccfcd7615134b78ce.jpg\"\n          }\n        ],\n        \"Producer\": [\n          {\n            \"id\": 221,\n            \"filter\": \"producer=221\",\n            \"tag\": \"Barry Mendel\",\n            \"tagKey\": \"5d776826961905001eb90e2b\",\n            \"thumb\": \"https://metadata-static.plex.tv/8/people/87877371326a964634d18556d94547e1.jpg\"\n          }\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The metadata of the library item.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "80fe83ac-6d4e-44f7-9a39-ce9d6115650f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "a6d26387-b2a1-4583-bef6-acb3f79ddda0",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "414ef7af-93b7-4d23-91d9-d3dc17dfedaa",
      "type": "http",
      "documentation": "Get Items Children",
      "method": "get",
      "endpoint": "library/metadata/:ratingKey/children",
      "responses": [
        {
          "uuid": "bca5d7f7-4ce2-404b-9e67-e2fd214770e5",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 3,\n    \"allowSync\": true,\n    \"art\": \"/library/metadata/30072/art/1705739923\",\n    \"identifier\": \"com.plexapp.plugins.library\",\n    \"key\": \"30072\",\n    \"librarySectionID\": 2,\n    \"librarySectionTitle\": \"TV Shows\",\n    \"librarySectionUUID\": \"4bb2521c-8ba9-459b-aaee-8ab8bc35eabd\",\n    \"mediaTagPrefix\": \"/system/bundle/media/flags/\",\n    \"mediaTagVersion\": 1701731894,\n    \"nocache\": true,\n    \"parentIndex\": 1,\n    \"parentTitle\": \"Reacher\",\n    \"parentYear\": 2022,\n    \"summary\": \"When retired Military Police Officer Jack Reacher is arrested for a murder he did not commit, he finds himself in the middle of a deadly conspiracy full of dirty cops, shady businessmen, and scheming politicians. With nothing but his wits, he must figure out what is happening in Margrave, Georgia.\",\n    \"theme\": \"/library/metadata/30072/theme/1705739923\",\n    \"thumb\": \"/library/metadata/30072/thumb/1705739923\",\n    \"title1\": \"TV Shows\",\n    \"title2\": \"Reacher\",\n    \"viewGroup\": \"season\",\n    \"viewMode\": 65593,\n    \"Directory\": [\n      {\n        \"leafCount\": 16,\n        \"thumb\": \"/library/metadata/30072/thumb/1705739923\",\n        \"viewedLeafCount\": 16,\n        \"key\": \"/library/metadata/30072/allLeaves\",\n        \"title\": \"All episodes\"\n      }\n    ],\n    \"Metadata\": [\n      {\n        \"ratingKey\": \"66488\",\n        \"key\": \"/library/metadata/66488/children\",\n        \"parentRatingKey\": \"30072\",\n        \"guid\": \"plex://season/652aea6549508477c34c6000\",\n        \"parentGuid\": \"plex://show/5d9c09190aaccd001f8f42f0\",\n        \"parentStudio\": \"Amazon Studios\",\n        \"type\": \"season\",\n        \"title\": \"Season 2\",\n        \"parentKey\": \"/library/metadata/30072\",\n        \"parentTitle\": \"Reacher\",\n        \"summary\": \"Based on\\\"Bad Luck and Trouble,\\\" when members of Reacher's old military unit start turning up dead, Reacher has just one thing on his mind—revenge.\",\n        \"index\": 2,\n        \"parentIndex\": 1,\n        \"viewCount\": 11,\n        \"lastViewedAt\": 1705646565,\n        \"parentYear\": 2022,\n        \"thumb\": \"/library/metadata/66488/thumb/1703065033\",\n        \"art\": \"/library/metadata/30072/art/1705739923\",\n        \"parentThumb\": \"/library/metadata/30072/thumb/1705739923\",\n        \"parentTheme\": \"/library/metadata/30072/theme/1705739923\",\n        \"leafCount\": 8,\n        \"viewedLeafCount\": 8,\n        \"addedAt\": 1702602021,\n        \"updatedAt\": 1703065033,\n        \"userRating\": 9,\n        \"skipCount\": 1,\n        \"lastRatedAt\": 1703881224\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The children of the library item.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "ec5b4b36-c487-40e9-8a96-9308297fadb3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "fdb57214-8615-4afc-8ce8-d8b48869c7c8",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "452a2292-3e4e-4514-8e65-7df88b33412a",
      "type": "http",
      "documentation": "Get Top Watched Content",
      "method": "get",
      "endpoint": "library/all/top",
      "responses": [
        {
          "uuid": "55d25d63-1a0f-4ba3-a60f-7ae88a31572f",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 1,\n    \"allowSync\": true,\n    \"identifier\": \"com.plexapp.plugins.library\",\n    \"mediaTagPrefix\": \"/system/bundle/media/flags/\",\n    \"mediaTagVersion\": 1698860922,\n    \"Metadata\": [\n      {\n        \"ratingKey\": \"17\",\n        \"key\": \"/library/metadata/17\",\n        \"guid\": \"plex://movie/5d77683f6f4521001ea9dc53\",\n        \"slug\": \"waterloo-road\",\n        \"studio\": \"Universal Pictures\",\n        \"type\": \"movie\",\n        \"title\": \"Serenity\",\n        \"librarySectionTitle\": \"Movies\",\n        \"librarySectionID\": 1,\n        \"librarySectionKey\": \"/library/sections/1\",\n        \"contentRating\": \"PG-13\",\n        \"summary\": \"Serenity continues the story of the TV series it was based upon (\\\"Firefly\\\"). River Tam had a secret - one in which she's not even aware - so dangerous, no one's safe, as an Alliance operative's sent to capture her, and all others are considered irrelevant to his job.\",\n        \"index\": 1,\n        \"audienceRating\": 9.1,\n        \"year\": 2005,\n        \"tagline\": \"They aim to misbehave.\",\n        \"thumb\": \"/library/metadata/17/thumb/1705637165\",\n        \"art\": \"/library/metadata/17/art/1705637165\",\n        \"duration\": 141417,\n        \"originallyAvailableAt\": \"2005-09-29T00:00:00.000Z\",\n        \"leafCount\": 222,\n        \"viewedLeafCount\": 100,\n        \"childCount\": 13,\n        \"addedAt\": 1705637164,\n        \"updatedAt\": 1705637165,\n        \"globalViewCount\": 80,\n        \"audienceRatingImage\": \"rottentomatoes://image.rating.upright\",\n        \"Genre\": [\n          {\n            \"id\": 184,\n            \"filter\": \"genre=184\",\n            \"tag\": \"Thriller\"\n          }\n        ],\n        \"Country\": [\n          {\n            \"id\": 116,\n            \"filter\": \"country=116\",\n            \"tag\": \"United States of America\"\n          }\n        ],\n        \"Guid\": [\n          {\n            \"id\": \"tvdb://2337\"\n          }\n        ],\n        \"Role\": [\n          {\n            \"id\": 220,\n            \"filter\": \"actor=220\",\n            \"tag\": \"Dennis Keiffer\",\n            \"tagKey\": \"5d77683554f42c001f8c4708\",\n            \"role\": \"Bar Guy (uncredited)\",\n            \"thumb\": \"https://metadata-static.plex.tv/6/people/648e9a7ea1d537bccfcd7615134b78ce.jpg\"\n          }\n        ],\n        \"User\": [\n          {\n            \"id\": 220\n          }\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The metadata of the library item.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "fff54cd7-3040-4a23-94cc-1602ada2e1d6",
      "type": "http",
      "documentation": "Get On Deck",
      "method": "get",
      "endpoint": "library/onDeck",
      "responses": [
        {
          "uuid": "f1561227-e4c7-4cc0-9cd6-855d8e01a7e1",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 16,\n    \"allowSync\": {{faker 'datatype.boolean'}},\n    \"identifier\": \"com.plexapp.plugins.library\",\n    \"mediaTagPrefix\": \"/system/bundle/media/flags/\",\n    \"mediaTagVersion\": 1680021154,\n    \"mixedParents\": {{faker 'datatype.boolean'}},\n    \"Metadata\": [\n      {\n        \"allowSync\": {{faker 'datatype.boolean'}},\n        \"librarySectionID\": 2,\n        \"librarySectionTitle\": \"TV Shows\",\n        \"librarySectionUUID\": \"4bb2521c-8ba9-459b-aaee-8ab8bc35eabd\",\n        \"ratingKey\": 49564,\n        \"key\": \"/library/metadata/49564\",\n        \"parentRatingKey\": 49557,\n        \"grandparentRatingKey\": 49556,\n        \"guid\": \"plex://episode/5ea7d7402e7ab10042e74d4f\",\n        \"parentGuid\": \"plex://season/602e754d67f4c8002ce54b3d\",\n        \"grandparentGuid\": \"plex://show/5d9c090e705e7a001e6e94d8\",\n        \"type\": \"episode\",\n        \"title\": \"Circus\",\n        \"grandparentKey\": \"/library/metadata/49556\",\n        \"parentKey\": \"/library/metadata/49557\",\n        \"librarySectionKey\": \"/library/sections/2\",\n        \"grandparentTitle\": \"Bluey (2018)\",\n        \"parentTitle\": \"Season 2\",\n        \"contentRating\": \"TV-Y\",\n        \"summary\": \"Bluey is the ringmaster in a game of circus with her friends but Hercules wants to play his motorcycle game instead. Luckily Bluey has a solution to keep everyone happy.\",\n        \"index\": 33,\n        \"parentIndex\": 2,\n        \"lastViewedAt\": 1681908352,\n        \"year\": 2018,\n        \"thumb\": \"/library/metadata/49564/thumb/1654258204\",\n        \"art\": \"/library/metadata/49556/art/1680939546\",\n        \"parentThumb\": \"/library/metadata/49557/thumb/1654258204\",\n        \"grandparentThumb\": \"/library/metadata/49556/thumb/1680939546\",\n        \"grandparentArt\": \"/library/metadata/49556/art/1680939546\",\n        \"grandparentTheme\": \"/library/metadata/49556/theme/1680939546\",\n        \"duration\": 420080,\n        \"originallyAvailableAt\": \"2020-10-31T00:00:00.000Z\",\n        \"addedAt\": 1654258196,\n        \"updatedAt\": 1654258204,\n        \"Media\": [\n          {\n            \"id\": 80994,\n            \"duration\": 420080,\n            \"bitrate\": 1046,\n            \"width\": 1920,\n            \"height\": 1080,\n            \"aspectRatio\": 1.78,\n            \"audioChannels\": 2,\n            \"audioCodec\": \"aac\",\n            \"videoCodec\": \"hevc\",\n            \"videoResolution\": \"1080\",\n            \"container\": \"mkv\",\n            \"videoFrameRate\": \"PAL\",\n            \"audioProfile\": \"lc\",\n            \"videoProfile\": \"main\",\n            \"Part\": [\n              {\n                \"id\": 80994,\n                \"key\": \"/library/parts/80994/1655007810/file.mkv\",\n                \"duration\": 420080,\n                \"file\": \"/tvshows/Bluey (2018)/Bluey (2018) - S02E33 - Circus.mkv\",\n                \"size\": 55148931,\n                \"audioProfile\": \"lc\",\n                \"container\": \"mkv\",\n                \"videoProfile\": \"main\",\n                \"Stream\": [\n                  {\n                    \"id\": 211234,\n                    \"streamType\": 1,\n                    \"default\": {{faker 'datatype.boolean'}},\n                    \"codec\": \"hevc\",\n                    \"index\": {{faker 'number.int' max=99999}},\n                    \"bitrate\": 918,\n                    \"language\": \"English\",\n                    \"languageTag\": \"en\",\n                    \"languageCode\": \"eng\",\n                    \"bitDepth\": 8,\n                    \"chromaLocation\": \"left\",\n                    \"chromaSubsampling\": \"4:2:0\",\n                    \"codedHeight\": 1080,\n                    \"codedWidth\": 1920,\n                    \"colorRange\": \"tv\",\n                    \"frameRate\": 25,\n                    \"height\": 1080,\n                    \"level\": 120,\n                    \"profile\": \"main\",\n                    \"refFrames\": 1,\n                    \"width\": 1920,\n                    \"displayTitle\": \"1080p (HEVC Main)\",\n                    \"extendedDisplayTitle\": \"1080p (HEVC Main)\"\n                  }\n                ]\n              }\n            ]\n          }\n        ],\n        \"Guid\": [\n          {\n            \"id\": \"imdb://tt13303712\"\n          }\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The on Deck content",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "c5a2c5d1-a538-4e17-89d4-eb715f9949da",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "25658504-31a7-453d-830b-24597f9056b5",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ddc5dfad-294a-4327-b947-607a422f79ca",
      "type": "http",
      "documentation": "Get Resources",
      "method": "get",
      "endpoint": "resources",
      "responses": [
        {
          "uuid": "9cfcfdcd-871f-4411-9edc-d3ffdaa061c8",
          "body": "[\n  {\n    \"name\": \"\",\n    \"product\": \"\",\n    \"productVersion\": \"\",\n    \"platform\": \"\",\n    \"platformVersion\": \"\",\n    \"device\": \"\",\n    \"clientIdentifier\": \"\",\n    \"createdAt\": \"{{faker 'date.recent' 365}}\",\n    \"lastSeenAt\": \"{{faker 'date.recent' 365}}\",\n    \"provides\": \"\",\n    \"ownerId\": \"\",\n    \"sourceTitle\": \"\",\n    \"publicAddress\": \"\",\n    \"accessToken\": \"\",\n    \"owned\": {{faker 'datatype.boolean'}},\n    \"home\": {{faker 'datatype.boolean'}},\n    \"synced\": {{faker 'datatype.boolean'}},\n    \"relay\": {{faker 'datatype.boolean'}},\n    \"presence\": {{faker 'datatype.boolean'}},\n    \"httpsRequired\": {{faker 'datatype.boolean'}},\n    \"publicAddressMatches\": {{faker 'datatype.boolean'}},\n    \"dnsRebindingProtection\": {{faker 'datatype.boolean'}},\n    \"natLoopbackSupported\": {{faker 'datatype.boolean'}},\n    \"connections\": [\n      {\n        \"protocol\": \"\",\n        \"address\": \"\",\n        \"port\": {{faker 'number.int' max=99999}},\n        \"uri\": \"\",\n        \"local\": {{faker 'datatype.boolean'}},\n        \"relay\": {{faker 'datatype.boolean'}},\n        \"IPv6\": {{faker 'datatype.boolean'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "List of Plex Devices. This includes Plex hosted servers and clients",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "a49bd031-da3b-4e17-a82a-4ac90532b09b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "6ff06ef4-f9a4-482d-b740-d419d99cb8df",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "66e4d52d-8120-425c-b381-cd148dafc481",
      "type": "http",
      "documentation": "Logging a single line message.",
      "method": "get",
      "endpoint": "log",
      "responses": [
        {
          "uuid": "97b04802-38d2-4651-b416-ae4d5ff3e725",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Log Message Posted successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "6bd52d1f-b44c-4e08-81e7-d35c4059d0cc",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "ff0cec3f-a199-435e-ad27-69223bce5d3e",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "fc89156a-ee8f-4d88-8761-c637d22fd0ad",
      "type": "http",
      "documentation": "Logging a multi-line message",
      "method": "post",
      "endpoint": "log",
      "responses": [
        {
          "uuid": "0536b774-4e69-49fe-bf59-d0012cb0940c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Multi-Line Log Message Posted successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "7096fc06-2fac-4004-8a88-0f2867bd9d09",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "8d76a880-8e46-41c8-91e3-4d83454b9b36",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "259a86ba-7d82-44f2-9c70-1a33bae82fc2",
      "type": "http",
      "documentation": "Enabling Papertrail",
      "method": "get",
      "endpoint": "log/networked",
      "responses": [
        {
          "uuid": "694f86bc-95d5-441c-98dd-b28b3ae8c3ab",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Papertrail enabled successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "e3a3b743-4418-4951-b691-3cae4056ba59",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "bddcccba-f958-4f48-ab92-d7abba5211d0",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "d3a7f648-dca8-43d1-93b7-009931d53157",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "the user was not signed in",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "4614d7a5-dc2e-496f-ae9f-20827e530aec",
      "type": "http",
      "documentation": "Get MyPlex Account",
      "method": "get",
      "endpoint": "myplex/account",
      "responses": [
        {
          "uuid": "cf4bd158-6540-444d-aa00-f7a4f019f171",
          "body": "{\n  \"MyPlex\": {\n    \"authToken\": \"Z5v-PrNASDFpsaCi3CPK7\",\n    \"username\": \"example.email@mail.com\",\n    \"mappingState\": \"mapped\",\n    \"mappingError\": \"\",\n    \"signInState\": \"ok\",\n    \"publicAddress\": \"140.20.68.140\",\n    \"publicPort\": 32400,\n    \"privateAddress\": \"10.10.10.47\",\n    \"privatePort\": 32400,\n    \"subscriptionFeatures\": \"federated-auth,hardware_transcoding,home,hwtranscode,item_clusters,kevin-bacon,livetv,loudness,lyrics,music-analysis,music_videos,pass,photo_autotags,photos-v5,photosV6-edit,photosV6-tv-albums,premium_music_metadata,radio,server-manager,session_bandwidth_restrictions,session_kick,shared-radio,sync,trailers,tuner-sharing,type-first,unsupportedtuners,webhooks\",\n    \"subscriptionActive\": {{faker 'datatype.boolean'}},\n    \"subscriptionState\": \"Active\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "MyPlex Account",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "e358158f-e390-49ee-ab88-89f6aebb35a8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "c2a790aa-dfc4-425b-8cc5-e35c59c153b2",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ed2d50b5-6ab9-40ff-9513-af962b37fb08",
      "type": "http",
      "documentation": "Get a Resized Photo",
      "method": "get",
      "endpoint": "photo/:/transcode",
      "responses": [
        {
          "uuid": "4616fed1-99bd-4399-994a-3293f0851365",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Resized Image",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "e12ebc38-307b-4f00-8f1a-29ec1108621f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "b695c1ab-1119-4b22-ae6f-1ae345393833",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "d0a419f1-0008-4768-9f50-d8114d45ff20",
      "type": "http",
      "documentation": "Get a Pin",
      "method": "post",
      "endpoint": "pins",
      "responses": [
        {
          "uuid": "11ee8178-9f3a-469a-a659-a66eb071c34e",
          "body": "{\n  \"id\": 308667304,\n  \"code\": \"7RQZ\",\n  \"product\": \"0\",\n  \"trusted\": {{faker 'datatype.boolean'}},\n  \"qr\": \"https://plex.tv/api/v2/pins/qr/7RQZ\",\n  \"clientIdentifier\": \"\",\n  \"location\": {\n    \"code\": \"VI\",\n    \"continent_code\": \"NA\",\n    \"country\": \"United States Virgin Islands\",\n    \"city\": \"Amsterdam\",\n    \"european_union_member\": true,\n    \"time_zone\": \"America/St_Thomas\",\n    \"postal_code\": 802,\n    \"in_privacy_restricted_country\": true,\n    \"in_privacy_restricted_region\": true,\n    \"subdivisions\": \"Saint Thomas\",\n    \"coordinates\": \"18.3381, -64.8941\"\n  },\n  \"expiresIn\": 876,\n  \"createdAt\": \"2024-07-16T17:03:05Z\",\n  \"expiresAt\": \"2024-07-16T17:18:05Z\",\n  \"authToken\": \"\",\n  \"newRegistration\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Requests a new pin id used in the authentication flow",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "a200da9a-a6cb-4d81-90be-925bee2830e3",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1000,\n      \"message\": \"X-Plex-Client-Identifier is missing\",\n      \"status\": 400\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request response when the X-Plex-Client-Identifier is missing",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "6b6bc883-5b60-43b3-b7d0-7c37287c8c7d",
      "type": "http",
      "documentation": "Get Access Token by PinId",
      "method": "get",
      "endpoint": "pins/:pinID",
      "responses": [
        {
          "uuid": "861fe86e-abe4-45b6-8d59-161fb0b618ad",
          "body": "{\n  \"id\": 308667304,\n  \"code\": \"7RQZ\",\n  \"product\": \"0\",\n  \"trusted\": {{faker 'datatype.boolean'}},\n  \"qr\": \"https://plex.tv/api/v2/pins/qr/7RQZ\",\n  \"clientIdentifier\": \"\",\n  \"location\": {\n    \"code\": \"VI\",\n    \"continent_code\": \"NA\",\n    \"country\": \"United States Virgin Islands\",\n    \"city\": \"Amsterdam\",\n    \"european_union_member\": true,\n    \"time_zone\": \"America/St_Thomas\",\n    \"postal_code\": 802,\n    \"in_privacy_restricted_country\": true,\n    \"in_privacy_restricted_region\": true,\n    \"subdivisions\": \"Saint Thomas\",\n    \"coordinates\": \"18.3381, -64.8941\"\n  },\n  \"expiresIn\": 876,\n  \"createdAt\": \"2024-07-16T17:03:05Z\",\n  \"expiresAt\": \"2024-07-16T17:18:05Z\",\n  \"authToken\": \"\",\n  \"newRegistration\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The Pin with a non-null authToken when it has been verified by the user",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "38f5495e-b11b-4963-bb65-12cf9036a568",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1000,\n      \"message\": \"X-Plex-Client-Identifier is missing\",\n      \"status\": 400\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request response when the X-Plex-Client-Identifier is missing",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "c65af1e4-c9d4-4404-9a3e-32b4d54e9004",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1020,\n      \"message\": \"Code not found or expired\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Not Found or Expired",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "25dc2bda-5cce-4a39-b17b-1dba61c24108",
      "type": "http",
      "documentation": "Create a Playlist",
      "method": "post",
      "endpoint": "playlists",
      "responses": [
        {
          "uuid": "ed180374-ea13-43c9-b1da-d7ebff592e2b",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 7,\n    \"Metadata\": [\n      {\n        \"ratingKey\": \"96\",\n        \"key\": \"/playlists/96/items\",\n        \"guid\": \"com.plexapp.agents.none://a2f92937-1408-40e2-b022-63a8a9377e55\",\n        \"type\": \"playlist\",\n        \"title\": \"A Great Playlist\",\n        \"summary\": \"What a great playlist\",\n        \"smart\": {{faker 'datatype.boolean'}},\n        \"playlistType\": \"video\",\n        \"icon\": \"playlist://image.smart\",\n        \"viewCount\": 1,\n        \"lastViewedAt\": 1705719589,\n        \"leafCount\": 1,\n        \"addedAt\": 1705719589,\n        \"updatedAt\": 1705724593,\n        \"composite\": \"/playlists/96/composite/1705724593\",\n        \"duration\": 141000\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "returns all playlists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "9f26b274-c03b-4920-8157-298584739f4d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "5146975a-2818-4b2e-90c9-e2df35785a64",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "9fd69458-fa6c-450e-8a6a-29ef9d4fbc3a",
      "type": "http",
      "documentation": "Get All Playlists",
      "method": "get",
      "endpoint": "playlists",
      "responses": [
        {
          "uuid": "33170054-ea9f-4909-851e-0a701cf0e458",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 4,\n    \"Metadata\": [\n      {\n        \"ratingKey\": \"92\",\n        \"key\": \"/playlists/92/items\",\n        \"guid\": \"com.plexapp.agents.none://7ca5aaef-58e8-4828-9e21-c009c97f2903\",\n        \"type\": \"playlist\",\n        \"title\": \"Static Playlist\",\n        \"summary\": \"A Great Playlist\",\n        \"smart\": {{faker 'datatype.boolean'}},\n        \"playlistType\": \"video\",\n        \"composite\": \"/playlists/92/composite/1705716440\",\n        \"icon\": \"playlist://image.smart\",\n        \"viewCount\": 1,\n        \"lastViewedAt\": 1705716298,\n        \"duration\": 7328000,\n        \"leafCount\": 32,\n        \"addedAt\": 1705716298,\n        \"updatedAt\": 1705716440\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "returns all playlists",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "9f8e057f-1fcb-4b17-bafd-4e62820e51af",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "cea98334-cc6e-4a1a-9d1c-144af1d53db5",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "0cb72ca8-385b-40f6-8bb0-405ab3bad365",
      "type": "http",
      "documentation": "Retrieve Playlist",
      "method": "get",
      "endpoint": "playlists/:playlistID",
      "responses": [
        {
          "uuid": "0229ad76-5fe5-4b59-92d0-db4f742bbb60",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 1,\n    \"Metadata\": [\n      {\n        \"content\": \"library://x/directory/%2Flibrary%2Fsections%2F1%2Fall%3Ftype%3D1%26push%3D1%26title%3D2%26or%3D1%26title%3DSerenity%26pop%3D1\",\n        \"ratingKey\": \"95\",\n        \"key\": \"/playlists/95/items\",\n        \"guid\": \"com.plexapp.agents.none://87425529-380f-44b8-a689-9a0537e7ec91\",\n        \"type\": \"playlist\",\n        \"title\": \"Smart Movie Playlist\",\n        \"summary\": \"\",\n        \"smart\": true,\n        \"playlistType\": \"video\",\n        \"composite\": \"/playlists/95/composite/1705717387\",\n        \"icon\": \"playlist://image.smart\",\n        \"duration\": 282000,\n        \"leafCount\": 2,\n        \"addedAt\": 1705716493,\n        \"updatedAt\": 1705717387\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The playlist",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "8a5ce412-7f0c-445c-b7fa-3804954700d3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "92648388-e8a9-4e17-bb7f-8f1ab016b258",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "04f62f96-f66e-4cd5-892b-b807c1f0a5bb",
      "type": "http",
      "documentation": "Deletes a Playlist",
      "method": "delete",
      "endpoint": "playlists/:playlistID",
      "responses": [
        {
          "uuid": "cece1a3c-7277-4709-8b32-2df37b003851",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The playlist is deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "a2b57d2d-62a5-4e79-915d-5b71e6664010",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "15c340aa-a787-4a62-a39e-c2f9f60dc7e4",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "644542cb-2f31-472d-a4da-7585c67a07b7",
      "type": "http",
      "documentation": "Update a Playlist",
      "method": "put",
      "endpoint": "playlists/:playlistID",
      "responses": [
        {
          "uuid": "fc96f4b4-794a-45c8-b1af-567d816fa098",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The playlist is deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "16281793-3439-47f1-8fdf-821bc51482ba",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "60117921-9c59-4a5a-b51e-7c51bac527a1",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "a15bf1c2-063c-4dcc-a6fe-8a73b4ec542b",
      "type": "http",
      "documentation": "Retrieve Playlist Contents",
      "method": "get",
      "endpoint": "playlists/:playlistID/items",
      "responses": [
        {
          "uuid": "fe5981e7-0dc1-4519-8052-7783c53761d5",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 2,\n    \"composite\": \"/playlists/95/composite/1705717521\",\n    \"duration\": 282,\n    \"leafCount\": 2,\n    \"playlistType\": \"video\",\n    \"ratingKey\": \"95\",\n    \"smart\": true,\n    \"title\": \"Smart Movie Playlist\",\n    \"Metadata\": [\n      {\n        \"ratingKey\": \"17\",\n        \"key\": \"/library/metadata/17\",\n        \"guid\": \"plex://movie/5d77683f6f4521001ea9dc53\",\n        \"studio\": \"Universal Pictures\",\n        \"type\": \"movie\",\n        \"title\": \"Serenity\",\n        \"titleSort\": \"Amazing Spider-Man 2\",\n        \"librarySectionTitle\": \"Movies\",\n        \"librarySectionID\": 1,\n        \"librarySectionKey\": \"/library/sections/1\",\n        \"contentRating\": \"PG-13\",\n        \"summary\": \"Serenity continues the story of the TV series it was based upon (\\\"Firefly\\\"). River Tam had a secret - one in which she's not even aware - so dangerous, no one's safe, as an Alliance operative's sent to capture her, and all others are considered irrelevant to his job.\",\n        \"rating\": 8.2,\n        \"audienceRating\": 9.1,\n        \"year\": 2005,\n        \"tagline\": \"They aim to misbehave.\",\n        \"thumb\": \"/library/metadata/17/thumb/1705637165\",\n        \"art\": \"/library/metadata/17/art/1705637165\",\n        \"duration\": 141416,\n        \"originallyAvailableAt\": \"2005-09-29T00:00:00.000Z\",\n        \"addedAt\": 1705637164,\n        \"updatedAt\": 1705637165,\n        \"audienceRatingImage\": \"rottentomatoes://image.rating.upright\",\n        \"hasPremiumExtras\": \"1\",\n        \"hasPremiumPrimaryExtra\": \"1\",\n        \"ratingImage\": \"rottentomatoes://image.rating.ripe\",\n        \"Media\": [\n          {\n            \"id\": 15,\n            \"duration\": 141416,\n            \"bitrate\": 2273,\n            \"width\": 1920,\n            \"height\": 814,\n            \"aspectRatio\": 2.35,\n            \"audioChannels\": 2,\n            \"audioCodec\": \"aac\",\n            \"videoCodec\": \"h264\",\n            \"videoResolution\": \"1080\",\n            \"container\": \"mp4\",\n            \"videoFrameRate\": \"24p\",\n            \"optimizedForStreaming\": {{faker 'number.int' max=99999}},\n            \"audioProfile\": \"lc\",\n            \"has64bitOffsets\": {{faker 'datatype.boolean'}},\n            \"videoProfile\": \"high\",\n            \"Part\": [\n              {\n                \"id\": 15,\n                \"key\": \"/library/parts/15/1705637151/file.mp4\",\n                \"duration\": 141416,\n                \"file\": \"/movies/Serenity (2005)/Serenity (2005).mp4\",\n                \"size\": 40271948,\n                \"audioProfile\": \"lc\",\n                \"container\": \"mp4\",\n                \"has64bitOffsets\": {{faker 'datatype.boolean'}},\n                \"optimizedForStreaming\": {{faker 'datatype.boolean'}},\n                \"videoProfile\": \"high\"\n              }\n            ]\n          }\n        ],\n        \"Genre\": [\n          {\n            \"tag\": \"Action\"\n          }\n        ],\n        \"Country\": [\n          {\n            \"tag\": \"United States of America\"\n          }\n        ],\n        \"Director\": [\n          {\n            \"tag\": \"Joss Whedon\"\n          }\n        ],\n        \"Writer\": [\n          {\n            \"tag\": \"Joss Whedon\"\n          }\n        ],\n        \"Role\": [\n          {\n            \"tag\": \"Gina Torres\"\n          }\n        ]\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The playlist contents",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "bc1f6912-c7fa-45a6-8705-cb75aef019a8",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "6c1caae9-8974-4d26-a50d-fbfefced05ea",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "bbbb7635-dc81-413c-ba9b-b016bb2574be",
      "type": "http",
      "documentation": "Delete Playlist Contents",
      "method": "delete",
      "endpoint": "playlists/:playlistID/items",
      "responses": [
        {
          "uuid": "acf54c0a-786f-4a5f-9b38-88912c19cba5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The playlist contents are cleared",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "3c1e6785-ba44-4921-a6f6-21af800418df",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "a4ebeb2b-d523-4b31-9f07-c7f94546e37d",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "9b163790-8720-4813-ab44-4afc764b6715",
      "type": "http",
      "documentation": "Adding to a Playlist",
      "method": "put",
      "endpoint": "playlists/:playlistID/items",
      "responses": [
        {
          "uuid": "d19d80f8-a786-4e97-bae3-903ab64e69cc",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 1,\n    \"leafCountAdded\": 1,\n    \"leafCountRequested\": 1,\n    \"Metadata\": [\n      {\n        \"ratingKey\": \"94\",\n        \"key\": \"/playlists/94/items\",\n        \"guid\": \"com.plexapp.agents.none://972e3047-83d6-4848-a000-261f0af26ba2\",\n        \"type\": \"playlist\",\n        \"title\": \"A great playlist\",\n        \"summary\": \"One of my great playlists\",\n        \"smart\": {{faker 'datatype.boolean'}},\n        \"playlistType\": \"video\",\n        \"composite\": \"/playlists/94/composite/1705800070\",\n        \"duration\": 423000,\n        \"leafCount\": 3,\n        \"addedAt\": 1705716458,\n        \"updatedAt\": 1705800070\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Playlist Updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "3969c29b-7615-48f0-be2c-a1f040221bf4",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "6784ac72-b5ff-48f6-9bf5-a181f8bccb86",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "e6ff4c78-55d0-4891-8593-481fc527e4fe",
      "type": "http",
      "documentation": "Upload Playlist",
      "method": "post",
      "endpoint": "playlists/upload",
      "responses": [
        {
          "uuid": "9063d777-6d8b-44c4-8658-9d5510d80422",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The playlist is uploaded",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "2735897c-d6ba-4bf4-9a81-383baf888c07",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "30839aca-1013-48f3-8a32-a7f5045e3ebc",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "5d692723-6e04-40d5-9b42-e9cc036e918a",
      "type": "http",
      "documentation": "Get Search Results",
      "method": "get",
      "endpoint": "search",
      "responses": [
        {
          "uuid": "322644fe-cffd-431b-b27f-3bbf6d7feb1f",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 26,\n    \"identifier\": \"com.plexapp.plugins.library\",\n    \"mediaTagPrefix\": \"/system/bundle/media/flags/\",\n    \"mediaTagVersion\": 1680021154,\n    \"Metadata\": [\n      {\n        \"allowSync\": {{faker 'datatype.boolean'}},\n        \"librarySectionID\": 1,\n        \"librarySectionTitle\": \"Movies\",\n        \"librarySectionUUID\": \"322a231a-b7f7-49f5-920f-14c61199cd30\",\n        \"personal\": {{faker 'datatype.boolean'}},\n        \"sourceTitle\": \"Hera\",\n        \"ratingKey\": 10398,\n        \"key\": \"/library/metadata/10398\",\n        \"guid\": \"plex://movie/5d7768284de0ee001fcc8f52\",\n        \"studio\": \"Paramount\",\n        \"type\": \"movie\",\n        \"title\": \"Mission: Impossible\",\n        \"contentRating\": \"PG-13\",\n        \"summary\": \"When Ethan Hunt the leader of a crack espionage team whose perilous operation has gone awry with no explanation discovers that a mole has penetrated the CIA he's surprised to learn that he's the No. 1 suspect. To clear his name Hunt now must ferret out the real double agent and in the process even the score.\",\n        \"rating\": 6.6,\n        \"audienceRating\": 7.1,\n        \"year\": 1996,\n        \"tagline\": \"Expect the impossible.\",\n        \"thumb\": \"/library/metadata/10398/thumb/1679505055\",\n        \"art\": \"/library/metadata/10398/art/1679505055\",\n        \"duration\": 6612628,\n        \"originallyAvailableAt\": \"1996-05-22T00:00:00.000Z\",\n        \"addedAt\": 1589234571,\n        \"updatedAt\": 1679505055,\n        \"audienceRatingImage\": \"rottentomatoes://image.rating.upright\",\n        \"chapterSource\": \"media\",\n        \"primaryExtraKey\": \"/library/metadata/10501\",\n        \"ratingImage\": \"rottentomatoes://image.rating.ripe\",\n        \"Media\": [\n          {\n            \"id\": 26610,\n            \"duration\": 6612628,\n            \"bitrate\": 4751,\n            \"width\": 1916,\n            \"height\": 796,\n            \"aspectRatio\": 2.35,\n            \"audioChannels\": 6,\n            \"audioCodec\": \"aac\",\n            \"videoCodec\": \"hevc\",\n            \"videoResolution\": 1080,\n            \"container\": \"mkv\",\n            \"videoFrameRate\": \"24p\",\n            \"audioProfile\": \"lc\",\n            \"videoProfile\": \"main 10\",\n            \"Part\": [\n              {\n                \"id\": 26610,\n                \"key\": \"/library/parts/26610/1589234571/file.mkv\",\n                \"duration\": 6612628,\n                \"file\": \"/movies/Mission Impossible (1996)/Mission Impossible (1996) Bluray-1080p.mkv\",\n                \"size\": 3926903851,\n                \"audioProfile\": \"lc\",\n                \"container\": \"mkv\",\n                \"videoProfile\": \"main 10\"\n              }\n            ]\n          }\n        ],\n        \"Genre\": [\n          {\n            \"tag\": \"Action\"\n          }\n        ],\n        \"Director\": [\n          {\n            \"tag\": \"Brian De Palma\"\n          }\n        ],\n        \"Writer\": [\n          {\n            \"tag\": \"David Koepp\"\n          }\n        ],\n        \"Country\": [\n          {\n            \"tag\": \"United States of America\"\n          }\n        ],\n        \"Role\": [\n          {\n            \"tag\": \"Tom Cruise\"\n          }\n        ]\n      }\n    ],\n    \"Provider\": [\n      {\n        \"key\": \"/system/search\",\n        \"title\": \"Local Network\",\n        \"type\": \"mixed\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Search Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "bbbf170e-bade-4791-b7b5-e1072a79aa9a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "aecf4cf6-ec55-45bb-b9d7-c3dd28373ddb",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "56208ddb-c555-4210-aff1-6a31b855c728",
      "type": "http",
      "documentation": "Get a Transient Token.",
      "method": "get",
      "endpoint": "security/token",
      "responses": [
        {
          "uuid": "ab42acda-aa70-4a33-84b5-ea6a8a8ef962",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "A Transient Token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "8dc69b3b-79f6-4eff-868d-7f54ad300f8c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "d7b83ff0-f338-44bd-8034-a73789e37e2c",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "426f4999-7259-4097-b8a1-de78d34b251a",
      "type": "http",
      "documentation": "Get Source Connection Information",
      "method": "get",
      "endpoint": "security/resources",
      "responses": [
        {
          "uuid": "622f17c2-7408-4907-95b3-9ffd53da578b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Source Connection Information",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "717909b5-af54-483a-920d-3a13a49d3710",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "a2043c32-c133-437b-9593-2d51e49a46b8",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "fb238d9b-b8e1-4819-8116-512b8ce66862",
      "type": "http",
      "documentation": "Get Server List",
      "method": "get",
      "endpoint": "servers",
      "responses": [
        {
          "uuid": "0a227879-2768-4158-a9a8-1a269ddd54a3",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 1,\n    \"Server\": [\n      {\n        \"name\": \"Hera\",\n        \"host\": \"10.10.10.47\",\n        \"address\": \"10.10.10.47\",\n        \"port\": 32400,\n        \"machineIdentifier\": \"96f2fe7a78c9dc1f16a16bedbe90f98149be16b4\",\n        \"version\": \"1.31.3.6868-28fc46b27\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List of Servers",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "d789b761-9d0b-4f8e-9adf-b4c60adf50b6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "75b45877-7d10-41ba-a4db-f91f08b0e7e4",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "cd9e96f7-75af-4d9e-bfdf-06e6a7226c24",
      "type": "http",
      "documentation": "Get Media Statistics",
      "method": "get",
      "endpoint": "statistics/media",
      "responses": [
        {
          "uuid": "efeb5e2c-b724-4013-a3ae-604eb0c3f952",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 5497,\n    \"Device\": [\n      {\n        \"id\": 208,\n        \"name\": \"Roku Express\",\n        \"platform\": \"Roku\",\n        \"clientIdentifier\": \"793095d235660625108ef785cc7646e9\",\n        \"createdAt\": 1706470556\n      }\n    ],\n    \"Account\": [\n      {\n        \"id\": 238960586,\n        \"key\": \"/accounts/238960586\",\n        \"name\": \"Diane\",\n        \"defaultAudioLanguage\": \"en\",\n        \"autoSelectAudio\": true,\n        \"defaultSubtitleLanguage\": \"en\",\n        \"subtitleMode\": 1,\n        \"thumb\": \"https://plex.tv/users/50d83634246da1de/avatar?c=1707110967\"\n      }\n    ],\n    \"StatisticsMedia\": [\n      {\n        \"accountID\": 1,\n        \"deviceID\": 13,\n        \"timespan\": 4,\n        \"at\": 1707141600,\n        \"metadataType\": 4,\n        \"count\": 1,\n        \"duration\": 1555\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Media Statistics",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "8ca5afd3-0ca8-4693-aa78-b45c436068dd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "8da1dbf4-8165-4f36-a011-b51e5629f4ec",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "17baaaca-203b-4b86-b44d-feab4754feaa",
      "type": "http",
      "documentation": "Get Resources Statistics",
      "method": "get",
      "endpoint": "statistics/resources",
      "responses": [
        {
          "uuid": "a5291444-05be-4fd1-8a43-63ba7074c883",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 5497,\n    \"StatisticsResources\": [\n      {\n        \"timespan\": 6,\n        \"at\": 1718384427,\n        \"hostCpuUtilization\": 1.276,\n        \"processCpuUtilization\": 0.025,\n        \"hostMemoryUtilization\": 17.026,\n        \"processMemoryUtilization\": 0.493\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Resource Statistics",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "f9cc3d3b-ed16-4b9c-a27a-b0d135867aa0",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "a0312cfe-bdb6-49cc-a3ed-c297b432e034",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "f0c488fd-a24a-4865-9b30-72dc5e6faf58",
      "type": "http",
      "documentation": "Get Bandwidth Statistics",
      "method": "get",
      "endpoint": "statistics/bandwidth",
      "responses": [
        {
          "uuid": "a3017baf-6e20-4f67-b502-a8aa62defb6e",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 5497,\n    \"Device\": [\n      {\n        \"id\": 208,\n        \"name\": \"Roku Express\",\n        \"platform\": \"Roku\",\n        \"clientIdentifier\": \"793095d235660625108ef785cc7646e9\",\n        \"createdAt\": 1706470556\n      }\n    ],\n    \"Account\": [\n      {\n        \"id\": 238960586,\n        \"key\": \"/accounts/238960586\",\n        \"name\": \"Diane\",\n        \"defaultAudioLanguage\": \"en\",\n        \"autoSelectAudio\": true,\n        \"defaultSubtitleLanguage\": \"en\",\n        \"subtitleMode\": 1,\n        \"thumb\": \"https://plex.tv/users/50d83634246da1de/avatar?c=1707110967\"\n      }\n    ],\n    \"StatisticsBandwidth\": [\n      {\n        \"accountID\": 238960586,\n        \"deviceID\": {{faker 'number.int' max=99999}},\n        \"timespan\": 6,\n        \"at\": 1718387650,\n        \"lan\": true,\n        \"bytes\": 22\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Bandwidth Statistics",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "b793cd25-a435-4201-823d-5ff7db02fa95",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "19ff8b72-6a14-430c-b6c1-1571ca01043a",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "2fd8e3c4-8718-4b51-9b6c-086a30a4fb4a",
      "type": "http",
      "documentation": "Get Active Sessions",
      "method": "get",
      "endpoint": "status/sessions",
      "responses": [
        {
          "uuid": "e8c6c692-81dd-490b-9452-dd188820064f",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 1,\n    \"Metadata\": [\n      {\n        \"addedAt\": 1705543312,\n        \"art\": \"/library/metadata/39904/art/1705310687\",\n        \"duration\": 186240,\n        \"grandparentArt\": \"/library/metadata/39904/art/1705310687\",\n        \"grandparentGuid\": \"plex://artist/5d07bbfd403c6402904a6480\",\n        \"grandparentKey\": \"/library/metadata/39904\",\n        \"grandparentRatingKey\": \"39904\",\n        \"grandparentThumb\": \"/library/metadata/39904/thumb/1705310687\",\n        \"grandparentTitle\": \"Green Day\",\n        \"guid\": \"plex://track/6535834f71f22f36f71a8e8f\",\n        \"index\": 1,\n        \"key\": \"/library/metadata/67085\",\n        \"librarySectionID\": \"3\",\n        \"librarySectionKey\": \"/library/sections/3\",\n        \"librarySectionTitle\": \"Music\",\n        \"musicAnalysisVersion\": \"1\",\n        \"parentGuid\": \"plex://album/65394d6d472b8ab03ef47f12\",\n        \"parentIndex\": 1,\n        \"parentKey\": \"/library/metadata/67084\",\n        \"parentRatingKey\": \"67084\",\n        \"parentStudio\": \"Reprise Records\",\n        \"parentThumb\": \"/library/metadata/67084/thumb/1705543314\",\n        \"parentTitle\": \"Saviors\",\n        \"parentYear\": 2024,\n        \"ratingCount\": 45885,\n        \"ratingKey\": \"67085\",\n        \"sessionKey\": \"203\",\n        \"thumb\": \"/library/metadata/67084/thumb/1705543314\",\n        \"title\": \"The American Dream Is Killing Me\",\n        \"titleSort\": \"American Dream Is Killing Me\",\n        \"type\": \"track\",\n        \"updatedAt\": 1705543314,\n        \"viewOffset\": 1000,\n        \"Media\": [\n          {\n            \"audioChannels\": 2,\n            \"audioCodec\": \"flac\",\n            \"bitrate\": 1014,\n            \"container\": \"flac\",\n            \"duration\": 186240,\n            \"id\": \"130355\",\n            \"selected\": true,\n            \"Part\": [\n              {\n                \"container\": \"flac\",\n                \"duration\": 186240,\n                \"file\": \"/music/Green Day/Saviors (2024)/Green Day - Saviors - 01 - The American Dream Is Killing Me.flac\",\n                \"hasThumbnail\": \"1\",\n                \"id\": \"130625\",\n                \"key\": \"/library/parts/130625/1705543268/file.flac\",\n                \"size\": 23644000,\n                \"decision\": \"directplay\",\n                \"selected\": true,\n                \"Stream\": [\n                  {\n                    \"albumGain\": \"-12.94\",\n                    \"albumPeak\": \"1.000000\",\n                    \"albumRange\": \"4.751014\",\n                    \"audioChannelLayout\": \"stereo\",\n                    \"bitDepth\": 16,\n                    \"bitrate\": 1014,\n                    \"channels\": 2,\n                    \"codec\": \"flac\",\n                    \"displayTitle\": \"FLAC (Stereo)\",\n                    \"extendedDisplayTitle\": \"FLAC (Stereo)\",\n                    \"gain\": \"-12.94\",\n                    \"id\": \"352487\",\n                    \"index\": {{faker 'number.int' max=99999}},\n                    \"loudness\": \"-5.94\",\n                    \"lra\": \"1.74\",\n                    \"peak\": \"1.000000\",\n                    \"samplingRate\": 44100,\n                    \"selected\": true,\n                    \"streamType\": 2,\n                    \"location\": \"direct\"\n                  }\n                ]\n              }\n            ]\n          }\n        ],\n        \"User\": {\n          \"id\": \"1\",\n          \"thumb\": \"https://plex.tv/users/844780fc6f8a26b5/avatar?c=1705853661\",\n          \"title\": \"Blindkitty38\"\n        },\n        \"Player\": {\n          \"address\": \"10.10.10.171\",\n          \"machineIdentifier\": \"3tsdzir85m2onc3qyr255aq1\",\n          \"model\": \"standalone\",\n          \"platform\": \"windows\",\n          \"platformVersion\": \"10.0.22621\",\n          \"product\": \"Plex for Windows\",\n          \"profile\": \"Plex Desktop\",\n          \"remotePublicAddress\": \"68.248.140.20\",\n          \"state\": \"playing\",\n          \"title\": \"DESKTOP-BL80MTD\",\n          \"version\": \"1.85.0.4071-21128b56\",\n          \"local\": true,\n          \"relayed\": {{faker 'datatype.boolean'}},\n          \"secure\": true,\n          \"userID\": 1\n        },\n        \"Session\": {\n          \"id\": \"93h7e00ncblxncqw9lkfaoxi\",\n          \"bandwidth\": 1050,\n          \"location\": \"lan\"\n        }\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List of Active Plex Sessions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "546b1745-6f17-4144-be70-5186f163659a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "57f48e15-22ca-4d86-af57-e922ac21e207",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "f72a6c58-2fc1-416a-8d0b-92c09f249b91",
      "type": "http",
      "documentation": "Get Session History",
      "method": "get",
      "endpoint": "status/sessions/history/all",
      "responses": [
        {
          "uuid": "5d6ed39c-23ba-4ea9-b0a3-c6ec8e95ad87",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 10855,\n    \"Metadata\": [\n      {\n        \"historyKey\": \"/status/sessions/history/1\",\n        \"key\": \"/library/metadata/32171\",\n        \"ratingKey\": \"32171\",\n        \"librarySectionID\": \"2\",\n        \"parentKey\": \"/library/metadata/32170\",\n        \"grandparentKey\": \"/library/metadata/32132\",\n        \"title\": \"The Noise That Blue Makes\",\n        \"grandparentTitle\": \"Taskmaster\",\n        \"type\": \"episode\",\n        \"thumb\": \"/library/metadata/32171/thumb/-1\",\n        \"parentThumb\": \"/library/metadata/32170/thumb/1654134301\",\n        \"grandparentThumb\": \"/library/metadata/32132/thumb/1703933346\",\n        \"grandparentArt\": \"/library/metadata/32132/art/1703933346\",\n        \"index\": 1,\n        \"parentIndex\": 13,\n        \"originallyAvailableAt\": \"2022-04-14T00:00:00.000Z\",\n        \"viewedAt\": 1654139223,\n        \"accountID\": 1,\n        \"deviceID\": 5\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List of Plex Sessions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "669d1a01-4db4-4378-ac60-6a639e0b7386",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "75ee504b-4169-4299-aba3-7578393b3088",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "63b9de71-d648-49fe-a027-5b0cc6aa5421",
      "type": "http",
      "documentation": "Get Transcode Sessions",
      "method": "get",
      "endpoint": "transcode/sessions",
      "responses": [
        {
          "uuid": "f69c42cc-b282-4a67-b387-98cd3479ffa8",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 1,\n    \"TranscodeSession\": [\n      {\n        \"key\": \"vv3i2q2lax92qlzul1hbd4bx\",\n        \"throttled\": false,\n        \"complete\": false,\n        \"progress\": 1.7999999523162842,\n        \"size\": -22,\n        \"speed\": 25.100000381469727,\n        \"error\": false,\n        \"duration\": 1445695,\n        \"remaining\": 53,\n        \"context\": \"streaming\",\n        \"sourceVideoCodec\": \"h264\",\n        \"sourceAudioCodec\": \"aac\",\n        \"videoDecision\": \"transcode\",\n        \"audioDecision\": \"transcode\",\n        \"subtitleDecision\": \"burn\",\n        \"protocol\": \"http\",\n        \"container\": \"mkv\",\n        \"videoCodec\": \"h264\",\n        \"audioCodec\": \"opus\",\n        \"audioChannels\": 1,\n        \"transcodeHwRequested\": true,\n        \"timeStamp\": 1705895805.4919229,\n        \"maxOffsetAvailable\": 29.53,\n        \"minOffsetAvailable\": 3.003000020980835\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The Transcode Sessions",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "64271aad-5579-447a-abe2-c760a6402e2d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "49913a6b-c083-4af6-83f4-457ca5cbc0dd",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "6e8ff70e-0ad9-40ea-b7a4-0eb8dc5033ba",
      "type": "http",
      "documentation": "Stop a Transcode Session",
      "method": "delete",
      "endpoint": "transcode/sessions/:sessionKey",
      "responses": [
        {
          "uuid": "d5e6ef33-84d3-4d43-942a-5a4b22942dc9",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "The Transcode Session ended",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "5bbf5008-4e75-4d20-92d6-b68a02dec8d2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "da8661e5-6987-48d8-9db6-153abf36c3be",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "34ea2f6f-1041-480c-a5ae-703f37805e28",
      "type": "http",
      "documentation": "Querying status of updates",
      "method": "get",
      "endpoint": "updater/status",
      "responses": [
        {
          "uuid": "e430769b-909d-4c41-8a62-17bf538fcdc2",
          "body": "{\n  \"MediaContainer\": {\n    \"size\": 1,\n    \"canInstall\": {{faker 'datatype.boolean'}},\n    \"checkedAt\": 1705801232,\n    \"downloadURL\": \"https://plex.tv/downloads/latest/5?channel=8&build=linux-x86_64&distro=redhat&X-Plex-Token=xxxxxxxxxxxxxxxxxxxx\",\n    \"status\": {{faker 'number.int' max=99999}},\n    \"Release\": [\n      {\n        \"key\": \"https://plex.tv/updater/releases/5136\",\n        \"version\": \"1.40.0.7775-456fbaf97\",\n        \"added\": \"(PLEASE NOTE) This version makes changes to the database which will make it compatible only with server versions 1.31.2 or higher (released March 14). You will not be able to use your database on Plex Media Server versions lower than this after this update. Please also be patient when updating to this version if you have a very large database and allow the upgrade process to finish.\\n(Collections) Items added to a collection from the item context menu will now lock the collection field on the items (#12793)\\n(Music) Store track genres and add filtering options (#14653)\\n(Music) Support ID3v2.4 null-separated tags for genres and release type (#14653)\\n(View History) No longer create a view history entry for items marked as played (#10888)\\n(Web) Updated to 4.118.0\",\n        \"fixed\": \"(Agents) Changing a 'Other Videos' type library to the modern movie agent would fail (#14483)\\n(Agents) It is possible that agents are not initialised during startup on rare occasions (#14654)\\n(Agents) Remove the legacy OpenSubtitles agent which is no longer supported upstream (#14667)\\n(Collection) Server could become unresponsive when collection membership changes (#14612)\\n(DVR) Previously watched recordings could be deleted without being watched again (#13779)\\n(Libraries) When performing fix match on items from certain music libraries the language would default to Arabic (#14501)\\n(Library) The Content Rating not equal to None filter does not work (#14620)\\n(Search) Album search results could contain all the album's tracks too (#14486)\\n(Subtitles) In some circumstances, sidecar subtitles can show up for media when they're no longer available (#14674)\\n(Transcoder) HW encoding would fail on devices with no rate control (#14222)\\n(Transcoder) Software transcoding on Ubuntu could cause unexpected behavior (#14605)\",\n        \"downloadURL\": \"https://plex.tv/downloads/latest/5?channel=8&build=linux-x86_64&distro=redhat&X-Plex-Token=xxxxxxxxxxxxxxxxxxxx\",\n        \"state\": \"notify\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The Server Updates",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "6f9abd73-4946-4477-8f91-0a47fa630432",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "3dc9c827-fa33-44da-90a9-f7e8a6af48d0",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "1a89f1db-0b9f-4789-86d3-286ce266329c",
      "type": "http",
      "documentation": "Checking for updates",
      "method": "put",
      "endpoint": "updater/check",
      "responses": [
        {
          "uuid": "6b7cfaad-db9a-45c8-ab29-2a4a40433053",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The update check is started, if download is set to 1 and the system is able to update automatically, the update download will start.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "ca046129-c784-4819-86a6-95e90156b08a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "062da435-9745-48fb-9969-dfede1e2747b",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "8eeab482-e3f5-4818-bd13-5631460725d6",
      "type": "http",
      "documentation": "Apply Updates",
      "method": "put",
      "endpoint": "updater/apply",
      "responses": [
        {
          "uuid": "f7a42578-bef4-486e-91fe-e06423c148a3",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "If the update process started correctly",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "414dc29d-ef45-4d4a-8c98-5242c0c51ffa",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "0a93960d-6954-4c21-9bd1-3272d79491f1",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "ae14f82c-8cff-4e6d-a355-dbb6de153f3d",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "If the update process failed to start",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ed8b309c-aa02-41c8-9b11-01813444cb61",
      "type": "http",
      "documentation": "Start Universal Transcode",
      "method": "get",
      "endpoint": "video/:/transcode/universal/start.mpd",
      "responses": [
        {
          "uuid": "1bdd6086-a78f-4a1e-b51e-a666da88a57e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The transcode session has started",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "e256647d-4534-4dfa-b64c-d5d618ce5853",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "31867ef2-270f-45f7-8476-92df007cd381",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "5784ea18-6522-440b-b58f-9fa8d8c77621",
      "type": "http",
      "documentation": "Get UserData By Token",
      "method": "get",
      "endpoint": "user",
      "responses": [
        {
          "uuid": "71b3adc8-a281-4300-9d7f-98eb8d73f7fe",
          "body": "{\n  \"adsConsent\": {{faker 'datatype.boolean'}},\n  \"adsConsentReminderAt\": \"{{faker 'date.recent' 365}}\",\n  \"adsConsentSetAt\": \"{{faker 'date.recent' 365}}\",\n  \"anonymous\": {{faker 'datatype.boolean'}},\n  \"authToken\": \"CxoUzBTSV5hsxjTpFKaf\",\n  \"backupCodesCreated\": {{faker 'datatype.boolean'}},\n  \"confirmed\": {{faker 'datatype.boolean'}},\n  \"country\": \"US\",\n  \"email\": \"username@email.com\",\n  \"emailOnlyAuth\": {{faker 'datatype.boolean'}},\n  \"experimentalFeatures\": {{faker 'datatype.boolean'}},\n  \"friendlyName\": \"friendlyUsername\",\n  \"entitlements\": [\n    \"[]\"\n  ],\n  \"guest\": {{faker 'datatype.boolean'}},\n  \"hasPassword\": true,\n  \"home\": {{faker 'datatype.boolean'}},\n  \"homeAdmin\": {{faker 'datatype.boolean'}},\n  \"homeSize\": 1,\n  \"id\": 13692262,\n  \"joinedAt\": 1721154902,\n  \"locale\": \"\",\n  \"mailingListActive\": {{faker 'datatype.boolean'}},\n  \"mailingListStatus\": \"{{oneOf (array 'active' 'unsubscribed')}}\",\n  \"maxHomeSize\": 15,\n  \"pin\": \"\",\n  \"profile\": {\n    \"autoSelectAudio\": true,\n    \"defaultAudioLanguage\": \"ja\",\n    \"defaultSubtitleLanguage\": \"en\",\n    \"autoSelectSubtitle\": \"{{oneOf (array '0' '1')}}\",\n    \"defaultSubtitleAccessibility\": \"{{oneOf (array '0' '1')}}\",\n    \"defaultSubtitleForced\": \"{{oneOf (array '0' '1')}}\",\n    \"watchedIndicator\": \"{{oneOf (array '0' '1')}}\",\n    \"mediaReviewsVisibility\": \"{{oneOf (array '0' '1')}}\"\n  },\n  \"protected\": {{faker 'datatype.boolean'}},\n  \"rememberExpiresAt\": 1722364046,\n  \"restricted\": {{faker 'datatype.boolean'}},\n  \"roles\": [\n    \"\"\n  ],\n  \"scrobbleTypes\": \"\",\n  \"services\": [\n    {\n      \"identifier\": \"metadata-dev\",\n      \"endpoint\": \"https://epg.provider.plex.tv\",\n      \"token\": \"DjoMtqFAGRL1uVtCyF1dKIorTbShJeqv\",\n      \"secret\": \"\",\n      \"status\": \"{{oneOf (array 'online' 'offline')}}\"\n    }\n  ],\n  \"subscription\": {\n    \"features\": [\n      \"{{oneOf (array 'Android - Dolby Vision' 'Android - PiP' 'CU Sunset' 'HRK_enable_EUR' 'TREBLE-show-features' 'ad-countdown-timer' 'adaptive_bitrate' 'amazon-loop-debug' 'avod-ad-analysis' 'avod-new-media' 'blacklist_get_signin' 'client-radio-stations' 'cloudflare-turnstile-required' 'collections' 'comments_and_replies_push_notifications' 'community_access_plex_tv' 'companions_sonos' 'custom-home-removal' 'disable_home_user_friendships' 'disable_sharing_friendships' 'drm_support' 'exclude restrictions' 'federated-auth' 'friend_request_push_notifications' 'guided-upgrade' 'home' 'increase-password-complexity' 'ios14-privacy-banner' 'iterable-notification-tokens' 'keep-payment-method' 'kevin-bacon' 'korea-consent' 'le_isrg_root_x1' 'lets_encrypt' 'lightning-dvr-pivot' 'live-tv-support-incomplete-segments' 'livetv' 'metadata_search' 'new_plex_pass_prices' 'news-provider-sunset-modal' 'photos-favorites' 'photos-metadata-edition' 'pms_health' 'radio' 'rate-limit-client-token' 'scrobbling-service-plex-tv' 'shared_server_notification' 'shared_source_notification' 'signin_with_apple' 'spring_serve_ad_provider' 'transcoder_cache' 'tuner-sharing' 'two-factor-authentication' 'unsupportedtuners' 'upgrade-3ds2' 'vod-schema' 'vod_cloudflare' 'watch-together-invite' 'web_server_dashboard')}}\"\n    ],\n    \"active\": true,\n    \"subscribedAt\": \"2021-04-12T18:21:12Z\",\n    \"status\": \"{{oneOf (array 'Inactive' 'Active')}}\",\n    \"paymentService\": \"\",\n    \"plan\": \"\"\n  },\n  \"subscriptionDescription\": \"\",\n  \"subscriptions\": [\n    {\n      \"features\": [\n        \"{{oneOf (array 'Android - Dolby Vision' 'Android - PiP' 'CU Sunset' 'HRK_enable_EUR' 'TREBLE-show-features' 'ad-countdown-timer' 'adaptive_bitrate' 'amazon-loop-debug' 'avod-ad-analysis' 'avod-new-media' 'blacklist_get_signin' 'client-radio-stations' 'cloudflare-turnstile-required' 'collections' 'comments_and_replies_push_notifications' 'community_access_plex_tv' 'companions_sonos' 'custom-home-removal' 'disable_home_user_friendships' 'disable_sharing_friendships' 'drm_support' 'exclude restrictions' 'federated-auth' 'friend_request_push_notifications' 'guided-upgrade' 'home' 'increase-password-complexity' 'ios14-privacy-banner' 'iterable-notification-tokens' 'keep-payment-method' 'kevin-bacon' 'korea-consent' 'le_isrg_root_x1' 'lets_encrypt' 'lightning-dvr-pivot' 'live-tv-support-incomplete-segments' 'livetv' 'metadata_search' 'new_plex_pass_prices' 'news-provider-sunset-modal' 'photos-favorites' 'photos-metadata-edition' 'pms_health' 'radio' 'rate-limit-client-token' 'scrobbling-service-plex-tv' 'shared_server_notification' 'shared_source_notification' 'signin_with_apple' 'spring_serve_ad_provider' 'transcoder_cache' 'tuner-sharing' 'two-factor-authentication' 'unsupportedtuners' 'upgrade-3ds2' 'vod-schema' 'vod_cloudflare' 'watch-together-invite' 'web_server_dashboard')}}\"\n      ],\n      \"active\": true,\n      \"subscribedAt\": \"2021-04-12T18:21:12Z\",\n      \"status\": \"{{oneOf (array 'Inactive' 'Active')}}\",\n      \"paymentService\": \"\",\n      \"plan\": \"\"\n    }\n  ],\n  \"thumb\": \"https://plex.tv/users/a4f43c1ebfde43a5/avatar?c=8372075101\",\n  \"title\": \"UsernameTitle\",\n  \"twoFactorEnabled\": {{faker 'datatype.boolean'}},\n  \"username\": \"Username\",\n  \"uuid\": \"dae343c1f45beb4f\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Logged in user details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "deedc48a-5413-46d4-82d0-6ee79950f315",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "2404a84f-0388-43f2-a2d2-655c2898fe1a",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "27b9718c-d25e-4563-acc8-1988c3323bd8",
      "type": "http",
      "documentation": "Get User SignIn Data",
      "method": "post",
      "endpoint": "users/signin",
      "responses": [
        {
          "uuid": "b188f58b-2c11-4976-84ea-0cc2832fce53",
          "body": "{\n  \"adsConsent\": {{faker 'datatype.boolean'}},\n  \"adsConsentReminderAt\": \"{{faker 'date.recent' 365}}\",\n  \"adsConsentSetAt\": \"{{faker 'date.recent' 365}}\",\n  \"anonymous\": {{faker 'datatype.boolean'}},\n  \"authToken\": \"CxoUzBTSV5hsxjTpFKaf\",\n  \"backupCodesCreated\": {{faker 'datatype.boolean'}},\n  \"confirmed\": {{faker 'datatype.boolean'}},\n  \"country\": \"US\",\n  \"email\": \"username@email.com\",\n  \"emailOnlyAuth\": {{faker 'datatype.boolean'}},\n  \"experimentalFeatures\": {{faker 'datatype.boolean'}},\n  \"friendlyName\": \"friendlyUsername\",\n  \"entitlements\": [\n    \"[]\"\n  ],\n  \"guest\": {{faker 'datatype.boolean'}},\n  \"hasPassword\": true,\n  \"home\": {{faker 'datatype.boolean'}},\n  \"homeAdmin\": {{faker 'datatype.boolean'}},\n  \"homeSize\": 1,\n  \"id\": 13692262,\n  \"joinedAt\": 1721154902,\n  \"locale\": \"\",\n  \"mailingListActive\": {{faker 'datatype.boolean'}},\n  \"mailingListStatus\": \"{{oneOf (array 'active' 'unsubscribed')}}\",\n  \"maxHomeSize\": 15,\n  \"pin\": \"\",\n  \"profile\": {\n    \"autoSelectAudio\": true,\n    \"defaultAudioLanguage\": \"ja\",\n    \"defaultSubtitleLanguage\": \"en\",\n    \"autoSelectSubtitle\": \"{{oneOf (array '0' '1')}}\",\n    \"defaultSubtitleAccessibility\": \"{{oneOf (array '0' '1')}}\",\n    \"defaultSubtitleForced\": \"{{oneOf (array '0' '1')}}\",\n    \"watchedIndicator\": \"{{oneOf (array '0' '1')}}\",\n    \"mediaReviewsVisibility\": \"{{oneOf (array '0' '1')}}\"\n  },\n  \"protected\": {{faker 'datatype.boolean'}},\n  \"rememberExpiresAt\": 1722364046,\n  \"restricted\": {{faker 'datatype.boolean'}},\n  \"roles\": [\n    \"\"\n  ],\n  \"scrobbleTypes\": \"\",\n  \"services\": [\n    {\n      \"identifier\": \"metadata-dev\",\n      \"endpoint\": \"https://epg.provider.plex.tv\",\n      \"token\": \"DjoMtqFAGRL1uVtCyF1dKIorTbShJeqv\",\n      \"secret\": \"\",\n      \"status\": \"{{oneOf (array 'online' 'offline')}}\"\n    }\n  ],\n  \"subscription\": {\n    \"features\": [\n      \"{{oneOf (array 'Android - Dolby Vision' 'Android - PiP' 'CU Sunset' 'HRK_enable_EUR' 'TREBLE-show-features' 'ad-countdown-timer' 'adaptive_bitrate' 'amazon-loop-debug' 'avod-ad-analysis' 'avod-new-media' 'blacklist_get_signin' 'client-radio-stations' 'cloudflare-turnstile-required' 'collections' 'comments_and_replies_push_notifications' 'community_access_plex_tv' 'companions_sonos' 'custom-home-removal' 'disable_home_user_friendships' 'disable_sharing_friendships' 'drm_support' 'exclude restrictions' 'federated-auth' 'friend_request_push_notifications' 'guided-upgrade' 'home' 'increase-password-complexity' 'ios14-privacy-banner' 'iterable-notification-tokens' 'keep-payment-method' 'kevin-bacon' 'korea-consent' 'le_isrg_root_x1' 'lets_encrypt' 'lightning-dvr-pivot' 'live-tv-support-incomplete-segments' 'livetv' 'metadata_search' 'new_plex_pass_prices' 'news-provider-sunset-modal' 'photos-favorites' 'photos-metadata-edition' 'pms_health' 'radio' 'rate-limit-client-token' 'scrobbling-service-plex-tv' 'shared_server_notification' 'shared_source_notification' 'signin_with_apple' 'spring_serve_ad_provider' 'transcoder_cache' 'tuner-sharing' 'two-factor-authentication' 'unsupportedtuners' 'upgrade-3ds2' 'vod-schema' 'vod_cloudflare' 'watch-together-invite' 'web_server_dashboard')}}\"\n    ],\n    \"active\": true,\n    \"subscribedAt\": \"2021-04-12T18:21:12Z\",\n    \"status\": \"{{oneOf (array 'Inactive' 'Active')}}\",\n    \"paymentService\": \"\",\n    \"plan\": \"\"\n  },\n  \"subscriptionDescription\": \"\",\n  \"subscriptions\": [\n    {\n      \"features\": [\n        \"{{oneOf (array 'Android - Dolby Vision' 'Android - PiP' 'CU Sunset' 'HRK_enable_EUR' 'TREBLE-show-features' 'ad-countdown-timer' 'adaptive_bitrate' 'amazon-loop-debug' 'avod-ad-analysis' 'avod-new-media' 'blacklist_get_signin' 'client-radio-stations' 'cloudflare-turnstile-required' 'collections' 'comments_and_replies_push_notifications' 'community_access_plex_tv' 'companions_sonos' 'custom-home-removal' 'disable_home_user_friendships' 'disable_sharing_friendships' 'drm_support' 'exclude restrictions' 'federated-auth' 'friend_request_push_notifications' 'guided-upgrade' 'home' 'increase-password-complexity' 'ios14-privacy-banner' 'iterable-notification-tokens' 'keep-payment-method' 'kevin-bacon' 'korea-consent' 'le_isrg_root_x1' 'lets_encrypt' 'lightning-dvr-pivot' 'live-tv-support-incomplete-segments' 'livetv' 'metadata_search' 'new_plex_pass_prices' 'news-provider-sunset-modal' 'photos-favorites' 'photos-metadata-edition' 'pms_health' 'radio' 'rate-limit-client-token' 'scrobbling-service-plex-tv' 'shared_server_notification' 'shared_source_notification' 'signin_with_apple' 'spring_serve_ad_provider' 'transcoder_cache' 'tuner-sharing' 'two-factor-authentication' 'unsupportedtuners' 'upgrade-3ds2' 'vod-schema' 'vod_cloudflare' 'watch-together-invite' 'web_server_dashboard')}}\"\n      ],\n      \"active\": true,\n      \"subscribedAt\": \"2021-04-12T18:21:12Z\",\n      \"status\": \"{{oneOf (array 'Inactive' 'Active')}}\",\n      \"paymentService\": \"\",\n      \"plan\": \"\"\n    }\n  ],\n  \"thumb\": \"https://plex.tv/users/a4f43c1ebfde43a5/avatar?c=8372075101\",\n  \"title\": \"UsernameTitle\",\n  \"twoFactorEnabled\": {{faker 'datatype.boolean'}},\n  \"username\": \"Username\",\n  \"uuid\": \"dae343c1f45beb4f\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Returns the user account data with a valid auth token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "dd81ebcd-1109-48ff-8e06-6f31ac040a1a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "2af2e3bc-50f1-49ef-9e6d-c0ef455311ca",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "d48c809f-aa68-4a93-8b7f-47271b50792d",
      "type": "http",
      "documentation": "Get User Watchlist",
      "method": "get",
      "endpoint": "library/sections/watchlist/:filter",
      "responses": [
        {
          "uuid": "2168f65b-805b-4de3-8091-f94491169d57",
          "body": "{\n  \"librarySectionID\": \"\",\n  \"librarySectionTitle\": \"\",\n  \"offset\": {{faker 'number.int' max=99999}},\n  \"totalSize\": {{faker 'number.int' max=99999}},\n  \"identifier\": \"\",\n  \"size\": {{faker 'number.int' max=99999}},\n  \"Metadata\": [\n    {\n      \"art\": \"\",\n      \"guid\": \"\",\n      \"key\": \"\",\n      \"ratingKey\": \"\",\n      \"studio\": \"\",\n      \"tagline\": \"\",\n      \"type\": \"\",\n      \"thumb\": \"\",\n      \"addedAt\": {{faker 'number.int' max=99999}},\n      \"duration\": {{faker 'number.int' max=99999}},\n      \"publicPagesURL\": \"\",\n      \"slug\": \"\",\n      \"userState\": {{faker 'datatype.boolean'}},\n      \"title\": \"\",\n      \"contentRating\": \"\",\n      \"originallyAvailableAt\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"year\": {{faker 'number.int' max=99999}},\n      \"Image\": [\n        {\n          \"alt\": \"\",\n          \"type\": \"\",\n          \"url\": \"\"\n        }\n      ],\n      \"banner\": \"\",\n      \"rating\": {{faker 'number.int' max=99999}},\n      \"expiresAt\": {{faker 'number.int' max=99999}},\n      \"originalTitle\": \"\",\n      \"audienceRating\": {{faker 'number.int' max=99999}},\n      \"audienceRatingImage\": \"\",\n      \"ratingImage\": \"\",\n      \"imdbRatingCount\": {{faker 'number.int' max=99999}},\n      \"subtype\": \"\",\n      \"theme\": \"\",\n      \"leafCount\": {{faker 'number.int' max=99999}},\n      \"childCount\": {{faker 'number.int' max=99999}},\n      \"isContinuingSeries\": {{faker 'datatype.boolean'}},\n      \"skipChildren\": {{faker 'datatype.boolean'}},\n      \"availabilityId\": \"\",\n      \"streamingMediaId\": \"\",\n      \"playableKey\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Watchlist Data",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "51e06da8-a86d-459d-a580-efa84d16bee2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad Request - A parameter was not specified, or was specified incorrectly.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "1dc0d6f0-3d3d-4123-b39f-e55ef49ebc27",
          "body": "{\n  \"errors\": [\n    {\n      \"code\": 1001,\n      \"message\": \"User could not be authenticated\",\n      \"status\": 401\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    }
  ],
  "rootChildren": [
    {
      "type": "route",
      "uuid": "08c8e281-3861-4788-bcc2-a00443b31c5b"
    },
    {
      "type": "route",
      "uuid": "edfc5b84-09b4-4665-a000-aa7c626d7e8e"
    },
    {
      "type": "route",
      "uuid": "ad637582-881b-4400-a279-8c17925f2413"
    },
    {
      "type": "route",
      "uuid": "4c67fc3e-f892-46c1-89eb-fd9b64635c09"
    },
    {
      "type": "route",
      "uuid": "bec833a2-b1e0-4bb4-95b0-d7de62daaea7"
    },
    {
      "type": "route",
      "uuid": "b9829e76-f289-4dba-a12d-d9589baaf2e3"
    },
    {
      "type": "route",
      "uuid": "0cea0fa9-583c-4b62-a496-34d4d0653085"
    },
    {
      "type": "route",
      "uuid": "3c961e39-9600-4638-a081-4c4479104329"
    },
    {
      "type": "route",
      "uuid": "d8f62799-2352-4e02-885d-3f36fdf9d3a6"
    },
    {
      "type": "route",
      "uuid": "20f7ef77-0ad1-4b42-b200-ddd3b54aad28"
    },
    {
      "type": "route",
      "uuid": "6231e00e-06c7-4444-a008-d6d52f52c193"
    },
    {
      "type": "route",
      "uuid": "7ca18386-ca96-40a3-8751-09a4297e827a"
    },
    {
      "type": "route",
      "uuid": "a5a2c6e8-698a-41e9-a927-b39112fb770c"
    },
    {
      "type": "route",
      "uuid": "dc295da5-ce97-46f8-ae34-30966e243d9e"
    },
    {
      "type": "route",
      "uuid": "a1923f7d-f16c-4db6-9a1e-b729e5529dcb"
    },
    {
      "type": "route",
      "uuid": "ced3b406-0e96-471f-9570-75731e31f27d"
    },
    {
      "type": "route",
      "uuid": "b3aedaf3-1b04-4179-b865-13f703f3e83d"
    },
    {
      "type": "route",
      "uuid": "651add9d-4950-4cc3-9805-aa0b84fc54cc"
    },
    {
      "type": "route",
      "uuid": "708a0052-150f-41ab-a278-f8f44ac83306"
    },
    {
      "type": "route",
      "uuid": "fd661ea6-3498-4356-93b5-404b1b78dcbf"
    },
    {
      "type": "route",
      "uuid": "acd9fff4-2a9f-443d-8a51-251263203451"
    },
    {
      "type": "route",
      "uuid": "ecd9de1e-e6df-4cd7-a868-f0a7a909c4a8"
    },
    {
      "type": "route",
      "uuid": "858ab47e-a72f-4ae8-b3b8-9443fa983c30"
    },
    {
      "type": "route",
      "uuid": "7e400d52-93e1-41fd-b30e-1535cd902c3b"
    },
    {
      "type": "route",
      "uuid": "6dcae78f-3050-490f-a6bd-2f53d6c01b2d"
    },
    {
      "type": "route",
      "uuid": "54a17150-9e32-485d-8415-83a86c0a7b43"
    },
    {
      "type": "route",
      "uuid": "87eb0fcf-2d2b-4530-968b-a60ee8f04d0e"
    },
    {
      "type": "route",
      "uuid": "200d1f28-409c-41ec-9249-0b88e2f5d43b"
    },
    {
      "type": "route",
      "uuid": "a245d48d-179d-4d3a-ac0d-1e4a8f8aa1ad"
    },
    {
      "type": "route",
      "uuid": "889caad0-668a-40e5-b6db-991df09d272f"
    },
    {
      "type": "route",
      "uuid": "a7220efc-0876-46b0-89b5-6ce00165a624"
    },
    {
      "type": "route",
      "uuid": "6e805567-2c1f-4087-a58e-7605de649e9f"
    },
    {
      "type": "route",
      "uuid": "9a555973-4966-41ac-8d7d-e36b8853efc6"
    },
    {
      "type": "route",
      "uuid": "414ef7af-93b7-4d23-91d9-d3dc17dfedaa"
    },
    {
      "type": "route",
      "uuid": "452a2292-3e4e-4514-8e65-7df88b33412a"
    },
    {
      "type": "route",
      "uuid": "fff54cd7-3040-4a23-94cc-1602ada2e1d6"
    },
    {
      "type": "route",
      "uuid": "ddc5dfad-294a-4327-b947-607a422f79ca"
    },
    {
      "type": "route",
      "uuid": "66e4d52d-8120-425c-b381-cd148dafc481"
    },
    {
      "type": "route",
      "uuid": "fc89156a-ee8f-4d88-8761-c637d22fd0ad"
    },
    {
      "type": "route",
      "uuid": "259a86ba-7d82-44f2-9c70-1a33bae82fc2"
    },
    {
      "type": "route",
      "uuid": "4614d7a5-dc2e-496f-ae9f-20827e530aec"
    },
    {
      "type": "route",
      "uuid": "ed2d50b5-6ab9-40ff-9513-af962b37fb08"
    },
    {
      "type": "route",
      "uuid": "d0a419f1-0008-4768-9f50-d8114d45ff20"
    },
    {
      "type": "route",
      "uuid": "6b6bc883-5b60-43b3-b7d0-7c37287c8c7d"
    },
    {
      "type": "route",
      "uuid": "25dc2bda-5cce-4a39-b17b-1dba61c24108"
    },
    {
      "type": "route",
      "uuid": "9fd69458-fa6c-450e-8a6a-29ef9d4fbc3a"
    },
    {
      "type": "route",
      "uuid": "0cb72ca8-385b-40f6-8bb0-405ab3bad365"
    },
    {
      "type": "route",
      "uuid": "04f62f96-f66e-4cd5-892b-b807c1f0a5bb"
    },
    {
      "type": "route",
      "uuid": "644542cb-2f31-472d-a4da-7585c67a07b7"
    },
    {
      "type": "route",
      "uuid": "a15bf1c2-063c-4dcc-a6fe-8a73b4ec542b"
    },
    {
      "type": "route",
      "uuid": "bbbb7635-dc81-413c-ba9b-b016bb2574be"
    },
    {
      "type": "route",
      "uuid": "9b163790-8720-4813-ab44-4afc764b6715"
    },
    {
      "type": "route",
      "uuid": "e6ff4c78-55d0-4891-8593-481fc527e4fe"
    },
    {
      "type": "route",
      "uuid": "5d692723-6e04-40d5-9b42-e9cc036e918a"
    },
    {
      "type": "route",
      "uuid": "56208ddb-c555-4210-aff1-6a31b855c728"
    },
    {
      "type": "route",
      "uuid": "426f4999-7259-4097-b8a1-de78d34b251a"
    },
    {
      "type": "route",
      "uuid": "fb238d9b-b8e1-4819-8116-512b8ce66862"
    },
    {
      "type": "route",
      "uuid": "cd9e96f7-75af-4d9e-bfdf-06e6a7226c24"
    },
    {
      "type": "route",
      "uuid": "17baaaca-203b-4b86-b44d-feab4754feaa"
    },
    {
      "type": "route",
      "uuid": "f0c488fd-a24a-4865-9b30-72dc5e6faf58"
    },
    {
      "type": "route",
      "uuid": "2fd8e3c4-8718-4b51-9b6c-086a30a4fb4a"
    },
    {
      "type": "route",
      "uuid": "f72a6c58-2fc1-416a-8d0b-92c09f249b91"
    },
    {
      "type": "route",
      "uuid": "63b9de71-d648-49fe-a027-5b0cc6aa5421"
    },
    {
      "type": "route",
      "uuid": "6e8ff70e-0ad9-40ea-b7a4-0eb8dc5033ba"
    },
    {
      "type": "route",
      "uuid": "34ea2f6f-1041-480c-a5ae-703f37805e28"
    },
    {
      "type": "route",
      "uuid": "1a89f1db-0b9f-4789-86d3-286ce266329c"
    },
    {
      "type": "route",
      "uuid": "8eeab482-e3f5-4818-bd13-5631460725d6"
    },
    {
      "type": "route",
      "uuid": "ed8b309c-aa02-41c8-9b11-01813444cb61"
    },
    {
      "type": "route",
      "uuid": "5784ea18-6522-440b-b58f-9fa8d8c77621"
    },
    {
      "type": "route",
      "uuid": "27b9718c-d25e-4563-acc8-1988c3323bd8"
    },
    {
      "type": "route",
      "uuid": "d48c809f-aa68-4a93-8b7f-47271b50792d"
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": [],
  "callbacks": []
}