{
  "uuid": "33663d6f-3a32-41f6-9655-f6cfdbf35570",
  "lastMigration": 32,
  "name": "Overseerr API",
  "endpointPrefix": "api/v1",
  "latency": 0,
  "port": 3000,
  "hostname": "",
  "folders": [],
  "routes": [
    {
      "uuid": "f1a9a7ef-4e62-4d47-a4b9-82a0ff4c6aa0",
      "type": "http",
      "documentation": "Get Overseerr status",
      "method": "get",
      "endpoint": "status",
      "responses": [
        {
          "uuid": "22740077-f04f-4cd6-9d9d-b311ee07fd77",
          "body": "{\n  \"version\": \"1.0.0\",\n  \"commitTag\": \"\",\n  \"updateAvailable\": {{faker 'datatype.boolean'}},\n  \"commitsBehind\": {{faker 'number.int' max=99999}},\n  \"restartRequired\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned status",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "17b21127-1d7b-4363-a8f5-a6223c2b61c3",
      "type": "http",
      "documentation": "Get application data volume status",
      "method": "get",
      "endpoint": "status/appdata",
      "responses": [
        {
          "uuid": "d356823f-7449-429d-a72c-6c0fafbe3223",
          "body": "{\n  \"appData\": true,\n  \"appDataPath\": \"/app/config\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Application data volume status and path",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "dae9cc60-af1e-45ad-8a39-e901a1ca6eaf",
      "type": "http",
      "documentation": "Get main settings",
      "method": "get",
      "endpoint": "settings/main",
      "responses": [
        {
          "uuid": "94f19817-feac-4df9-94da-792e4d194c25",
          "body": "{\n  \"apiKey\": \"\",\n  \"appLanguage\": \"en\",\n  \"applicationTitle\": \"Overseerr\",\n  \"applicationUrl\": \"https://os.example.com\",\n  \"trustProxy\": true,\n  \"csrfProtection\": {{faker 'datatype.boolean'}},\n  \"hideAvailable\": {{faker 'datatype.boolean'}},\n  \"partialRequestsEnabled\": {{faker 'datatype.boolean'}},\n  \"localLogin\": true,\n  \"newPlexLogin\": true,\n  \"defaultPermissions\": 32\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "00a5ca08-b0f7-4aa1-8617-a7870231f9cb",
      "type": "http",
      "documentation": "Update main settings",
      "method": "post",
      "endpoint": "settings/main",
      "responses": [
        {
          "uuid": "5ef01718-62fd-464f-90eb-730589263df3",
          "body": "{\n  \"apiKey\": \"\",\n  \"appLanguage\": \"en\",\n  \"applicationTitle\": \"Overseerr\",\n  \"applicationUrl\": \"https://os.example.com\",\n  \"trustProxy\": true,\n  \"csrfProtection\": {{faker 'datatype.boolean'}},\n  \"hideAvailable\": {{faker 'datatype.boolean'}},\n  \"partialRequestsEnabled\": {{faker 'datatype.boolean'}},\n  \"localLogin\": true,\n  \"newPlexLogin\": true,\n  \"defaultPermissions\": 32\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Values were sucessfully updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "c74020c3-1c2e-442f-9ef2-44e3c53cb94f",
      "type": "http",
      "documentation": "Get main settings with newly-generated API key",
      "method": "post",
      "endpoint": "settings/main/regenerate",
      "responses": [
        {
          "uuid": "aa8630a5-4dbb-4abd-bad2-057725229fe0",
          "body": "{\n  \"apiKey\": \"\",\n  \"appLanguage\": \"en\",\n  \"applicationTitle\": \"Overseerr\",\n  \"applicationUrl\": \"https://os.example.com\",\n  \"trustProxy\": true,\n  \"csrfProtection\": {{faker 'datatype.boolean'}},\n  \"hideAvailable\": {{faker 'datatype.boolean'}},\n  \"partialRequestsEnabled\": {{faker 'datatype.boolean'}},\n  \"localLogin\": true,\n  \"newPlexLogin\": true,\n  \"defaultPermissions\": 32\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "9095460d-3d8c-4fbb-a359-0be35ce4b60b",
      "type": "http",
      "documentation": "Get Plex settings",
      "method": "get",
      "endpoint": "settings/plex",
      "responses": [
        {
          "uuid": "e6a3d3bf-4f3a-4b24-a3b7-8db2de421191",
          "body": "{\n  \"name\": \"Main Server\",\n  \"machineId\": \"1234123412341234\",\n  \"ip\": \"127.0.0.1\",\n  \"port\": 32400,\n  \"useSsl\": {{faker 'datatype.boolean'}},\n  \"libraries\": [\n    {\n      \"id\": \"\",\n      \"name\": \"Movies\",\n      \"enabled\": {{faker 'datatype.boolean'}}\n    }\n  ],\n  \"webAppUrl\": \"https://app.plex.tv/desktop\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "8e1ac12e-a4c2-4a50-a0e6-28495f911469",
      "type": "http",
      "documentation": "Update Plex settings",
      "method": "post",
      "endpoint": "settings/plex",
      "responses": [
        {
          "uuid": "6eec8e3d-0e12-4747-88eb-557ed538ee7b",
          "body": "{\n  \"name\": \"Main Server\",\n  \"machineId\": \"1234123412341234\",\n  \"ip\": \"127.0.0.1\",\n  \"port\": 32400,\n  \"useSsl\": {{faker 'datatype.boolean'}},\n  \"libraries\": [\n    {\n      \"id\": \"\",\n      \"name\": \"Movies\",\n      \"enabled\": {{faker 'datatype.boolean'}}\n    }\n  ],\n  \"webAppUrl\": \"https://app.plex.tv/desktop\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Values were successfully updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "c5c86283-91ef-4c4a-bf9e-b701c9f335c8",
      "type": "http",
      "documentation": "Get Plex libraries",
      "method": "get",
      "endpoint": "settings/plex/library",
      "responses": [
        {
          "uuid": "fe61be12-2d13-4ebb-9684-4ca16ca4aa2e",
          "body": "[\n  {\n    \"id\": \"\",\n    \"name\": \"Movies\",\n    \"enabled\": {{faker 'datatype.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Plex libraries returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ca0e95ea-8e03-4da1-bb09-5a499876d413",
      "type": "http",
      "documentation": "Get status of full Plex library scan",
      "method": "get",
      "endpoint": "settings/plex/sync",
      "responses": [
        {
          "uuid": "f57c74f1-f80c-4168-b59c-051abbb73630",
          "body": "{\n  \"running\": {{faker 'datatype.boolean'}},\n  \"progress\": {{faker 'number.int' max=99999}},\n  \"total\": 100,\n  \"currentLibrary\": {\n    \"id\": \"\",\n    \"name\": \"Movies\",\n    \"enabled\": {{faker 'datatype.boolean'}}\n  },\n  \"libraries\": [\n    {\n      \"id\": \"\",\n      \"name\": \"Movies\",\n      \"enabled\": {{faker 'datatype.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Status of Plex scan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "158ceb66-483a-4133-bef6-82fa751db0c4",
      "type": "http",
      "documentation": "Start full Plex library scan",
      "method": "post",
      "endpoint": "settings/plex/sync",
      "responses": [
        {
          "uuid": "21869ae5-6f4a-4a01-91d1-8ba20b404f50",
          "body": "{\n  \"running\": {{faker 'datatype.boolean'}},\n  \"progress\": {{faker 'number.int' max=99999}},\n  \"total\": 100,\n  \"currentLibrary\": {\n    \"id\": \"\",\n    \"name\": \"Movies\",\n    \"enabled\": {{faker 'datatype.boolean'}}\n  },\n  \"libraries\": [\n    {\n      \"id\": \"\",\n      \"name\": \"Movies\",\n      \"enabled\": {{faker 'datatype.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Status of Plex scan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "6d0b3936-bba1-4145-9f5a-b900706335b7",
      "type": "http",
      "documentation": "Gets the user's available Plex servers",
      "method": "get",
      "endpoint": "settings/plex/devices/servers",
      "responses": [
        {
          "uuid": "ff4652f4-c2da-4a74-b199-4546c48da6bc",
          "body": "[\n  {\n    \"name\": \"My Plex Server\",\n    \"product\": \"Plex Media Server\",\n    \"productVersion\": \"1.21\",\n    \"platform\": \"Linux\",\n    \"platformVersion\": \"default/linux/amd64/17.1/systemd\",\n    \"device\": \"PC\",\n    \"clientIdentifier\": \"85a943ce-a0cc-4d2a-a4ec-f74f06e40feb\",\n    \"createdAt\": \"2021-01-01T00:00:00.000Z\",\n    \"lastSeenAt\": \"2021-01-01T00:00:00.000Z\",\n    \"provides\": [\n      \"server\"\n    ],\n    \"owned\": true,\n    \"ownerID\": \"12345\",\n    \"home\": true,\n    \"sourceTitle\": \"xyzabc\",\n    \"accessToken\": \"supersecretaccesstoken\",\n    \"publicAddress\": \"127.0.0.1\",\n    \"httpsRequired\": true,\n    \"synced\": true,\n    \"relay\": true,\n    \"dnsRebindingProtection\": {{faker 'datatype.boolean'}},\n    \"natLoopbackSupported\": {{faker 'datatype.boolean'}},\n    \"publicAddressMatches\": {{faker 'datatype.boolean'}},\n    \"presence\": true,\n    \"connection\": [\n      {\n        \"protocol\": \"https\",\n        \"address\": \"127.0.0.1\",\n        \"port\": 32400,\n        \"uri\": \"https://127-0-0-1.2ab6ce1a093d465e910def96cf4e4799.plex.direct:32400\",\n        \"local\": true,\n        \"status\": 200,\n        \"message\": \"OK\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "6dfa5ccf-3c6e-4c23-9ff2-a3bea6c5a65b",
      "type": "http",
      "documentation": "Get Plex users",
      "method": "get",
      "endpoint": "settings/plex/users",
      "responses": [
        {
          "uuid": "c1acdc49-5434-45e3-8c79-25929bedbd19",
          "body": "[\n  {\n    \"id\": \"\",\n    \"title\": \"\",\n    \"username\": \"\",\n    \"email\": \"\",\n    \"thumb\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Plex users",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "da24fe2e-2292-451c-a812-909fd46789dc",
      "type": "http",
      "documentation": "Get Tautulli settings",
      "method": "get",
      "endpoint": "settings/tautulli",
      "responses": [
        {
          "uuid": "ed71eda7-1e23-4739-b5b4-f704720bfa95",
          "body": "{\n  \"hostname\": \"tautulli.example.com\",\n  \"port\": 8181,\n  \"useSsl\": {{faker 'datatype.boolean'}},\n  \"apiKey\": \"\",\n  \"externalUrl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "dc39d6db-64a4-4003-b851-0c2eed7d5c6e",
      "type": "http",
      "documentation": "Update Tautulli settings",
      "method": "post",
      "endpoint": "settings/tautulli",
      "responses": [
        {
          "uuid": "a23f4e6b-3f9a-44a2-8cf5-fff4bb57b9a2",
          "body": "{\n  \"hostname\": \"tautulli.example.com\",\n  \"port\": 8181,\n  \"useSsl\": {{faker 'datatype.boolean'}},\n  \"apiKey\": \"\",\n  \"externalUrl\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Values were successfully updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "4c145360-44b7-4ebf-9dbf-4bb634be9c6d",
      "type": "http",
      "documentation": "Get Radarr settings",
      "method": "get",
      "endpoint": "settings/radarr",
      "responses": [
        {
          "uuid": "209dd95f-24df-4af8-afb2-20036c56adbf",
          "body": "[\n  {\n    \"id\": {{faker 'number.int' max=99999}},\n    \"name\": \"Radarr Main\",\n    \"hostname\": \"127.0.0.1\",\n    \"port\": 7878,\n    \"apiKey\": \"exampleapikey\",\n    \"useSsl\": {{faker 'datatype.boolean'}},\n    \"baseUrl\": \"\",\n    \"activeProfileId\": 1,\n    \"activeProfileName\": \"720p/1080p\",\n    \"activeDirectory\": \"/movies\",\n    \"is4k\": {{faker 'datatype.boolean'}},\n    \"minimumAvailability\": \"In Cinema\",\n    \"isDefault\": {{faker 'datatype.boolean'}},\n    \"externalUrl\": \"http://radarr.example.com\",\n    \"syncEnabled\": {{faker 'datatype.boolean'}},\n    \"preventSearch\": {{faker 'datatype.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Values were returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "37753e2a-1c7d-4e06-856a-68226211c6fe",
      "type": "http",
      "documentation": "Create Radarr instance",
      "method": "post",
      "endpoint": "settings/radarr",
      "responses": [
        {
          "uuid": "55ba142d-1f20-4f7f-bbce-26d2a0ce6bfb",
          "body": "{\n  \"id\": {{faker 'number.int' max=99999}},\n  \"name\": \"Radarr Main\",\n  \"hostname\": \"127.0.0.1\",\n  \"port\": 7878,\n  \"apiKey\": \"exampleapikey\",\n  \"useSsl\": {{faker 'datatype.boolean'}},\n  \"baseUrl\": \"\",\n  \"activeProfileId\": 1,\n  \"activeProfileName\": \"720p/1080p\",\n  \"activeDirectory\": \"/movies\",\n  \"is4k\": {{faker 'datatype.boolean'}},\n  \"minimumAvailability\": \"In Cinema\",\n  \"isDefault\": {{faker 'datatype.boolean'}},\n  \"externalUrl\": \"http://radarr.example.com\",\n  \"syncEnabled\": {{faker 'datatype.boolean'}},\n  \"preventSearch\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "New Radarr instance created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "646b5e92-d8bd-45a9-9f28-7532af79e8bb",
      "type": "http",
      "documentation": "Test Radarr configuration",
      "method": "post",
      "endpoint": "settings/radarr/test",
      "responses": [
        {
          "uuid": "b9504f96-9c48-4a5b-8d26-4563738fc8b5",
          "body": "{\n  \"profiles\": [\n    {\n      \"id\": 1,\n      \"name\": \"720p/1080p\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Succesfully connected to Radarr instance",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "035e099b-0c83-453d-ab66-d8f41c01238f",
      "type": "http",
      "documentation": "Update Radarr instance",
      "method": "put",
      "endpoint": "settings/radarr/:radarrId",
      "responses": [
        {
          "uuid": "94b9f30b-1b3d-4737-aef9-2fa899dbfdd1",
          "body": "{\n  \"id\": {{faker 'number.int' max=99999}},\n  \"name\": \"Radarr Main\",\n  \"hostname\": \"127.0.0.1\",\n  \"port\": 7878,\n  \"apiKey\": \"exampleapikey\",\n  \"useSsl\": {{faker 'datatype.boolean'}},\n  \"baseUrl\": \"\",\n  \"activeProfileId\": 1,\n  \"activeProfileName\": \"720p/1080p\",\n  \"activeDirectory\": \"/movies\",\n  \"is4k\": {{faker 'datatype.boolean'}},\n  \"minimumAvailability\": \"In Cinema\",\n  \"isDefault\": {{faker 'datatype.boolean'}},\n  \"externalUrl\": \"http://radarr.example.com\",\n  \"syncEnabled\": {{faker 'datatype.boolean'}},\n  \"preventSearch\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Radarr instance updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "210043cc-782b-44fb-a95d-49a965a48381",
      "type": "http",
      "documentation": "Delete Radarr instance",
      "method": "delete",
      "endpoint": "settings/radarr/:radarrId",
      "responses": [
        {
          "uuid": "382c0d12-ef44-4dcc-a130-a9f51055fcd5",
          "body": "{\n  \"id\": {{faker 'number.int' max=99999}},\n  \"name\": \"Radarr Main\",\n  \"hostname\": \"127.0.0.1\",\n  \"port\": 7878,\n  \"apiKey\": \"exampleapikey\",\n  \"useSsl\": {{faker 'datatype.boolean'}},\n  \"baseUrl\": \"\",\n  \"activeProfileId\": 1,\n  \"activeProfileName\": \"720p/1080p\",\n  \"activeDirectory\": \"/movies\",\n  \"is4k\": {{faker 'datatype.boolean'}},\n  \"minimumAvailability\": \"In Cinema\",\n  \"isDefault\": {{faker 'datatype.boolean'}},\n  \"externalUrl\": \"http://radarr.example.com\",\n  \"syncEnabled\": {{faker 'datatype.boolean'}},\n  \"preventSearch\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Radarr instance updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "8bcbc92d-0a48-4fa2-8552-be26b4f4f03e",
      "type": "http",
      "documentation": "Get available Radarr profiles",
      "method": "get",
      "endpoint": "settings/radarr/:radarrId/profiles",
      "responses": [
        {
          "uuid": "b82dbb3d-a913-48d3-950e-3c8cc472bda4",
          "body": "[\n  {\n    \"id\": 1,\n    \"name\": \"720p/1080p\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned list of profiles",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "4718f267-21f8-4ed7-b232-8025863bfab2",
      "type": "http",
      "documentation": "Get Sonarr settings",
      "method": "get",
      "endpoint": "settings/sonarr",
      "responses": [
        {
          "uuid": "7ab61ea6-fbbd-4348-82c2-64dead701482",
          "body": "[\n  {\n    \"id\": {{faker 'number.int' max=99999}},\n    \"name\": \"Sonarr Main\",\n    \"hostname\": \"127.0.0.1\",\n    \"port\": 8989,\n    \"apiKey\": \"exampleapikey\",\n    \"useSsl\": {{faker 'datatype.boolean'}},\n    \"baseUrl\": \"\",\n    \"activeProfileId\": 1,\n    \"activeProfileName\": \"720p/1080p\",\n    \"activeDirectory\": \"/tv/\",\n    \"activeLanguageProfileId\": 1,\n    \"activeAnimeProfileId\": {{faker 'number.int' max=99999}},\n    \"activeAnimeLanguageProfileId\": {{faker 'number.int' max=99999}},\n    \"activeAnimeProfileName\": \"720p/1080p\",\n    \"activeAnimeDirectory\": \"\",\n    \"is4k\": {{faker 'datatype.boolean'}},\n    \"enableSeasonFolders\": {{faker 'datatype.boolean'}},\n    \"isDefault\": {{faker 'datatype.boolean'}},\n    \"externalUrl\": \"http://radarr.example.com\",\n    \"syncEnabled\": {{faker 'datatype.boolean'}},\n    \"preventSearch\": {{faker 'datatype.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Values were returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "f5447fab-99b5-4eda-b7bd-e3126bb02e5f",
      "type": "http",
      "documentation": "Create Sonarr instance",
      "method": "post",
      "endpoint": "settings/sonarr",
      "responses": [
        {
          "uuid": "3e642ec0-57f7-4661-809f-0577ffc82e07",
          "body": "{\n  \"id\": {{faker 'number.int' max=99999}},\n  \"name\": \"Sonarr Main\",\n  \"hostname\": \"127.0.0.1\",\n  \"port\": 8989,\n  \"apiKey\": \"exampleapikey\",\n  \"useSsl\": {{faker 'datatype.boolean'}},\n  \"baseUrl\": \"\",\n  \"activeProfileId\": 1,\n  \"activeProfileName\": \"720p/1080p\",\n  \"activeDirectory\": \"/tv/\",\n  \"activeLanguageProfileId\": 1,\n  \"activeAnimeProfileId\": {{faker 'number.int' max=99999}},\n  \"activeAnimeLanguageProfileId\": {{faker 'number.int' max=99999}},\n  \"activeAnimeProfileName\": \"720p/1080p\",\n  \"activeAnimeDirectory\": \"\",\n  \"is4k\": {{faker 'datatype.boolean'}},\n  \"enableSeasonFolders\": {{faker 'datatype.boolean'}},\n  \"isDefault\": {{faker 'datatype.boolean'}},\n  \"externalUrl\": \"http://radarr.example.com\",\n  \"syncEnabled\": {{faker 'datatype.boolean'}},\n  \"preventSearch\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "New Sonarr instance created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "9f154f36-736e-43c4-833a-454bb000c3dd",
      "type": "http",
      "documentation": "Test Sonarr configuration",
      "method": "post",
      "endpoint": "settings/sonarr/test",
      "responses": [
        {
          "uuid": "422a3aac-0b9b-42e3-abe6-8a347b2c5f84",
          "body": "{\n  \"profiles\": [\n    {\n      \"id\": 1,\n      \"name\": \"720p/1080p\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Succesfully connected to Sonarr instance",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "e29d703b-e9f0-439e-999d-bc1a58e7e2dc",
      "type": "http",
      "documentation": "Update Sonarr instance",
      "method": "put",
      "endpoint": "settings/sonarr/:sonarrId",
      "responses": [
        {
          "uuid": "5fc71633-6713-4b2c-a236-cc0c10492741",
          "body": "{\n  \"id\": {{faker 'number.int' max=99999}},\n  \"name\": \"Sonarr Main\",\n  \"hostname\": \"127.0.0.1\",\n  \"port\": 8989,\n  \"apiKey\": \"exampleapikey\",\n  \"useSsl\": {{faker 'datatype.boolean'}},\n  \"baseUrl\": \"\",\n  \"activeProfileId\": 1,\n  \"activeProfileName\": \"720p/1080p\",\n  \"activeDirectory\": \"/tv/\",\n  \"activeLanguageProfileId\": 1,\n  \"activeAnimeProfileId\": {{faker 'number.int' max=99999}},\n  \"activeAnimeLanguageProfileId\": {{faker 'number.int' max=99999}},\n  \"activeAnimeProfileName\": \"720p/1080p\",\n  \"activeAnimeDirectory\": \"\",\n  \"is4k\": {{faker 'datatype.boolean'}},\n  \"enableSeasonFolders\": {{faker 'datatype.boolean'}},\n  \"isDefault\": {{faker 'datatype.boolean'}},\n  \"externalUrl\": \"http://radarr.example.com\",\n  \"syncEnabled\": {{faker 'datatype.boolean'}},\n  \"preventSearch\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Sonarr instance updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "74fac1be-829a-4f83-bf57-08d3f65d41b0",
      "type": "http",
      "documentation": "Delete Sonarr instance",
      "method": "delete",
      "endpoint": "settings/sonarr/:sonarrId",
      "responses": [
        {
          "uuid": "7a8233c4-3fc2-470d-8c32-dfa4f10e8d0f",
          "body": "{\n  \"id\": {{faker 'number.int' max=99999}},\n  \"name\": \"Sonarr Main\",\n  \"hostname\": \"127.0.0.1\",\n  \"port\": 8989,\n  \"apiKey\": \"exampleapikey\",\n  \"useSsl\": {{faker 'datatype.boolean'}},\n  \"baseUrl\": \"\",\n  \"activeProfileId\": 1,\n  \"activeProfileName\": \"720p/1080p\",\n  \"activeDirectory\": \"/tv/\",\n  \"activeLanguageProfileId\": 1,\n  \"activeAnimeProfileId\": {{faker 'number.int' max=99999}},\n  \"activeAnimeLanguageProfileId\": {{faker 'number.int' max=99999}},\n  \"activeAnimeProfileName\": \"720p/1080p\",\n  \"activeAnimeDirectory\": \"\",\n  \"is4k\": {{faker 'datatype.boolean'}},\n  \"enableSeasonFolders\": {{faker 'datatype.boolean'}},\n  \"isDefault\": {{faker 'datatype.boolean'}},\n  \"externalUrl\": \"http://radarr.example.com\",\n  \"syncEnabled\": {{faker 'datatype.boolean'}},\n  \"preventSearch\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Sonarr instance updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "41f20c82-df47-4dc3-8187-4f0e62127d9a",
      "type": "http",
      "documentation": "Get public settings",
      "method": "get",
      "endpoint": "settings/public",
      "responses": [
        {
          "uuid": "bfbc4c88-3268-4c1e-a02e-a56f703c5b4d",
          "body": "{\n  \"initialized\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Public settings returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "c0a8a168-a5a0-44e9-b0c1-ea7772ee4b28",
      "type": "http",
      "documentation": "Initialize application",
      "method": "post",
      "endpoint": "settings/initialize",
      "responses": [
        {
          "uuid": "4ef25292-13bb-4fb6-9b40-62f7cc38e8be",
          "body": "{\n  \"initialized\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Public settings returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "c0d457ab-8549-4b0a-854a-0298bc2ca640",
      "type": "http",
      "documentation": "Get scheduled jobs",
      "method": "get",
      "endpoint": "settings/jobs",
      "responses": [
        {
          "uuid": "a7b744a4-42f1-4fad-b8bd-18df5bbfdc91",
          "body": "[\n  {\n    \"id\": \"job-name\",\n    \"type\": \"{{oneOf (array 'process' 'command')}}\",\n    \"interval\": \"{{oneOf (array 'short' 'long' 'fixed')}}\",\n    \"name\": \"A Job Name\",\n    \"nextExecutionTime\": \"2020-09-02T05:02:23.000Z\",\n    \"running\": {{faker 'datatype.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Scheduled jobs returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "c79f19d0-8d02-40f2-b00e-8c08c933af93",
      "type": "http",
      "documentation": "Invoke a specific job",
      "method": "post",
      "endpoint": "settings/jobs/:jobId/run",
      "responses": [
        {
          "uuid": "ff2ee5de-fa15-498c-8d1f-cc909dfa7cd6",
          "body": "{\n  \"id\": \"job-name\",\n  \"type\": \"{{oneOf (array 'process' 'command')}}\",\n  \"interval\": \"{{oneOf (array 'short' 'long' 'fixed')}}\",\n  \"name\": \"A Job Name\",\n  \"nextExecutionTime\": \"2020-09-02T05:02:23.000Z\",\n  \"running\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invoked job returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ccf342f0-8029-4a73-9a17-5251f594f36d",
      "type": "http",
      "documentation": "Cancel a specific job",
      "method": "post",
      "endpoint": "settings/jobs/:jobId/cancel",
      "responses": [
        {
          "uuid": "dc8de387-1097-4ee9-a506-e17132e7896a",
          "body": "{\n  \"id\": \"job-name\",\n  \"type\": \"{{oneOf (array 'process' 'command')}}\",\n  \"interval\": \"{{oneOf (array 'short' 'long' 'fixed')}}\",\n  \"name\": \"A Job Name\",\n  \"nextExecutionTime\": \"2020-09-02T05:02:23.000Z\",\n  \"running\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Canceled job returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "40e2c237-36fe-4709-9fff-e82b5f3fd441",
      "type": "http",
      "documentation": "Modify job schedule",
      "method": "post",
      "endpoint": "settings/jobs/:jobId/schedule",
      "responses": [
        {
          "uuid": "c6fd38d3-6996-492e-a416-5bf396f69633",
          "body": "{\n  \"id\": \"job-name\",\n  \"type\": \"{{oneOf (array 'process' 'command')}}\",\n  \"interval\": \"{{oneOf (array 'short' 'long' 'fixed')}}\",\n  \"name\": \"A Job Name\",\n  \"nextExecutionTime\": \"2020-09-02T05:02:23.000Z\",\n  \"running\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Rescheduled job",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "04875b42-2a37-4a2c-a9a7-1611d6e08253",
      "type": "http",
      "documentation": "Get a list of active caches",
      "method": "get",
      "endpoint": "settings/cache",
      "responses": [
        {
          "uuid": "bc31115e-1cb7-43ce-8cf4-76d68a4dc2b7",
          "body": "{\n  \"imageCache\": {\n    \"tmdb\": {\n      \"size\": 123456,\n      \"imageCount\": 123\n    }\n  },\n  \"apiCaches\": [\n    {\n      \"id\": \"cache-id\",\n      \"name\": \"cache name\",\n      \"stats\": {\n        \"hits\": {{faker 'number.int' max=99999}},\n        \"misses\": {{faker 'number.int' max=99999}},\n        \"keys\": {{faker 'number.int' max=99999}},\n        \"ksize\": {{faker 'number.int' max=99999}},\n        \"vsize\": {{faker 'number.int' max=99999}}\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Caches returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "d49b5f21-c28b-4ff4-8e11-d69f833570d2",
      "type": "http",
      "documentation": "Flush a specific cache",
      "method": "post",
      "endpoint": "settings/cache/:cacheId/flush",
      "responses": [
        {
          "uuid": "554400ad-5797-47d9-83fc-0f99fe062204",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Flushed cache",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "a664d188-3f23-4c76-9843-5ceb4cc4bcbd",
      "type": "http",
      "documentation": "Returns logs",
      "method": "get",
      "endpoint": "settings/logs",
      "responses": [
        {
          "uuid": "35102ee2-6c6d-4854-9161-63a6674e9240",
          "body": "[\n  {\n    \"label\": \"server\",\n    \"level\": \"info\",\n    \"message\": \"Server ready on port 5055\",\n    \"timestamp\": \"2020-12-15T16:20:00.069Z\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Server log returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "0cf17b03-c7a6-4a1d-80be-817185df8d9c",
      "type": "http",
      "documentation": "Get email notification settings",
      "method": "get",
      "endpoint": "settings/notifications/email",
      "responses": [
        {
          "uuid": "6e611af4-309f-4906-b7b3-e9d49c94ea76",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"emailFrom\": \"no-reply@example.com\",\n    \"senderName\": \"Overseerr\",\n    \"smtpHost\": \"127.0.0.1\",\n    \"smtpPort\": 465,\n    \"secure\": {{faker 'datatype.boolean'}},\n    \"ignoreTls\": {{faker 'datatype.boolean'}},\n    \"requireTls\": {{faker 'datatype.boolean'}},\n    \"authUser\": \"\",\n    \"authPass\": \"\",\n    \"allowSelfSigned\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned email settings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "f46419a2-d204-42a0-aa75-8fa1e65d7432",
      "type": "http",
      "documentation": "Update email notification settings",
      "method": "post",
      "endpoint": "settings/notifications/email",
      "responses": [
        {
          "uuid": "030a346e-4be7-44da-8532-7d5eb549cc65",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"emailFrom\": \"no-reply@example.com\",\n    \"senderName\": \"Overseerr\",\n    \"smtpHost\": \"127.0.0.1\",\n    \"smtpPort\": 465,\n    \"secure\": {{faker 'datatype.boolean'}},\n    \"ignoreTls\": {{faker 'datatype.boolean'}},\n    \"requireTls\": {{faker 'datatype.boolean'}},\n    \"authUser\": \"\",\n    \"authPass\": \"\",\n    \"allowSelfSigned\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Values were sucessfully updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "0f39838b-d7fa-42b3-9154-9f23894e5a0e",
      "type": "http",
      "documentation": "Test email settings",
      "method": "post",
      "endpoint": "settings/notifications/email/test",
      "responses": [
        {
          "uuid": "0d7b60f4-ac66-4fee-a6a5-3541d5c95487",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Test notification attempted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "e9d9dc47-30d0-4289-8897-c4dc77d85b65",
      "type": "http",
      "documentation": "Get Discord notification settings",
      "method": "get",
      "endpoint": "settings/notifications/discord",
      "responses": [
        {
          "uuid": "fa4c0cca-7e4f-4d67-b1cf-a48651eab113",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"botUsername\": \"\",\n    \"botAvatarUrl\": \"\",\n    \"webhookUrl\": \"\",\n    \"enableMentions\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned Discord settings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "7e259916-514c-4a88-ae24-9f6b8e5aaf9a",
      "type": "http",
      "documentation": "Update Discord notification settings",
      "method": "post",
      "endpoint": "settings/notifications/discord",
      "responses": [
        {
          "uuid": "5fb30ee1-017b-42d7-a7cf-af65478a0ffb",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"botUsername\": \"\",\n    \"botAvatarUrl\": \"\",\n    \"webhookUrl\": \"\",\n    \"enableMentions\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Values were sucessfully updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "708d15a1-7d15-476b-a24f-71b5eb30733f",
      "type": "http",
      "documentation": "Test Discord settings",
      "method": "post",
      "endpoint": "settings/notifications/discord/test",
      "responses": [
        {
          "uuid": "311e9894-d0c8-4bb2-9ba6-6e81c8f34e79",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Test notification attempted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "0f4d90a5-d9f4-4cbb-9a2c-551f84d4d299",
      "type": "http",
      "documentation": "Get LunaSea notification settings",
      "method": "get",
      "endpoint": "settings/notifications/lunasea",
      "responses": [
        {
          "uuid": "c8bae0db-8ef8-4ac6-afae-1c01e22a8f95",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"webhookUrl\": \"\",\n    \"profileName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned LunaSea settings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "32b6d037-ed03-4678-973f-8d83d56c18ab",
      "type": "http",
      "documentation": "Update LunaSea notification settings",
      "method": "post",
      "endpoint": "settings/notifications/lunasea",
      "responses": [
        {
          "uuid": "675ac72a-cb46-4123-9cc5-c3a0f75a1c78",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"webhookUrl\": \"\",\n    \"profileName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Values were sucessfully updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ff37f14c-7341-4f64-a339-f0a238034aad",
      "type": "http",
      "documentation": "Test LunaSea settings",
      "method": "post",
      "endpoint": "settings/notifications/lunasea/test",
      "responses": [
        {
          "uuid": "392801e4-6926-4324-8172-425ba1bfdae4",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Test notification attempted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "15814d11-ab56-40c8-9f25-fde070a6566a",
      "type": "http",
      "documentation": "Get Pushbullet notification settings",
      "method": "get",
      "endpoint": "settings/notifications/pushbullet",
      "responses": [
        {
          "uuid": "a99c3d66-dcf6-4844-9443-4b1ddfe50cd1",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"accessToken\": \"\",\n    \"channelTag\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned Pushbullet settings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "0037a909-82fe-4207-b9f1-bdeef872bf69",
      "type": "http",
      "documentation": "Update Pushbullet notification settings",
      "method": "post",
      "endpoint": "settings/notifications/pushbullet",
      "responses": [
        {
          "uuid": "586bc7f5-e0a1-4642-9e1f-afe73ecf90a0",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"accessToken\": \"\",\n    \"channelTag\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Values were sucessfully updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "09480581-b5a6-4adf-8de8-2d465e12bf76",
      "type": "http",
      "documentation": "Test Pushbullet settings",
      "method": "post",
      "endpoint": "settings/notifications/pushbullet/test",
      "responses": [
        {
          "uuid": "b1f7a2fa-41e2-4897-9a8d-5b8ae0de8991",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Test notification attempted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "f943888a-67cb-4c55-a595-f5ee7877e710",
      "type": "http",
      "documentation": "Get Pushover notification settings",
      "method": "get",
      "endpoint": "settings/notifications/pushover",
      "responses": [
        {
          "uuid": "0b7467a9-4d7f-4bb1-98bb-e1a41585bdff",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"accessToken\": \"\",\n    \"userToken\": \"\",\n    \"sound\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned Pushover settings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "40630956-157f-4347-a7f7-7e74fce25367",
      "type": "http",
      "documentation": "Update Pushover notification settings",
      "method": "post",
      "endpoint": "settings/notifications/pushover",
      "responses": [
        {
          "uuid": "ef09c2eb-44c1-4d19-8898-edc0a97289ee",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"accessToken\": \"\",\n    \"userToken\": \"\",\n    \"sound\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Values were sucessfully updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "72cb447c-5ec0-4400-84a6-cc7eb9a7cffd",
      "type": "http",
      "documentation": "Test Pushover settings",
      "method": "post",
      "endpoint": "settings/notifications/pushover/test",
      "responses": [
        {
          "uuid": "dd9c426d-bcc0-46f9-84b8-0530c91d270f",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Test notification attempted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "3c9bf947-37c8-48d7-9bd6-2130c3e14b2c",
      "type": "http",
      "documentation": "Get Pushover sounds",
      "method": "get",
      "endpoint": "settings/notifications/pushover/sounds",
      "responses": [
        {
          "uuid": "34835389-b281-48a1-a229-cfbf5832b755",
          "body": "[\n  {\n    \"name\": \"\",\n    \"description\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned Pushover settings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "424be48d-3193-4db8-ac4d-8d98a0d42b69",
      "type": "http",
      "documentation": "Get Gotify notification settings",
      "method": "get",
      "endpoint": "settings/notifications/gotify",
      "responses": [
        {
          "uuid": "9aa0ea9f-8600-42d3-9d26-0b9efe5dba74",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"url\": \"\",\n    \"token\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned Gotify settings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "262317ae-c4c9-4e6c-a46c-8a940b1834a6",
      "type": "http",
      "documentation": "Update Gotify notification settings",
      "method": "post",
      "endpoint": "settings/notifications/gotify",
      "responses": [
        {
          "uuid": "6509098a-40c5-46d6-89e7-acfb8a3d34e0",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"url\": \"\",\n    \"token\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Values were sucessfully updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "58c8a16c-ca2b-4b50-892b-46a4676baca9",
      "type": "http",
      "documentation": "Test Gotify settings",
      "method": "post",
      "endpoint": "settings/notifications/gotify/test",
      "responses": [
        {
          "uuid": "4278d7a6-523f-4326-8d9f-5434df079d11",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Test notification attempted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "a9361eb5-3031-4592-b017-f222b47bbd8c",
      "type": "http",
      "documentation": "Get Slack notification settings",
      "method": "get",
      "endpoint": "settings/notifications/slack",
      "responses": [
        {
          "uuid": "3d8278a2-0e64-4642-a808-9c24b803312d",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"webhookUrl\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned slack settings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "0e019c5a-aad8-436b-b7db-4e63f905b61a",
      "type": "http",
      "documentation": "Update Slack notification settings",
      "method": "post",
      "endpoint": "settings/notifications/slack",
      "responses": [
        {
          "uuid": "82219fd5-bdf1-450e-bd09-244f73a23f57",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"webhookUrl\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Values were sucessfully updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "2d6ce729-9639-4280-9d23-35f265e664e5",
      "type": "http",
      "documentation": "Test Slack settings",
      "method": "post",
      "endpoint": "settings/notifications/slack/test",
      "responses": [
        {
          "uuid": "5ab760c6-3fcb-453c-9f9a-99d48478ecb7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Test notification attempted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "1b4831bd-7619-42a5-8c52-20df2622b189",
      "type": "http",
      "documentation": "Get Telegram notification settings",
      "method": "get",
      "endpoint": "settings/notifications/telegram",
      "responses": [
        {
          "uuid": "f32ff75a-bb39-48e2-9ffe-1ad266f6febd",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"botUsername\": \"\",\n    \"botAPI\": \"\",\n    \"chatId\": \"\",\n    \"sendSilently\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned Telegram settings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "7a6b4891-3333-4c9e-b19e-b34881dc400e",
      "type": "http",
      "documentation": "Update Telegram notification settings",
      "method": "post",
      "endpoint": "settings/notifications/telegram",
      "responses": [
        {
          "uuid": "c788bb1d-f95f-49d3-af1c-f210a8fe8bcc",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"botUsername\": \"\",\n    \"botAPI\": \"\",\n    \"chatId\": \"\",\n    \"sendSilently\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Values were sucessfully updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "2501da4c-43f6-4d05-9e46-e73676e02516",
      "type": "http",
      "documentation": "Test Telegram settings",
      "method": "post",
      "endpoint": "settings/notifications/telegram/test",
      "responses": [
        {
          "uuid": "f70f3ba2-029b-488b-a2e6-6310b318dc68",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Test notification attempted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "583907d3-e237-494c-9726-484e8980cea5",
      "type": "http",
      "documentation": "Get Web Push notification settings",
      "method": "get",
      "endpoint": "settings/notifications/webpush",
      "responses": [
        {
          "uuid": "008c44e6-3be0-46fd-a96f-49c438ef2af9",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned web push settings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "03b53bcc-2d85-46dc-ba81-22ca2fe4c236",
      "type": "http",
      "documentation": "Update Web Push notification settings",
      "method": "post",
      "endpoint": "settings/notifications/webpush",
      "responses": [
        {
          "uuid": "f71faa30-443a-47f3-b70d-d86c4ebeb856",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Values were sucessfully updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ca7fee78-cc2e-4e89-8368-f6ae4e5bc3f0",
      "type": "http",
      "documentation": "Test Web Push settings",
      "method": "post",
      "endpoint": "settings/notifications/webpush/test",
      "responses": [
        {
          "uuid": "14976346-fa96-4dc6-a93d-5cb013e5057c",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Test notification attempted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "d13f4a56-ab68-4efa-a8d7-23957d7ad7a8",
      "type": "http",
      "documentation": "Get webhook notification settings",
      "method": "get",
      "endpoint": "settings/notifications/webhook",
      "responses": [
        {
          "uuid": "59a3dad9-5f69-43f1-8b1a-531e13d06780",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"webhookUrl\": \"\",\n    \"authHeader\": \"\",\n    \"jsonPayload\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned webhook settings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "dbfdd81b-2d8d-4e18-b4a8-62c9a5a648e6",
      "type": "http",
      "documentation": "Update webhook notification settings",
      "method": "post",
      "endpoint": "settings/notifications/webhook",
      "responses": [
        {
          "uuid": "46aa573e-faf1-4473-a364-3b3fc0572f70",
          "body": "{\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"types\": 2,\n  \"options\": {\n    \"webhookUrl\": \"\",\n    \"authHeader\": \"\",\n    \"jsonPayload\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Values were sucessfully updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ddcf337d-610b-49b6-acf1-fb1f0bc6d2cc",
      "type": "http",
      "documentation": "Test webhook settings",
      "method": "post",
      "endpoint": "settings/notifications/webhook/test",
      "responses": [
        {
          "uuid": "56a6cdf1-4cf3-424f-a6d6-9b53ee674c3d",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Test notification attempted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "e3366455-3c9b-4b76-8374-01627205f737",
      "type": "http",
      "documentation": "Get all discover sliders",
      "method": "get",
      "endpoint": "settings/discover",
      "responses": [
        {
          "uuid": "6ef9400a-2c7d-47e6-98fa-aea920e6f03d",
          "body": "[\n  {\n    \"id\": 1,\n    \"type\": 1,\n    \"title\": \"\",\n    \"isBuiltIn\": {{faker 'datatype.boolean'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"data\": \"1234\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned all discovery sliders",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "db039393-a426-4691-a0f4-41a157b157fa",
      "type": "http",
      "documentation": "Batch update all sliders.",
      "method": "post",
      "endpoint": "settings/discover",
      "responses": [
        {
          "uuid": "61454f6c-26b8-41d8-bb8a-743c232ac3f4",
          "body": "[\n  {\n    \"id\": 1,\n    \"type\": 1,\n    \"title\": \"\",\n    \"isBuiltIn\": {{faker 'datatype.boolean'}},\n    \"enabled\": {{faker 'datatype.boolean'}},\n    \"data\": \"1234\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned all newly updated discovery sliders",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "88ad1d11-ab3b-4ba7-a0bc-ee0c3a4ea8bd",
      "type": "http",
      "documentation": "Update a single slider",
      "method": "put",
      "endpoint": "settings/discover/:sliderId",
      "responses": [
        {
          "uuid": "6527204e-4d5d-45de-a22f-2965f4a9ff24",
          "body": "{\n  \"id\": 1,\n  \"type\": 1,\n  \"title\": \"\",\n  \"isBuiltIn\": {{faker 'datatype.boolean'}},\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"data\": \"1234\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns newly added discovery slider",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "5f79af4a-2d62-4fad-9143-4154c03f5963",
      "type": "http",
      "documentation": "Delete slider by ID",
      "method": "delete",
      "endpoint": "settings/discover/:sliderId",
      "responses": [
        {
          "uuid": "b1fc7c84-f57a-42e8-a339-117511389217",
          "body": "{\n  \"id\": 1,\n  \"type\": 1,\n  \"title\": \"\",\n  \"isBuiltIn\": {{faker 'datatype.boolean'}},\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"data\": \"1234\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Slider successfully deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ea9efa4d-d51a-4565-a46a-6c453b3ddeda",
      "type": "http",
      "documentation": "Add a new slider",
      "method": "post",
      "endpoint": "settings/discover/add",
      "responses": [
        {
          "uuid": "65f80bd3-3872-493e-8bab-94d33c8315e4",
          "body": "{\n  \"id\": 1,\n  \"type\": 1,\n  \"title\": \"\",\n  \"isBuiltIn\": {{faker 'datatype.boolean'}},\n  \"enabled\": {{faker 'datatype.boolean'}},\n  \"data\": \"1234\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns newly added discovery slider",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "44c71966-027f-4624-86bc-ce55fab6cc46",
      "type": "http",
      "documentation": "Reset all discover sliders",
      "method": "get",
      "endpoint": "settings/discover/reset",
      "responses": [
        {
          "uuid": "e5e12d0e-7edf-4262-8da2-d03d0e578596",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "All sliders reset to defaults",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "6d8ce7a1-7fa3-412d-87c4-162c565a6aee",
      "type": "http",
      "documentation": "Get server stats",
      "method": "get",
      "endpoint": "settings/about",
      "responses": [
        {
          "uuid": "1f1784ad-4a46-4bd1-961b-14dcfb90ed9a",
          "body": "{\n  \"version\": \"1.0.0\",\n  \"totalRequests\": 100,\n  \"totalMediaItems\": 100,\n  \"tz\": \"Asia/Tokyo\",\n  \"appDataPath\": \"/app/config\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned about settings",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "494eff3b-9f64-4e85-a108-71e7965de50c",
      "type": "http",
      "documentation": "Get logged-in user",
      "method": "get",
      "endpoint": "auth/me",
      "responses": [
        {
          "uuid": "967f0e80-d587-4558-9f5a-79dd970bcb0b",
          "body": "{\n  \"id\": 1,\n  \"email\": \"hey@itsme.com\",\n  \"username\": \"\",\n  \"plexToken\": \"\",\n  \"plexUsername\": \"\",\n  \"userType\": 1,\n  \"permissions\": {{faker 'number.int' max=99999}},\n  \"avatar\": \"\",\n  \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n  \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n  \"requestCount\": 5\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Object containing the logged-in user in JSON",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "768ff023-548b-4111-95ab-020bc589a999",
      "type": "http",
      "documentation": "Sign in using a Plex token",
      "method": "post",
      "endpoint": "auth/plex",
      "responses": [
        {
          "uuid": "006c1a12-2953-4c63-b367-6bbdd443876e",
          "body": "{\n  \"id\": 1,\n  \"email\": \"hey@itsme.com\",\n  \"username\": \"\",\n  \"plexToken\": \"\",\n  \"plexUsername\": \"\",\n  \"userType\": 1,\n  \"permissions\": {{faker 'number.int' max=99999}},\n  \"avatar\": \"\",\n  \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n  \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n  \"requestCount\": 5\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "f55835e5-1e33-4ecb-aa34-0a7e44a545b8",
      "type": "http",
      "documentation": "Sign in using a local account",
      "method": "post",
      "endpoint": "auth/local",
      "responses": [
        {
          "uuid": "528d7c07-872f-4a8a-b607-9f04b0372b41",
          "body": "{\n  \"id\": 1,\n  \"email\": \"hey@itsme.com\",\n  \"username\": \"\",\n  \"plexToken\": \"\",\n  \"plexUsername\": \"\",\n  \"userType\": 1,\n  \"permissions\": {{faker 'number.int' max=99999}},\n  \"avatar\": \"\",\n  \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n  \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n  \"requestCount\": 5\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "2cbfd7b0-a3f1-4380-ad8a-372ae6c8569c",
      "type": "http",
      "documentation": "Sign out and clear session cookie",
      "method": "post",
      "endpoint": "auth/logout",
      "responses": [
        {
          "uuid": "0666e0c2-2f80-41bd-9e79-a66daebad553",
          "body": "{\n  \"status\": \"ok\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "c89c5a5e-5520-4f22-94a0-55cf4148edfd",
      "type": "http",
      "documentation": "Send a reset password email",
      "method": "post",
      "endpoint": "auth/reset-password",
      "responses": [
        {
          "uuid": "1ee53c9c-093e-47a4-8d0d-f63458d437a0",
          "body": "{\n  \"status\": \"ok\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "961918a1-f98b-4804-b642-5cdb99a2fd19",
      "type": "http",
      "documentation": "Reset the password for a user",
      "method": "post",
      "endpoint": "auth/reset-password/:guid",
      "responses": [
        {
          "uuid": "d43ee95f-9501-4c64-811e-6a8f7856584f",
          "body": "{\n  \"status\": \"ok\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "0bd5fca1-3438-4ef0-9f1a-3a7d26d9ad66",
      "type": "http",
      "documentation": "Get all users",
      "method": "get",
      "endpoint": "user",
      "responses": [
        {
          "uuid": "937e7bfb-8f7a-4d68-90f7-7785f965a6ad",
          "body": "{\n  \"pageInfo\": {\n    \"page\": 1,\n    \"pages\": 10,\n    \"results\": 100\n  },\n  \"results\": [\n    {\n      \"id\": 1,\n      \"email\": \"hey@itsme.com\",\n      \"username\": \"\",\n      \"plexToken\": \"\",\n      \"plexUsername\": \"\",\n      \"userType\": 1,\n      \"permissions\": {{faker 'number.int' max=99999}},\n      \"avatar\": \"\",\n      \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n      \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n      \"requestCount\": 5\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A JSON array of all users",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ea806ed1-d38d-427e-ad98-c7ca92548937",
      "type": "http",
      "documentation": "Create new user",
      "method": "post",
      "endpoint": "user",
      "responses": [
        {
          "uuid": "d3b1765f-0435-4be8-8b20-e2b0e3218eae",
          "body": "{\n  \"id\": 1,\n  \"email\": \"hey@itsme.com\",\n  \"username\": \"\",\n  \"plexToken\": \"\",\n  \"plexUsername\": \"\",\n  \"userType\": 1,\n  \"permissions\": {{faker 'number.int' max=99999}},\n  \"avatar\": \"\",\n  \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n  \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n  \"requestCount\": 5\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "The created user",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ea0766b0-69f8-4315-859c-2de6937b9dc2",
      "type": "http",
      "documentation": "Update batch of users",
      "method": "put",
      "endpoint": "user",
      "responses": [
        {
          "uuid": "32f78373-423c-4cc2-a969-b45ca3a58a9c",
          "body": "[\n  {\n    \"id\": 1,\n    \"email\": \"hey@itsme.com\",\n    \"username\": \"\",\n    \"plexToken\": \"\",\n    \"plexUsername\": \"\",\n    \"userType\": 1,\n    \"permissions\": {{faker 'number.int' max=99999}},\n    \"avatar\": \"\",\n    \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n    \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n    \"requestCount\": 5\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully updated user details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "57fe1476-3e0c-4281-85d9-79af03662b98",
      "type": "http",
      "documentation": "Import all users from Plex",
      "method": "post",
      "endpoint": "user/import-from-plex",
      "responses": [
        {
          "uuid": "a15afb7e-e3d6-40b2-8f33-dbdf5b5b68a0",
          "body": "[\n  {\n    \"id\": 1,\n    \"email\": \"hey@itsme.com\",\n    \"username\": \"\",\n    \"plexToken\": \"\",\n    \"plexUsername\": \"\",\n    \"userType\": 1,\n    \"permissions\": {{faker 'number.int' max=99999}},\n    \"avatar\": \"\",\n    \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n    \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n    \"requestCount\": 5\n  }\n]",
          "latency": 0,
          "statusCode": 201,
          "label": "A list of the newly created users",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "cb67efee-45f8-481b-b313-6b1f7537d61e",
      "type": "http",
      "documentation": "Register a web push /user/registerPushSubscription",
      "method": "post",
      "endpoint": "user/registerPushSubscription",
      "responses": [
        {
          "uuid": "555e76da-665e-426e-a1ad-0f3ba9d92817",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Successfully registered push subscription",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "1acc717e-e8e4-45c2-8ecb-9c6b813fd294",
      "type": "http",
      "documentation": "Get user by ID",
      "method": "get",
      "endpoint": "user/:userId",
      "responses": [
        {
          "uuid": "46e77c46-68d3-48b8-98dc-c2a0b9b97e1b",
          "body": "{\n  \"id\": 1,\n  \"email\": \"hey@itsme.com\",\n  \"username\": \"\",\n  \"plexToken\": \"\",\n  \"plexUsername\": \"\",\n  \"userType\": 1,\n  \"permissions\": {{faker 'number.int' max=99999}},\n  \"avatar\": \"\",\n  \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n  \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n  \"requestCount\": 5\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Users details in JSON",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "fe01da65-1443-40f2-926c-4ed2da929a2f",
      "type": "http",
      "documentation": "Update a user by user ID",
      "method": "put",
      "endpoint": "user/:userId",
      "responses": [
        {
          "uuid": "00381bf2-eaeb-48c2-a467-a35d26ddae5c",
          "body": "{\n  \"id\": 1,\n  \"email\": \"hey@itsme.com\",\n  \"username\": \"\",\n  \"plexToken\": \"\",\n  \"plexUsername\": \"\",\n  \"userType\": 1,\n  \"permissions\": {{faker 'number.int' max=99999}},\n  \"avatar\": \"\",\n  \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n  \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n  \"requestCount\": 5\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully updated user details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "34f61ead-61b2-49ba-9760-0891153caa58",
      "type": "http",
      "documentation": "Delete user by ID",
      "method": "delete",
      "endpoint": "user/:userId",
      "responses": [
        {
          "uuid": "4c172eee-8d47-4045-aeb1-0ada1a61f759",
          "body": "{\n  \"id\": 1,\n  \"email\": \"hey@itsme.com\",\n  \"username\": \"\",\n  \"plexToken\": \"\",\n  \"plexUsername\": \"\",\n  \"userType\": 1,\n  \"permissions\": {{faker 'number.int' max=99999}},\n  \"avatar\": \"\",\n  \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n  \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n  \"requestCount\": 5\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User successfully deleted",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ad673c63-bbc4-48cd-ba88-d895eddcbbf5",
      "type": "http",
      "documentation": "Get requests for a specific user",
      "method": "get",
      "endpoint": "user/:userId/requests",
      "responses": [
        {
          "uuid": "695a505e-b052-487b-a3cc-681917eed39b",
          "body": "{\n  \"pageInfo\": {\n    \"page\": 1,\n    \"pages\": 10,\n    \"results\": 100\n  },\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User's requests returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "de068bf7-6405-4caf-90e1-2b04287e103a",
      "type": "http",
      "documentation": "Get quotas for a specific user",
      "method": "get",
      "endpoint": "user/:userId/quota",
      "responses": [
        {
          "uuid": "ce5e7941-bba8-4a84-a2fa-a71384e0e062",
          "body": "{\n  \"movie\": {\n    \"days\": 7,\n    \"limit\": 10,\n    \"used\": 6,\n    \"remaining\": 4,\n    \"restricted\": {{faker 'datatype.boolean'}}\n  },\n  \"tv\": {\n    \"days\": 7,\n    \"limit\": 10,\n    \"used\": 6,\n    \"remaining\": 4,\n    \"restricted\": {{faker 'datatype.boolean'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User quota details in JSON",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "68f7f17d-93f9-4192-910e-c93048d01f6a",
      "type": "http",
      "documentation": "Get the Plex watchlist for a specific user",
      "method": "get",
      "endpoint": "user/:userId/watchlist",
      "responses": [
        {
          "uuid": "8a95f5a8-9bfa-4bda-bf0c-a10967a5b5c7",
          "body": "{\n  \"page\": {{faker 'number.int' max=99999}},\n  \"totalPages\": {{faker 'number.int' max=99999}},\n  \"totalResults\": {{faker 'number.int' max=99999}},\n  \"results\": [\n    {\n      \"tmdbId\": 1,\n      \"ratingKey\": \"\",\n      \"type\": \"\",\n      \"title\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Watchlist data returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "22612825-5ffa-4a47-b740-94d3b95b17b5",
      "type": "http",
      "documentation": "Get general settings for a user",
      "method": "get",
      "endpoint": "user/:userId/settings/main",
      "responses": [
        {
          "uuid": "fb8b180f-9898-4e15-ab81-23f9c7c47d65",
          "body": "{\n  \"username\": \"Mr User\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User general settings returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "9a0d4691-6f8c-4dcc-90f3-4490bb7c3357",
      "type": "http",
      "documentation": "Update general settings for a user",
      "method": "post",
      "endpoint": "user/:userId/settings/main",
      "responses": [
        {
          "uuid": "ad54be81-7c38-4665-9bb2-73ecfa8c11b8",
          "body": "{\n  \"username\": \"Mr User\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Updated user general settings returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "1b6a9a8b-594e-4e3a-9145-15409b6e6a8d",
      "type": "http",
      "documentation": "Get password page informatiom",
      "method": "get",
      "endpoint": "user/:userId/settings/password",
      "responses": [
        {
          "uuid": "6dacff2d-c05c-4ff5-8907-bf0d050a5e7d",
          "body": "{\n  \"hasPassword\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User password page information returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "bfb395ee-7148-4c08-9c64-e58256a8d633",
      "type": "http",
      "documentation": "Update password for a user",
      "method": "post",
      "endpoint": "user/:userId/settings/password",
      "responses": [
        {
          "uuid": "8516d758-496d-4bdc-a0b0-57ac48fde3c7",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "User password updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "e56ca6f7-b2b2-434d-ad95-f4351fddd3cf",
      "type": "http",
      "documentation": "Get notification settings for a user",
      "method": "get",
      "endpoint": "user/:userId/settings/notifications",
      "responses": [
        {
          "uuid": "0cee9ec8-da2c-4c41-b59c-3dff0b344327",
          "body": "{\n  \"notificationTypes\": {\n    \"discord\": {{faker 'number.int' max=99999}},\n    \"email\": {{faker 'number.int' max=99999}},\n    \"pushbullet\": {{faker 'number.int' max=99999}},\n    \"pushover\": {{faker 'number.int' max=99999}},\n    \"slack\": {{faker 'number.int' max=99999}},\n    \"telegram\": {{faker 'number.int' max=99999}},\n    \"webhook\": {{faker 'number.int' max=99999}},\n    \"webpush\": {{faker 'number.int' max=99999}}\n  },\n  \"emailEnabled\": {{faker 'datatype.boolean'}},\n  \"pgpKey\": \"\",\n  \"discordEnabled\": {{faker 'datatype.boolean'}},\n  \"discordEnabledTypes\": {{faker 'number.int' max=99999}},\n  \"discordId\": \"\",\n  \"pushbulletAccessToken\": \"\",\n  \"pushoverApplicationToken\": \"\",\n  \"pushoverUserKey\": \"\",\n  \"pushoverSound\": \"\",\n  \"telegramEnabled\": {{faker 'datatype.boolean'}},\n  \"telegramBotUsername\": \"\",\n  \"telegramChatId\": \"\",\n  \"telegramSendSilently\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User notification settings returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "663908bb-3447-48a9-97fe-368f4469eaaf",
      "type": "http",
      "documentation": "Update notification settings for a user",
      "method": "post",
      "endpoint": "user/:userId/settings/notifications",
      "responses": [
        {
          "uuid": "26c4f56b-4e79-4626-a13e-dbdfc29d4aa9",
          "body": "{\n  \"notificationTypes\": {\n    \"discord\": {{faker 'number.int' max=99999}},\n    \"email\": {{faker 'number.int' max=99999}},\n    \"pushbullet\": {{faker 'number.int' max=99999}},\n    \"pushover\": {{faker 'number.int' max=99999}},\n    \"slack\": {{faker 'number.int' max=99999}},\n    \"telegram\": {{faker 'number.int' max=99999}},\n    \"webhook\": {{faker 'number.int' max=99999}},\n    \"webpush\": {{faker 'number.int' max=99999}}\n  },\n  \"emailEnabled\": {{faker 'datatype.boolean'}},\n  \"pgpKey\": \"\",\n  \"discordEnabled\": {{faker 'datatype.boolean'}},\n  \"discordEnabledTypes\": {{faker 'number.int' max=99999}},\n  \"discordId\": \"\",\n  \"pushbulletAccessToken\": \"\",\n  \"pushoverApplicationToken\": \"\",\n  \"pushoverUserKey\": \"\",\n  \"pushoverSound\": \"\",\n  \"telegramEnabled\": {{faker 'datatype.boolean'}},\n  \"telegramBotUsername\": \"\",\n  \"telegramChatId\": \"\",\n  \"telegramSendSilently\": {{faker 'datatype.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Updated user notification settings returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "7072df14-0c3f-44f9-9225-8bdc3bf8091c",
      "type": "http",
      "documentation": "Get permission settings for a user",
      "method": "get",
      "endpoint": "user/:userId/settings/permissions",
      "responses": [
        {
          "uuid": "89274f78-3f31-40cd-ae35-11d8ec653bb4",
          "body": "{\n  \"permissions\": 2\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User permission settings returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "f45ab358-d4f0-49e4-bccf-55e605ffb98d",
      "type": "http",
      "documentation": "Update permission settings for a user",
      "method": "post",
      "endpoint": "user/:userId/settings/permissions",
      "responses": [
        {
          "uuid": "b6624b9b-2a8a-4bb8-b4f8-2ceb94a5f17e",
          "body": "{\n  \"permissions\": 2\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Updated user general settings returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "3d425a97-00ed-485c-a2bc-35a42f4157c8",
      "type": "http",
      "documentation": "Get watch data",
      "method": "get",
      "endpoint": "user/:userId/watch_data",
      "responses": [
        {
          "uuid": "e3c5f8b5-b573-4a99-bc55-b014a9a95c5e",
          "body": "{\n  \"recentlyWatched\": [\n    \"\"\n  ],\n  \"playCount\": {{faker 'number.int' max=99999}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Users",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "d6c0886b-4023-405b-bfad-3b42c1d474ce",
      "type": "http",
      "documentation": "Search for movies, TV shows, or people",
      "method": "get",
      "endpoint": "search",
      "responses": [
        {
          "uuid": "5cd8bfb1-0655-4d92-890e-60112e903184",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "4c5d1246-5b21-4c4f-a84d-12c71339864b",
      "type": "http",
      "documentation": "Search for keywords",
      "method": "get",
      "endpoint": "search/keyword",
      "responses": [
        {
          "uuid": "4caa7944-7ecf-4148-aa1f-309f43c974de",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"name\": \"anime\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "c7c0bf3c-4f29-4edb-8c04-ca028a436890",
      "type": "http",
      "documentation": "Search for companies",
      "method": "get",
      "endpoint": "search/company",
      "responses": [
        {
          "uuid": "b21003af-1637-4ce9-a8d1-56ea1dc0697f",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"logo_path\": \"\",\n      \"name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "2492572f-d3ab-4f2e-b7ee-03ad9370ffa0",
      "type": "http",
      "documentation": "Discover movies",
      "method": "get",
      "endpoint": "discover/movies",
      "responses": [
        {
          "uuid": "31e1cf1e-99ec-4b72-bff3-4904bd7e25bd",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "78de8b09-f326-4e3c-9561-64212adff6a6",
      "type": "http",
      "documentation": "Discover movies by genre",
      "method": "get",
      "endpoint": "discover/movies/genre/:genreId",
      "responses": [
        {
          "uuid": "cbd0b1f8-2b01-44ac-a37c-c9e37a48b936",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"genre\": {\n    \"id\": 1,\n    \"name\": \"Adventure\"\n  },\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "77738d8b-ddee-4705-9231-d837d089c382",
      "type": "http",
      "documentation": "Discover movies by original language",
      "method": "get",
      "endpoint": "discover/movies/language/:language",
      "responses": [
        {
          "uuid": "6b986622-7264-499a-97a8-9b6eef121dce",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"language\": {\n    \"englishName\": \"English\",\n    \"iso_639_1\": \"en\",\n    \"name\": \"English\"\n  },\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "1300cb8f-096e-4802-96fe-1b09a809dcc3",
      "type": "http",
      "documentation": "Discover movies by studio",
      "method": "get",
      "endpoint": "discover/movies/studio/:studioId",
      "responses": [
        {
          "uuid": "8cfa8202-bf98-4a16-9760-b5b332389117",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"studio\": {\n    \"id\": 1,\n    \"logoPath\": \"\",\n    \"originCountry\": \"\",\n    \"name\": \"\"\n  },\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "a1c973a6-d53e-4268-8a53-bfaea11c9ba3",
      "type": "http",
      "documentation": "Upcoming movies",
      "method": "get",
      "endpoint": "discover/movies/upcoming",
      "responses": [
        {
          "uuid": "e97fa1c1-ef2d-4cc3-8a79-ef96fb6f8969",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "3dc3743a-cb25-4d8e-bf86-efa4fcf44bb9",
      "type": "http",
      "documentation": "Discover TV shows",
      "method": "get",
      "endpoint": "discover/tv",
      "responses": [
        {
          "uuid": "d50ed8ff-5ff8-4df7-8682-bd0ec406d072",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "254ea020-a2e9-49b7-8367-2778492a41eb",
      "type": "http",
      "documentation": "Discover TV shows by original language",
      "method": "get",
      "endpoint": "discover/tv/language/:language",
      "responses": [
        {
          "uuid": "e22cd8b1-054b-43df-b0d3-daca8a68ba82",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"language\": {\n    \"englishName\": \"English\",\n    \"iso_639_1\": \"en\",\n    \"name\": \"English\"\n  },\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "13e34bf0-2801-43d8-b300-b511acb7d8f6",
      "type": "http",
      "documentation": "Discover TV shows by genre",
      "method": "get",
      "endpoint": "discover/tv/genre/:genreId",
      "responses": [
        {
          "uuid": "69bcc522-200f-4f1e-b987-4d3eafef3b9c",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"genre\": {\n    \"id\": 1,\n    \"name\": \"Adventure\"\n  },\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "6e4c58e6-f61b-4c81-9994-a21e74242f02",
      "type": "http",
      "documentation": "Discover TV shows by network",
      "method": "get",
      "endpoint": "discover/tv/network/:networkId",
      "responses": [
        {
          "uuid": "e5f4c213-4790-4b76-aeac-5254852f8eeb",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"network\": {\n    \"id\": 1,\n    \"logoPath\": \"\",\n    \"originCountry\": \"\",\n    \"name\": \"\"\n  },\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "7de22fc6-3a61-4e12-961c-244ba9d62b7f",
      "type": "http",
      "documentation": "Discover Upcoming TV shows",
      "method": "get",
      "endpoint": "discover/tv/upcoming",
      "responses": [
        {
          "uuid": "c2b05274-ffad-4e83-b38c-6cc870c626e4",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "49c5dcf5-34fe-45dc-8d46-b120353b1bb4",
      "type": "http",
      "documentation": "Trending movies and TV",
      "method": "get",
      "endpoint": "discover/trending",
      "responses": [
        {
          "uuid": "c3414161-e3de-40bb-9bae-39e0d793eed5",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "234a0d88-54f9-428c-a53c-aaeca12df42e",
      "type": "http",
      "documentation": "Get movies from keyword",
      "method": "get",
      "endpoint": "discover/keyword/:keywordId/movies",
      "responses": [
        {
          "uuid": "613277b0-6740-4052-b29c-e7c6bcdd720a",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List of movies",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "515be0e1-05b9-4aff-9be2-bf7318ff8797",
      "type": "http",
      "documentation": "Get genre slider data for movies",
      "method": "get",
      "endpoint": "discover/genreslider/movie",
      "responses": [
        {
          "uuid": "534ef98f-ee63-49d9-b8b7-5a556d42ed40",
          "body": "[\n  {\n    \"id\": 1,\n    \"backdrops\": [\n      \"\"\n    ],\n    \"name\": \"Genre Name\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Genre slider data returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "2453ade2-3cba-4e68-9144-832343fe9540",
      "type": "http",
      "documentation": "Get genre slider data for TV series",
      "method": "get",
      "endpoint": "discover/genreslider/tv",
      "responses": [
        {
          "uuid": "1570f065-8d84-4e36-a6b8-73c42a95ea01",
          "body": "[\n  {\n    \"id\": 1,\n    \"backdrops\": [\n      \"\"\n    ],\n    \"name\": \"Genre Name\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Genre slider data returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "8c97da0b-3242-4e88-a1bc-d60314a5deee",
      "type": "http",
      "documentation": "Get the Plex watchlist.",
      "method": "get",
      "endpoint": "discover/watchlist",
      "responses": [
        {
          "uuid": "54b9e826-f47d-4be6-ab69-8fc6df2a73c4",
          "body": "{\n  \"page\": {{faker 'number.int' max=99999}},\n  \"totalPages\": {{faker 'number.int' max=99999}},\n  \"totalResults\": {{faker 'number.int' max=99999}},\n  \"results\": [\n    {\n      \"tmdbId\": 1,\n      \"ratingKey\": \"\",\n      \"type\": \"\",\n      \"title\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Watchlist data returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "FILE",
          "filePath": "/home/matthijs/Repos/Overwatch/Mockoon/mocks/overseer/get-watchlist-response.json",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "9652b60b-559d-41b8-b000-3b67016bb2c4",
      "type": "http",
      "documentation": "Get all requests",
      "method": "get",
      "endpoint": "request",
      "responses": [
        {
          "uuid": "3b124951-cfec-41fd-ba62-da034bc182fc",
          "body": "{\n  \"pageInfo\": {\n    \"page\": 1,\n    \"pages\": 10,\n    \"results\": 100\n  },\n  \"results\": [\n    {\n      \"id\": {{faker 'number.int'}},\n      \"status\": {{faker 'number.int' min=0 max=1}},\n      \"media\": {\n        \"id\": {{faker 'number.int'}},\n        \"tmdbId\": {{faker 'number.int'}},\n        \"tvdbId\": 0,\n        \"status\": {{faker 'number.int' min=0 max=1}},\n        \"requests\": [\n          {{faker 'lorem.word'}}\n        ],\n        \"createdAt\": {{faker 'date.past' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"updatedAt\": {{faker 'date.recent' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}}\n      },\n      \"createdAt\": {{faker 'date.past' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n      \"updatedAt\": {{faker 'date.recent' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n      \"requestedBy\": {\n        \"id\": {{faker 'number.int'}},\n        \"email\": {{faker 'internet.email'}},\n        \"username\": {{faker 'internet.userName'}},\n        \"plexToken\": {{faker 'string.uuid'}},\n        \"plexUsername\": {{faker 'internet.userName'}},\n        \"userType\": {{faker 'number.int' min=1 max=2}},\n        \"permissions\": {{faker 'number.int' min=0 max=1}},\n        \"avatar\": {{faker 'internet.avatar'}},\n        \"createdAt\": {{faker 'date.past' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"updatedAt\": {{faker 'date.recent' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"requestCount\": {{faker 'number.int' min=1 max=1}}\n      },\n      \"modifiedBy\": {\n        \"id\": {{faker 'number.int'}},\n        \"email\": {{faker 'internet.email'}},\n        \"username\": {{faker 'internet.userName'}},\n        \"plexToken\": {{faker 'string.uuid'}},\n        \"plexUsername\": {{faker 'internet.userName'}},\n        \"userType\": {{faker 'number.int' min=1 max=2}},\n        \"permissions\": {{faker 'number.int' min=0 max=1}},\n        \"avatar\": {{faker 'internet.avatar'}},\n        \"createdAt\": {{faker 'date.past' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"updatedAt\": {{faker 'date.recent' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"requestCount\": {{faker 'number.int' min=1 max=1}}\n      },\n      \"is4k\": {{faker 'datatype.boolean'}},\n      \"serverId\": {{faker 'number.int'}},\n      \"profileId\": {{faker 'number.int'}},\n      \"rootFolder\": {{faker 'system.filePath'}}\n    },\n    {\n      \"id\": {{faker 'number.int'}},\n      \"status\": {{faker 'number.int' min=0 max=1}},\n      \"media\": {\n        \"id\": {{faker 'number.int'}},\n        \"tmdbId\": {{faker 'number.int'}},\n        \"tvdbId\": 0,\n        \"status\": {{faker 'number.int' min=0 max=1}},\n        \"requests\": [\n          {{faker 'lorem.word'}}\n        ],\n        \"createdAt\": {{faker 'date.past' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"updatedAt\": {{faker 'date.recent' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}}\n      },\n      \"createdAt\": {{faker 'date.past' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n      \"updatedAt\": {{faker 'date.recent' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n      \"requestedBy\": {\n        \"id\": {{faker 'number.int'}},\n        \"email\": {{faker 'internet.email'}},\n        \"username\": {{faker 'internet.userName'}},\n        \"plexToken\": {{faker 'string.uuid'}},\n        \"plexUsername\": {{faker 'internet.userName'}},\n        \"userType\": {{faker 'number.int' min=1 max=2}},\n        \"permissions\": {{faker 'number.int' min=0 max=1}},\n        \"avatar\": {{faker 'internet.avatar'}},\n        \"createdAt\": {{faker 'date.past' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"updatedAt\": {{faker 'date.recent' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"requestCount\": {{faker 'number.int' min=1 max=1}}\n      },\n      \"modifiedBy\": {\n        \"id\": {{faker 'number.int'}},\n        \"email\": {{faker 'internet.email'}},\n        \"username\": {{faker 'internet.userName'}},\n        \"plexToken\": {{faker 'string.uuid'}},\n        \"plexUsername\": {{faker 'internet.userName'}},\n        \"userType\": {{faker 'number.int' min=1 max=2}},\n        \"permissions\": {{faker 'number.int' min=0 max=1}},\n        \"avatar\": {{faker 'internet.avatar'}},\n        \"createdAt\": {{faker 'date.past' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"updatedAt\": {{faker 'date.recent' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"requestCount\": {{faker 'number.int' min=1 max=1}}\n      },\n      \"is4k\": {{faker 'datatype.boolean'}},\n      \"serverId\": {{faker 'number.int'}},\n      \"profileId\": {{faker 'number.int'}},\n      \"rootFolder\": {{faker 'system.filePath'}}\n    },\n    {\n      \"id\": {{faker 'number.int'}},\n      \"status\": {{faker 'number.int' min=0 max=1}},\n      \"media\": {\n        \"id\": {{faker 'number.int'}},\n        \"tmdbId\": 0,\n        \"tvdbId\": {{faker 'number.int'}},\n        \"status\": {{faker 'number.int' min=0 max=1}},\n        \"requests\": [\n          {{faker 'lorem.word'}}\n        ],\n        \"createdAt\": {{faker 'date.past' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"updatedAt\": {{faker 'date.recent' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}}\n      },\n      \"createdAt\": {{faker 'date.past' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n      \"updatedAt\": {{faker 'date.recent' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n      \"requestedBy\": {\n        \"id\": {{faker 'number.int'}},\n        \"email\": {{faker 'internet.email'}},\n        \"username\": {{faker 'internet.userName'}},\n        \"plexToken\": {{faker 'string.uuid'}},\n        \"plexUsername\": {{faker 'internet.userName'}},\n        \"userType\": {{faker 'number.int' min=1 max=2}},\n        \"permissions\": {{faker 'number.int' min=0 max=1}},\n        \"avatar\": {{faker 'internet.avatar'}},\n        \"createdAt\": {{faker 'date.past' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"updatedAt\": {{faker 'date.recent' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"requestCount\": {{faker 'number.int' min=1 max=1}}\n      },\n      \"modifiedBy\": {\n        \"id\": {{faker 'number.int'}},\n        \"email\": {{faker 'internet.email'}},\n        \"username\": {{faker 'internet.userName'}},\n        \"plexToken\": {{faker 'string.uuid'}},\n        \"plexUsername\": {{faker 'internet.userName'}},\n        \"userType\": {{faker 'number.int' min=1 max=2}},\n        \"permissions\": {{faker 'number.int' min=0 max=1}},\n        \"avatar\": {{faker 'internet.avatar'}},\n        \"createdAt\": {{faker 'date.past' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"updatedAt\": {{faker 'date.recent' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"requestCount\": {{faker 'number.int' min=1 max=1}}\n      },\n      \"is4k\": {{faker 'datatype.boolean'}},\n      \"serverId\": {{faker 'number.int'}},\n      \"profileId\": {{faker 'number.int'}},\n      \"rootFolder\": {{faker 'system.filePath'}}\n    },\n    {\n      \"id\": {{faker 'number.int'}},\n      \"status\": {{faker 'number.int' min=0 max=1}},\n      \"media\": {\n        \"id\": {{faker 'number.int'}},\n        \"tmdbId\": 0,\n        \"tvdbId\": {{faker 'number.int'}},\n        \"status\": {{faker 'number.int' min=0 max=1}},\n        \"requests\": [\n          {{faker 'lorem.word'}}\n        ],\n        \"createdAt\": {{faker 'date.past' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"updatedAt\": {{faker 'date.recent' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}}\n      },\n      \"createdAt\": {{faker 'date.past' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n      \"updatedAt\": {{faker 'date.recent' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n      \"requestedBy\": {\n        \"id\": {{faker 'number.int'}},\n        \"email\": {{faker 'internet.email'}},\n        \"username\": {{faker 'internet.userName'}},\n        \"plexToken\": {{faker 'string.uuid'}},\n        \"plexUsername\": {{faker 'internet.userName'}},\n        \"userType\": {{faker 'number.int' min=1 max=2}},\n        \"permissions\": {{faker 'number.int' min=0 max=1}},\n        \"avatar\": {{faker 'internet.avatar'}},\n        \"createdAt\": {{faker 'date.past' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"updatedAt\": {{faker 'date.recent' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"requestCount\": {{faker 'number.int' min=1 max=1}}\n      },\n      \"modifiedBy\": {\n        \"id\": {{faker 'number.int'}},\n        \"email\": {{faker 'internet.email'}},\n        \"username\": {{faker 'internet.userName'}},\n        \"plexToken\": {{faker 'string.uuid'}},\n        \"plexUsername\": {{faker 'internet.userName'}},\n        \"userType\": {{faker 'number.int' min=1 max=2}},\n        \"permissions\": {{faker 'number.int' min=0 max=1}},\n        \"avatar\": {{faker 'internet.avatar'}},\n        \"createdAt\": {{faker 'date.past' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"updatedAt\": {{faker 'date.recent' 'YYYY-MM-DDTHH:mm:ss.SSSZ'}},\n        \"requestCount\": {{faker 'number.int' min=1 max=1}}\n      },\n      \"is4k\": {{faker 'datatype.boolean'}},\n      \"serverId\": {{faker 'number.int'}},\n      \"profileId\": {{faker 'number.int'}},\n      \"rootFolder\": {{faker 'system.filePath'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Requests returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "/home/matthijs/Repos/Overwatch/Mockoon/mocks/overseer/get-response.json",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "3c1c8dfa-884a-400c-ab60-3da14d7bb7fa",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "de50e1c9-560c-455b-a948-d1a3024aebfc",
      "type": "http",
      "documentation": "Create new request",
      "method": "post",
      "endpoint": "request",
      "responses": [
        {
          "uuid": "0fa256f2-777d-467b-8fbb-f261c5062dd9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "Succesfully created the request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "93355c08-0a50-4ccb-9145-31adc56f18e6",
      "type": "http",
      "documentation": "Gets request counts",
      "method": "get",
      "endpoint": "request/count",
      "responses": [
        {
          "uuid": "0b2eec41-4870-4318-9c70-59af2e27b6e1",
          "body": "{\n  \"total\": {{faker 'number.int' max=99999}},\n  \"movie\": {{faker 'number.int' max=99999}},\n  \"tv\": {{faker 'number.int' max=99999}},\n  \"pending\": {{faker 'number.int' max=99999}},\n  \"approved\": {{faker 'number.int' max=99999}},\n  \"declined\": {{faker 'number.int' max=99999}},\n  \"processing\": {{faker 'number.int' max=99999}},\n  \"available\": {{faker 'number.int' max=99999}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request counts returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "49150415-2ab9-47c7-80c0-d3e8117416b5",
      "type": "http",
      "documentation": "Get MediaRequest",
      "method": "get",
      "endpoint": "request/:requestId",
      "responses": [
        {
          "uuid": "d049ac10-8cb5-4397-a3c9-11d9014f69f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Succesfully returns request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "c2816376-73c3-48c8-971e-3e7586bf8ff8",
      "type": "http",
      "documentation": "Update MediaRequest",
      "method": "put",
      "endpoint": "request/:requestId",
      "responses": [
        {
          "uuid": "3317eb16-a376-4cb1-a09a-18d68d699a68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Succesfully updated request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "29bd2002-b64e-46a5-98d8-bd5b92868d53",
      "type": "http",
      "documentation": "Delete request",
      "method": "delete",
      "endpoint": "request/:requestId",
      "responses": [
        {
          "uuid": "fe2187f0-09d6-437b-a2ad-492d46f0eaa1",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Succesfully removed request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "f0f1bd87-cf43-46af-bcae-847d4140f080",
      "type": "http",
      "documentation": "Retry failed request",
      "method": "post",
      "endpoint": "request/:requestId/retry",
      "responses": [
        {
          "uuid": "8d0843c7-14f3-4e41-b1bc-096c53a416f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Retry triggered",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "8e24d3fb-e801-4e97-b45b-3f93a536749d",
      "type": "http",
      "documentation": "Update a request's status",
      "method": "post",
      "endpoint": "request/:requestId/:status",
      "responses": [
        {
          "uuid": "d08399ab-bc23-4605-97bb-4fad24880598",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Request status changed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "b5d2e58f-70de-4de1-a39e-038e06ace34d",
      "type": "http",
      "documentation": "Get movie details",
      "method": "get",
      "endpoint": "movie/:movieId",
      "responses": [
        {
          "uuid": "7c5fe834-0846-44b6-8d6d-9aa4462669ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Movie details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "7edf2727-5f96-4c9e-a4de-0ffe0cee3852",
      "type": "http",
      "documentation": "Get recommended movies",
      "method": "get",
      "endpoint": "movie/:movieId/recommendations",
      "responses": [
        {
          "uuid": "94e8e5c4-cd31-4e0f-8cc6-67f6d33017f8",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List of movies",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "6f3452ef-6b75-4b0b-9708-cafaf5dcb524",
      "type": "http",
      "documentation": "Get similar movies",
      "method": "get",
      "endpoint": "movie/:movieId/similar",
      "responses": [
        {
          "uuid": "915e1982-626b-4d84-a724-74d87820dc43",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List of movies",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "85061eb3-90f3-4a63-aa7e-7817943a3299",
      "type": "http",
      "documentation": "Get movie ratings",
      "method": "get",
      "endpoint": "movie/:movieId/ratings",
      "responses": [
        {
          "uuid": "7291be6a-b006-43d2-957c-b3c5a19bade8",
          "body": "{\n  \"title\": \"Mulan\",\n  \"year\": 2020,\n  \"url\": \"http://www.rottentomatoes.com/m/mulan_2020/\",\n  \"criticsScore\": 85,\n  \"criticsRating\": \"{{oneOf (array 'Rotten' 'Fresh' 'Certified Fresh')}}\",\n  \"audienceScore\": 65,\n  \"audienceRating\": \"{{oneOf (array 'Spilled' 'Upright')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Ratings returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "3d26f6a5-76d9-464b-9a04-88569f8b02a4",
      "type": "http",
      "documentation": "Get RT and IMDB movie ratings combined",
      "method": "get",
      "endpoint": "movie/:movieId/ratingscombined",
      "responses": [
        {
          "uuid": "b508384c-467e-46cf-9d2e-e92c4903cdf2",
          "body": "{\n  \"rt\": {\n    \"title\": \"Mulan\",\n    \"year\": 2020,\n    \"url\": \"http://www.rottentomatoes.com/m/mulan_2020/\",\n    \"criticsScore\": 85,\n    \"criticsRating\": \"{{oneOf (array 'Rotten' 'Fresh' 'Certified Fresh')}}\",\n    \"audienceScore\": 65,\n    \"audienceRating\": \"{{oneOf (array 'Spilled' 'Upright')}}\"\n  },\n  \"imdb\": {\n    \"title\": \"I am Legend\",\n    \"url\": \"https://www.imdb.com/title/tt0480249\",\n    \"criticsScore\": 6.5\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Ratings returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "879f0ad4-dd43-43ca-9b00-67496447ab00",
      "type": "http",
      "documentation": "Get TV details",
      "method": "get",
      "endpoint": "tv/3",
      "responses": [
        {
          "uuid": "8ac155d3-eb1e-4dd9-923f-bab5c362481c",
          "body": "{\n  \"id\": 123,\n  \"backdropPath\": \"string\",\n  \"posterPath\": \"string\",\n  \"contentRatings\": {\n    \"results\": [\n      {\n        \"iso_3166_1\": \"US\",\n        \"rating\": \"TV-14\"\n      }\n    ]\n  },\n  \"createdBy\": [\n    {\n      \"id\": 0,\n      \"name\": \"string\",\n      \"gender\": 0,\n      \"profilePath\": \"string\"\n    }\n  ],\n  \"episodeRunTime\": [\n    0\n  ],\n  \"firstAirDate\": \"string\",\n  \"genres\": [\n    {\n      \"id\": 1,\n      \"name\": \"Adventure\"\n    }\n  ],\n  \"homepage\": \"string\",\n  \"inProduction\": true,\n  \"languages\": [\n    \"string\"\n  ],\n  \"lastAirDate\": \"string\",\n  \"lastEpisodeToAir\": {\n    \"id\": 0,\n    \"name\": \"string\",\n    \"airDate\": \"string\",\n    \"episodeNumber\": 0,\n    \"overview\": \"string\",\n    \"productionCode\": \"string\",\n    \"seasonNumber\": 0,\n    \"showId\": 0,\n    \"stillPath\": \"string\",\n    \"voteAverage\": 0,\n    \"voteCount\": 0\n  },\n  \"name\": \"string\",\n  \"nextEpisodeToAir\": {\n    \"id\": 0,\n    \"name\": \"string\",\n    \"airDate\": \"string\",\n    \"episodeNumber\": 0,\n    \"overview\": \"string\",\n    \"productionCode\": \"string\",\n    \"seasonNumber\": 0,\n    \"showId\": 0,\n    \"stillPath\": \"string\",\n    \"voteAverage\": 0,\n    \"voteCount\": 0\n  },\n  \"networks\": [\n    {\n      \"id\": 1,\n      \"logoPath\": \"string\",\n      \"originCountry\": \"string\",\n      \"name\": \"string\"\n    }\n  ],\n  \"numberOfEpisodes\": 0,\n  \"numberOfSeason\": 0,\n  \"originCountry\": [\n    \"string\"\n  ],\n  \"originalLanguage\": \"string\",\n  \"originalName\": \"string\",\n  \"overview\": \"string\",\n  \"popularity\": 0,\n  \"productionCompanies\": [\n    {\n      \"id\": 1,\n      \"logoPath\": \"string\",\n      \"originCountry\": \"string\",\n      \"name\": \"string\"\n    }\n  ],\n  \"productionCountries\": [\n    {\n      \"iso_3166_1\": \"string\",\n      \"name\": \"string\"\n    }\n  ],\n  \"spokenLanguages\": [\n    {\n      \"englishName\": \"English\",\n      \"iso_639_1\": \"en\",\n      \"name\": \"English\"\n    }\n  ],\n  \"seasons\": [\n    {\n      \"id\": 0,\n      \"airDate\": \"string\",\n      \"episodeCount\": 0,\n      \"name\": \"string\",\n      \"overview\": \"string\",\n      \"posterPath\": \"string\",\n      \"seasonNumber\": 1,\n      \"episodes\": [\n        {\n          \"id\": 0,\n          \"name\": \"string\",\n          \"airDate\": \"string\",\n          \"episodeNumber\": 0,\n          \"overview\": \"string\",\n          \"productionCode\": \"string\",\n          \"seasonNumber\": 0,\n          \"showId\": 0,\n          \"stillPath\": \"string\",\n          \"voteAverage\": 0,\n          \"voteCount\": 0\n        }\n      ]\n    }\n  ],\n  \"status\": \"string\",\n  \"tagline\": \"string\",\n  \"type\": \"string\",\n  \"voteAverage\": 0,\n  \"voteCount\": 0,\n  \"credits\": {\n    \"cast\": [\n      {\n        \"id\": 123,\n        \"castId\": 1,\n        \"character\": \"Some Character Name\",\n        \"creditId\": \"string\",\n        \"gender\": 0,\n        \"name\": \"Some Persons Name\",\n        \"order\": 0,\n        \"profilePath\": \"string\"\n      }\n    ],\n    \"crew\": [\n      {\n        \"id\": 123,\n        \"creditId\": \"string\",\n        \"gender\": 0,\n        \"name\": \"Some Persons Name\",\n        \"job\": \"string\",\n        \"department\": \"string\",\n        \"profilePath\": \"string\"\n      }\n    ]\n  },\n  \"externalIds\": {\n    \"facebookId\": \"string\",\n    \"freebaseId\": \"string\",\n    \"freebaseMid\": \"string\",\n    \"imdbId\": \"string\",\n    \"instagramId\": \"string\",\n    \"tvdbId\": 3,\n    \"tvrageId\": 0,\n    \"twitterId\": \"string\"\n  },\n  \"keywords\": [\n    {\n      \"id\": 1,\n      \"name\": \"anime\"\n    }\n  ],\n  \"mediaInfo\": {\n    \"id\": 0,\n    \"tmdbId\": 1,\n    \"tvdbId\": 0,\n    \"status\": 0,\n    \"requests\": [\n      {\n        \"id\": 123,\n        \"status\": 0,\n        \"media\": \"string\",\n        \"createdAt\": \"2020-09-12T10:00:27.000Z\",\n        \"updatedAt\": \"2020-09-12T10:00:27.000Z\",\n        \"requestedBy\": {\n          \"id\": 1,\n          \"email\": \"hey@itsme.com\",\n          \"username\": \"string\",\n          \"plexToken\": \"string\",\n          \"plexUsername\": \"string\",\n          \"userType\": 1,\n          \"permissions\": 0,\n          \"avatar\": \"string\",\n          \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n          \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n          \"requestCount\": 5\n        },\n        \"modifiedBy\": {\n          \"id\": 1,\n          \"email\": \"hey@itsme.com\",\n          \"username\": \"string\",\n          \"plexToken\": \"string\",\n          \"plexUsername\": \"string\",\n          \"userType\": 1,\n          \"permissions\": 0,\n          \"avatar\": \"string\",\n          \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n          \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n          \"requestCount\": 5\n        },\n        \"is4k\": false,\n        \"serverId\": 0,\n        \"profileId\": 0,\n        \"rootFolder\": \"string\"\n      }\n    ],\n    \"createdAt\": \"2020-09-12T10:00:27.000Z\",\n    \"updatedAt\": \"2020-09-12T10:00:27.000Z\"\n  },\n  \"watchProviders\": [\n    [\n      {\n        \"iso_3166_1\": \"string\",\n        \"link\": \"string\",\n        \"buy\": [\n          {\n            \"displayPriority\": 0,\n            \"logoPath\": \"string\",\n            \"id\": 0,\n            \"name\": \"string\"\n          }\n        ],\n        \"flatrate\": [\n          {\n            \"displayPriority\": 0,\n            \"logoPath\": \"string\",\n            \"id\": 0,\n            \"name\": \"string\"\n          }\n        ]\n      }\n    ]\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "TV details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "53a547e6-8bc5-4644-af78-4478563bc28c",
      "type": "http",
      "documentation": "Get season details and episode list",
      "method": "get",
      "endpoint": "tv/:tvId/season/:seasonId",
      "responses": [
        {
          "uuid": "379f0b5f-208b-4d27-b9e6-a99308bf26bf",
          "body": "{\n  \"id\": {{faker 'number.int' max=99999}},\n  \"airDate\": \"\",\n  \"episodeCount\": {{faker 'number.int' max=99999}},\n  \"name\": \"\",\n  \"overview\": \"\",\n  \"posterPath\": \"\",\n  \"seasonNumber\": {{faker 'number.int' max=99999}},\n  \"episodes\": [\n    {\n      \"id\": {{faker 'number.int' max=99999}},\n      \"name\": \"\",\n      \"airDate\": \"\",\n      \"episodeNumber\": {{faker 'number.int' max=99999}},\n      \"overview\": \"\",\n      \"productionCode\": \"\",\n      \"seasonNumber\": {{faker 'number.int' max=99999}},\n      \"showId\": {{faker 'number.int' max=99999}},\n      \"stillPath\": \"\",\n      \"voteAverage\": {{faker 'number.int' max=99999}},\n      \"voteCount\": {{faker 'number.int' max=99999}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "TV details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "2c9fbf90-b76f-4cd4-a943-54de708d7dbf",
      "type": "http",
      "documentation": "Get recommended TV series",
      "method": "get",
      "endpoint": "tv/:tvId/recommendations",
      "responses": [
        {
          "uuid": "6c5d5314-81dd-4cd9-a910-e3487bb6b43b",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List of TV series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ef527d24-b7e7-4671-8934-26140a2ce739",
      "type": "http",
      "documentation": "Get similar TV series",
      "method": "get",
      "endpoint": "tv/:tvId/similar",
      "responses": [
        {
          "uuid": "ca4891f3-5371-47e9-9a74-c3eb905bfb07",
          "body": "{\n  \"page\": 1,\n  \"totalPages\": 20,\n  \"totalResults\": 200,\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "List of TV series",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "8efca3b1-47ca-4b21-83e6-e9aa731f77fe",
      "type": "http",
      "documentation": "Get TV ratings",
      "method": "get",
      "endpoint": "tv/:tvId/ratings",
      "responses": [
        {
          "uuid": "fc76295b-016c-48d0-8553-11681c7253e1",
          "body": "{\n  \"title\": \"The Boys\",\n  \"year\": 2019,\n  \"url\": \"http://www.rottentomatoes.com/m/mulan_2020/\",\n  \"criticsScore\": 85,\n  \"criticsRating\": \"{{oneOf (array 'Rotten' 'Fresh')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Ratings returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "2806938f-aba0-49c9-849d-0895903a58a3",
      "type": "http",
      "documentation": "Get person details",
      "method": "get",
      "endpoint": "person/:personId",
      "responses": [
        {
          "uuid": "79eaa84f-2e57-425c-abd1-33b4c9e34224",
          "body": "{\n  \"id\": 1,\n  \"name\": \"\",\n  \"deathday\": \"\",\n  \"knownForDepartment\": \"\",\n  \"alsoKnownAs\": [\n    \"\"\n  ],\n  \"gender\": \"\",\n  \"biography\": \"\",\n  \"popularity\": \"\",\n  \"placeOfBirth\": \"\",\n  \"profilePath\": \"\",\n  \"adult\": {{faker 'datatype.boolean'}},\n  \"imdbId\": \"\",\n  \"homepage\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned person",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ba81a194-ec1f-4bee-a0a5-f3379545854d",
      "type": "http",
      "documentation": "Get combined credits",
      "method": "get",
      "endpoint": "person/:personId/combined_credits",
      "responses": [
        {
          "uuid": "3fb0bf4e-cd1a-415e-aff2-6bda0f991331",
          "body": "{\n  \"cast\": [\n    \"\"\n  ],\n  \"crew\": [\n    \"\"\n  ],\n  \"id\": {{faker 'number.int' max=99999}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned combined credits",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "b9637dac-27f7-4be9-b08e-fb5e1ff9a4be",
      "type": "http",
      "documentation": "Get media",
      "method": "get",
      "endpoint": "media",
      "responses": [
        {
          "uuid": "09b63aad-36c0-417f-8d81-4b2fb6ae5c3d",
          "body": "{\n  \"pageInfo\": {\n    \"page\": 1,\n    \"pages\": 10,\n    \"results\": 100\n  },\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned media",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "4e96a54f-74d6-49cf-822d-ad845fe3edcf",
      "type": "http",
      "documentation": "Delete media item",
      "method": "delete",
      "endpoint": "media/:mediaId",
      "responses": [
        {
          "uuid": "e24c7b34-4808-47d3-8840-e73bbf8c55dd",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Succesfully removed media item",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "4c6d0d9f-d9a4-4824-8a13-478f791e1790",
      "type": "http",
      "documentation": "Update media status",
      "method": "post",
      "endpoint": "media/:mediaId/:status",
      "responses": [
        {
          "uuid": "1353fb8c-7666-48b7-87a0-79e6b05b748a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Returned media",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "f29073e1-4c7b-45c4-aa7f-d1691d18df67",
      "type": "http",
      "documentation": "Get watch data",
      "method": "get",
      "endpoint": "media/:mediaId/watch_data",
      "responses": [
        {
          "uuid": "fab7d54f-05b5-4a70-93f3-e6e829aa2c85",
          "body": "{\n  \"data\": {\n    \"playCount7Days\": {{faker 'number.int' max=99999}},\n    \"playCount30Days\": {{faker 'number.int' max=99999}},\n    \"playCount\": {{faker 'number.int' max=99999}},\n    \"users\": [\n      {\n        \"id\": 1,\n        \"email\": \"hey@itsme.com\",\n        \"username\": \"\",\n        \"plexToken\": \"\",\n        \"plexUsername\": \"\",\n        \"userType\": 1,\n        \"permissions\": {{faker 'number.int' max=99999}},\n        \"avatar\": \"\",\n        \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n        \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n        \"requestCount\": 5\n      }\n    ]\n  },\n  \"data4k\": {\n    \"playCount7Days\": {{faker 'number.int' max=99999}},\n    \"playCount30Days\": {{faker 'number.int' max=99999}},\n    \"playCount\": {{faker 'number.int' max=99999}},\n    \"users\": [\n      {\n        \"id\": 1,\n        \"email\": \"hey@itsme.com\",\n        \"username\": \"\",\n        \"plexToken\": \"\",\n        \"plexUsername\": \"\",\n        \"userType\": 1,\n        \"permissions\": {{faker 'number.int' max=99999}},\n        \"avatar\": \"\",\n        \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n        \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n        \"requestCount\": 5\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Users",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "51a2a31c-b921-41e2-a550-ea2cbba908ce",
      "type": "http",
      "documentation": "Get collection details",
      "method": "get",
      "endpoint": "collection/:collectionId",
      "responses": [
        {
          "uuid": "a664eea1-d383-41ae-8dc1-32bfbcf9ce39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Collection details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "855845ab-1ee0-4e89-a077-e92e0d26fbf0",
      "type": "http",
      "documentation": "Get non-sensitive Radarr server list",
      "method": "get",
      "endpoint": "service/radarr",
      "responses": [
        {
          "uuid": "270cf1a7-e905-416b-9649-2308ef3903a6",
          "body": "[\n  {\n    \"id\": {{faker 'number.int' max=99999}},\n    \"name\": \"Radarr Main\",\n    \"hostname\": \"127.0.0.1\",\n    \"port\": 7878,\n    \"apiKey\": \"exampleapikey\",\n    \"useSsl\": {{faker 'datatype.boolean'}},\n    \"baseUrl\": \"\",\n    \"activeProfileId\": 1,\n    \"activeProfileName\": \"720p/1080p\",\n    \"activeDirectory\": \"/movies\",\n    \"is4k\": {{faker 'datatype.boolean'}},\n    \"minimumAvailability\": \"In Cinema\",\n    \"isDefault\": {{faker 'datatype.boolean'}},\n    \"externalUrl\": \"http://radarr.example.com\",\n    \"syncEnabled\": {{faker 'datatype.boolean'}},\n    \"preventSearch\": {{faker 'datatype.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "c45dee57-eb53-4953-8cbe-696916557a97",
      "type": "http",
      "documentation": "Get Radarr server quality profiles and root folders",
      "method": "get",
      "endpoint": "service/radarr/:radarrId",
      "responses": [
        {
          "uuid": "e1bf9772-bcbb-4a62-b5f6-b191dba8587a",
          "body": "{\n  \"server\": {\n    \"id\": {{faker 'number.int' max=99999}},\n    \"name\": \"Radarr Main\",\n    \"hostname\": \"127.0.0.1\",\n    \"port\": 7878,\n    \"apiKey\": \"exampleapikey\",\n    \"useSsl\": {{faker 'datatype.boolean'}},\n    \"baseUrl\": \"\",\n    \"activeProfileId\": 1,\n    \"activeProfileName\": \"720p/1080p\",\n    \"activeDirectory\": \"/movies\",\n    \"is4k\": {{faker 'datatype.boolean'}},\n    \"minimumAvailability\": \"In Cinema\",\n    \"isDefault\": {{faker 'datatype.boolean'}},\n    \"externalUrl\": \"http://radarr.example.com\",\n    \"syncEnabled\": {{faker 'datatype.boolean'}},\n    \"preventSearch\": {{faker 'datatype.boolean'}}\n  },\n  \"profiles\": {\n    \"id\": 1,\n    \"name\": \"720p/1080p\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "dab1d0fa-39c1-46d3-8841-969cf3ecb48c",
      "type": "http",
      "documentation": "Get non-sensitive Sonarr server list",
      "method": "get",
      "endpoint": "service/sonarr",
      "responses": [
        {
          "uuid": "6677eccf-0561-4164-976b-302361da9b13",
          "body": "[\n  {\n    \"id\": {{faker 'number.int' max=99999}},\n    \"name\": \"Sonarr Main\",\n    \"hostname\": \"127.0.0.1\",\n    \"port\": 8989,\n    \"apiKey\": \"exampleapikey\",\n    \"useSsl\": {{faker 'datatype.boolean'}},\n    \"baseUrl\": \"\",\n    \"activeProfileId\": 1,\n    \"activeProfileName\": \"720p/1080p\",\n    \"activeDirectory\": \"/tv/\",\n    \"activeLanguageProfileId\": 1,\n    \"activeAnimeProfileId\": {{faker 'number.int' max=99999}},\n    \"activeAnimeLanguageProfileId\": {{faker 'number.int' max=99999}},\n    \"activeAnimeProfileName\": \"720p/1080p\",\n    \"activeAnimeDirectory\": \"\",\n    \"is4k\": {{faker 'datatype.boolean'}},\n    \"enableSeasonFolders\": {{faker 'datatype.boolean'}},\n    \"isDefault\": {{faker 'datatype.boolean'}},\n    \"externalUrl\": \"http://radarr.example.com\",\n    \"syncEnabled\": {{faker 'datatype.boolean'}},\n    \"preventSearch\": {{faker 'datatype.boolean'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "7c4636ff-debc-4abc-9735-fef782d6d06c",
      "type": "http",
      "documentation": "Get Sonarr server quality profiles and root folders",
      "method": "get",
      "endpoint": "service/sonarr/:sonarrId",
      "responses": [
        {
          "uuid": "d66dc71c-a343-4343-a75b-05bc15e1310d",
          "body": "{\n  \"server\": {\n    \"id\": {{faker 'number.int' max=99999}},\n    \"name\": \"Sonarr Main\",\n    \"hostname\": \"127.0.0.1\",\n    \"port\": 8989,\n    \"apiKey\": \"exampleapikey\",\n    \"useSsl\": {{faker 'datatype.boolean'}},\n    \"baseUrl\": \"\",\n    \"activeProfileId\": 1,\n    \"activeProfileName\": \"720p/1080p\",\n    \"activeDirectory\": \"/tv/\",\n    \"activeLanguageProfileId\": 1,\n    \"activeAnimeProfileId\": {{faker 'number.int' max=99999}},\n    \"activeAnimeLanguageProfileId\": {{faker 'number.int' max=99999}},\n    \"activeAnimeProfileName\": \"720p/1080p\",\n    \"activeAnimeDirectory\": \"\",\n    \"is4k\": {{faker 'datatype.boolean'}},\n    \"enableSeasonFolders\": {{faker 'datatype.boolean'}},\n    \"isDefault\": {{faker 'datatype.boolean'}},\n    \"externalUrl\": \"http://radarr.example.com\",\n    \"syncEnabled\": {{faker 'datatype.boolean'}},\n    \"preventSearch\": {{faker 'datatype.boolean'}}\n  },\n  \"profiles\": {\n    \"id\": 1,\n    \"name\": \"720p/1080p\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "dff936c1-d072-4904-a932-eaa50ec3cea0",
      "type": "http",
      "documentation": "Get series from Sonarr",
      "method": "get",
      "endpoint": "service/sonarr/lookup/:tmdbId",
      "responses": [
        {
          "uuid": "42511221-a0d6-41a4-9be8-6643ad62044a",
          "body": "[\n  {\n    \"title\": \"COVID-25\",\n    \"sortTitle\": \"covid 25\",\n    \"seasonCount\": 1,\n    \"status\": \"upcoming\",\n    \"overview\": \"The thread is picked up again by Marianne Schmidt which ...\",\n    \"network\": \"CBS\",\n    \"airTime\": \"02:15\",\n    \"images\": [\n      {\n        \"coverType\": \"banner\",\n        \"url\": \"/sonarr/MediaCoverProxy/6467f05d9872726ad08cbf920e5fee4bf69198682260acab8eab5d3c2c958e92/5c8f116c6aa5c.jpg\"\n      }\n    ],\n    \"remotePoster\": \"https://artworks.thetvdb.com/banners/posters/5c8f116129983.jpg\",\n    \"seasons\": [\n      {\n        \"seasonNumber\": 1,\n        \"monitored\": true\n      }\n    ],\n    \"year\": 2015,\n    \"path\": \"\",\n    \"profileId\": {{faker 'number.int' max=99999}},\n    \"languageProfileId\": {{faker 'number.int' max=99999}},\n    \"seasonFolder\": {{faker 'datatype.boolean'}},\n    \"monitored\": {{faker 'datatype.boolean'}},\n    \"useSceneNumbering\": {{faker 'datatype.boolean'}},\n    \"runtime\": {{faker 'number.int' max=99999}},\n    \"tvdbId\": 12345,\n    \"tvRageId\": {{faker 'number.int' max=99999}},\n    \"tvMazeId\": {{faker 'number.int' max=99999}},\n    \"firstAired\": \"\",\n    \"lastInfoSync\": \"\",\n    \"seriesType\": \"\",\n    \"cleanTitle\": \"\",\n    \"imdbId\": \"\",\n    \"titleSlug\": \"\",\n    \"certification\": \"\",\n    \"genres\": [\n      \"\"\n    ],\n    \"tags\": [\n      \"\"\n    ],\n    \"added\": \"\",\n    \"ratings\": [\n      {\n        \"votes\": {{faker 'number.int' max=99999}},\n        \"value\": {{faker 'number.int' max=99999}}\n      }\n    ],\n    \"qualityProfileId\": {{faker 'number.int' max=99999}},\n    \"id\": {{faker 'number.int' max=99999}},\n    \"rootFolderPath\": \"\",\n    \"addOptions\": [\n      {\n        \"ignoreEpisodesWithFiles\": {{faker 'datatype.boolean'}},\n        \"ignoreEpisodesWithoutFiles\": {{faker 'datatype.boolean'}},\n        \"searchForMissingEpisodes\": {{faker 'datatype.boolean'}}\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Request successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "706b7a3e-9751-4684-b364-2263757393f0",
      "type": "http",
      "documentation": "Regions supported by TMDB",
      "method": "get",
      "endpoint": "regions",
      "responses": [
        {
          "uuid": "0f14dd97-0b65-4fb9-8db4-f71c529333a2",
          "body": "[\n  {\n    \"iso_3166_1\": \"US\",\n    \"english_name\": \"United States of America\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "21d55052-00da-4397-88dd-3d86388d8a82",
      "type": "http",
      "documentation": "Languages supported by TMDB",
      "method": "get",
      "endpoint": "languages",
      "responses": [
        {
          "uuid": "53ed75f5-bc8d-4e6b-901a-85cd018698e1",
          "body": "[\n  {\n    \"iso_639_1\": \"en\",\n    \"english_name\": \"English\",\n    \"name\": \"English\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "3a1626bd-58cb-4ff6-9982-15347542f3a1",
      "type": "http",
      "documentation": "Get movie studio details",
      "method": "get",
      "endpoint": "studio/:studioId",
      "responses": [
        {
          "uuid": "ca50271c-93c0-48ad-9fe2-0f61bc1af4fe",
          "body": "{\n  \"id\": 1,\n  \"logoPath\": \"\",\n  \"originCountry\": \"\",\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Movie studio details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "56f2db1a-723b-41a7-babe-52995fef88ed",
      "type": "http",
      "documentation": "Get TV network details",
      "method": "get",
      "endpoint": "network/:networkId",
      "responses": [
        {
          "uuid": "83983ac6-b67b-414e-afdd-faada1cbb2a4",
          "body": "{\n  \"id\": 1,\n  \"logoPath\": \"\",\n  \"originCountry\": \"\",\n  \"name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "TV network details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "7cdad8fc-8d20-4aed-98ea-4924fede12e2",
      "type": "http",
      "documentation": "Get list of official TMDB movie genres",
      "method": "get",
      "endpoint": "genres/movie",
      "responses": [
        {
          "uuid": "c04ef59d-fba7-409f-90e3-08c7a1208c21",
          "body": "[\n  {\n    \"id\": 10751,\n    \"name\": \"Family\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "f6a1c649-3c1e-44bc-bb5d-71ea157b3441",
      "type": "http",
      "documentation": "Get list of official TMDB movie genres",
      "method": "get",
      "endpoint": "genres/tv",
      "responses": [
        {
          "uuid": "033b43a0-9c27-44a1-ab7e-d6694237efd7",
          "body": "[\n  {\n    \"id\": 18,\n    \"name\": \"Drama\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ccd0d33d-66a3-4f3a-9ed1-c6e42406848d",
      "type": "http",
      "documentation": "Get backdrops of trending items",
      "method": "get",
      "endpoint": "backdrops",
      "responses": [
        {
          "uuid": "679b408c-763e-42f3-a2b5-146fbe97cefd",
          "body": "[\n  \"\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Results",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "7d2d62ea-356f-441b-bcc3-2ac588d3b17a",
      "type": "http",
      "documentation": "Get all issues",
      "method": "get",
      "endpoint": "issue",
      "responses": [
        {
          "uuid": "ba68b274-a97e-43e4-8a14-add526a03ad5",
          "body": "{\n  \"pageInfo\": {\n    \"page\": 1,\n    \"pages\": 10,\n    \"results\": 100\n  },\n  \"results\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Issues returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "7692657e-3841-468f-825c-4b2387273bbf",
      "type": "http",
      "documentation": "Create new issue",
      "method": "post",
      "endpoint": "issue",
      "responses": [
        {
          "uuid": "2d502bc4-9a89-41e7-b69a-a363f0b37b55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 201,
          "label": "Succesfully created the issue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "e4ac4846-be94-4d51-86ad-c7c3bf4781c9",
      "type": "http",
      "documentation": "Gets issue counts",
      "method": "get",
      "endpoint": "issue/count",
      "responses": [
        {
          "uuid": "7ad031f2-dc5d-45bd-9d19-1df371c5bf57",
          "body": "{\n  \"total\": {{faker 'number.int' max=99999}},\n  \"video\": {{faker 'number.int' max=99999}},\n  \"audio\": {{faker 'number.int' max=99999}},\n  \"subtitles\": {{faker 'number.int' max=99999}},\n  \"others\": {{faker 'number.int' max=99999}},\n  \"open\": {{faker 'number.int' max=99999}},\n  \"closed\": {{faker 'number.int' max=99999}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Issue counts returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "6eac493c-5f19-46ab-b1f3-92a7682f024f",
      "type": "http",
      "documentation": "Get issue",
      "method": "get",
      "endpoint": "issue/:issueId",
      "responses": [
        {
          "uuid": "59e3be53-746d-4300-905e-15370a53cf21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Issues returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "466c5c7d-ada5-40db-8e08-6e4ac357e29a",
      "type": "http",
      "documentation": "Delete issue",
      "method": "delete",
      "endpoint": "issue/:issueId",
      "responses": [
        {
          "uuid": "6597e475-f90e-41e7-8f7b-52464f7562eb",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Succesfully removed issue",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "8a257f84-427f-46d7-9fd8-9790007035d2",
      "type": "http",
      "documentation": "Create a comment",
      "method": "post",
      "endpoint": "issue/:issueId/comment",
      "responses": [
        {
          "uuid": "b44f0edf-de03-42a2-a45d-bbf1e4e3e976",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Issue returned with new comment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "90fb750c-c918-4acb-baf6-2118298292d7",
      "type": "http",
      "documentation": "Get issue comment",
      "method": "get",
      "endpoint": "issueComment/:commentId",
      "responses": [
        {
          "uuid": "a2c49219-49d1-4b84-971a-b4209a9a359b",
          "body": "{\n  \"id\": 1,\n  \"user\": {\n    \"id\": 1,\n    \"email\": \"hey@itsme.com\",\n    \"username\": \"\",\n    \"plexToken\": \"\",\n    \"plexUsername\": \"\",\n    \"userType\": 1,\n    \"permissions\": {{faker 'number.int' max=99999}},\n    \"avatar\": \"\",\n    \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n    \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n    \"requestCount\": 5\n  },\n  \"message\": \"A comment\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Comment returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "44de921d-139a-4274-85f2-ebeb721e8de7",
      "type": "http",
      "documentation": "Update issue comment",
      "method": "put",
      "endpoint": "issueComment/:commentId",
      "responses": [
        {
          "uuid": "a5d945ad-de41-40dd-a3dd-f43066419f5b",
          "body": "{\n  \"id\": 1,\n  \"user\": {\n    \"id\": 1,\n    \"email\": \"hey@itsme.com\",\n    \"username\": \"\",\n    \"plexToken\": \"\",\n    \"plexUsername\": \"\",\n    \"userType\": 1,\n    \"permissions\": {{faker 'number.int' max=99999}},\n    \"avatar\": \"\",\n    \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n    \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n    \"requestCount\": 5\n  },\n  \"message\": \"A comment\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Comment updated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "de36152e-552b-4224-8784-e03625b8ce9c",
      "type": "http",
      "documentation": "Delete issue comment",
      "method": "delete",
      "endpoint": "issueComment/:commentId",
      "responses": [
        {
          "uuid": "bbafe8cf-3194-4bb1-9b4f-1e901b32f9ac",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "Succesfully removed issue comment",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "f6c3af63-bb41-4f3e-b808-5c8b3e7a0153",
      "type": "http",
      "documentation": "Update an issue's status",
      "method": "post",
      "endpoint": "issue/:issueId/:status",
      "responses": [
        {
          "uuid": "5351dee0-8512-4105-99a4-f8d2cf149f54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 200,
          "label": "Issue status changed",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "4b1a50d3-3497-47ec-8393-141e42f93832",
      "type": "http",
      "documentation": "Get keyword",
      "method": "get",
      "endpoint": "keyword/:keywordId",
      "responses": [
        {
          "uuid": "fb35b44e-569d-4545-a645-f66f4a0bed85",
          "body": "{\n  \"id\": 1,\n  \"name\": \"anime\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Keyword returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "094d6f79-524d-47e2-8290-6d9bd52c9933",
      "type": "http",
      "documentation": "Get watch provider regions",
      "method": "get",
      "endpoint": "watchproviders/regions",
      "responses": [
        {
          "uuid": "d8f0b985-076e-4626-b89d-58bdc7de154c",
          "body": "[\n  {\n    \"iso_3166_1\": \"\",\n    \"english_name\": \"\",\n    \"native_name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Watch provider regions returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "bbc5383b-f7cd-42c6-9f7a-54bcf67e1e69",
      "type": "http",
      "documentation": "Get watch provider movies",
      "method": "get",
      "endpoint": "watchproviders/movies",
      "responses": [
        {
          "uuid": "ba02a9bb-0829-46e9-adf1-c3fdc8ebd77c",
          "body": "[\n  {\n    \"displayPriority\": {{faker 'number.int' max=99999}},\n    \"logoPath\": \"\",\n    \"id\": {{faker 'number.int' max=99999}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Watch providers for movies returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "4e9df053-e2d0-4a0f-b70c-91fa120a0692",
      "type": "http",
      "documentation": "Get watch provider series",
      "method": "get",
      "endpoint": "watchproviders/tv",
      "responses": [
        {
          "uuid": "23b9f326-a797-4927-b4bf-785d5d38ff12",
          "body": "[\n  {\n    \"displayPriority\": {{faker 'number.int' max=99999}},\n    \"logoPath\": \"\",\n    \"id\": {{faker 'number.int' max=99999}},\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Watch providers for series returned",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "e94ef0d5-95a6-4b1b-96e4-c49b026a32d8",
      "type": "http",
      "documentation": "Get TV details for id 2",
      "method": "get",
      "endpoint": "tv/4",
      "responses": [
        {
          "uuid": "6caf7e2b-912e-4f7e-bc73-28be0d77b3c8",
          "body": "{\n  \"id\": 123,\n  \"backdropPath\": \"string\",\n  \"posterPath\": \"string\",\n  \"contentRatings\": {\n    \"results\": [\n      {\n        \"iso_3166_1\": \"US\",\n        \"rating\": \"TV-14\"\n      }\n    ]\n  },\n  \"createdBy\": [\n    {\n      \"id\": 0,\n      \"name\": \"string\",\n      \"gender\": 0,\n      \"profilePath\": \"string\"\n    }\n  ],\n  \"episodeRunTime\": [\n    0\n  ],\n  \"firstAirDate\": \"string\",\n  \"genres\": [\n    {\n      \"id\": 1,\n      \"name\": \"Adventure\"\n    }\n  ],\n  \"homepage\": \"string\",\n  \"inProduction\": true,\n  \"languages\": [\n    \"string\"\n  ],\n  \"lastAirDate\": \"string\",\n  \"lastEpisodeToAir\": {\n    \"id\": 0,\n    \"name\": \"string\",\n    \"airDate\": \"string\",\n    \"episodeNumber\": 0,\n    \"overview\": \"string\",\n    \"productionCode\": \"string\",\n    \"seasonNumber\": 0,\n    \"showId\": 0,\n    \"stillPath\": \"string\",\n    \"voteAverage\": 0,\n    \"voteCount\": 0\n  },\n  \"name\": \"string\",\n  \"nextEpisodeToAir\": {\n    \"id\": 0,\n    \"name\": \"string\",\n    \"airDate\": \"string\",\n    \"episodeNumber\": 0,\n    \"overview\": \"string\",\n    \"productionCode\": \"string\",\n    \"seasonNumber\": 0,\n    \"showId\": 0,\n    \"stillPath\": \"string\",\n    \"voteAverage\": 0,\n    \"voteCount\": 0\n  },\n  \"networks\": [\n    {\n      \"id\": 1,\n      \"logoPath\": \"string\",\n      \"originCountry\": \"string\",\n      \"name\": \"string\"\n    }\n  ],\n  \"numberOfEpisodes\": 0,\n  \"numberOfSeason\": 0,\n  \"originCountry\": [\n    \"string\"\n  ],\n  \"originalLanguage\": \"string\",\n  \"originalName\": \"string\",\n  \"overview\": \"string\",\n  \"popularity\": 0,\n  \"productionCompanies\": [\n    {\n      \"id\": 1,\n      \"logoPath\": \"string\",\n      \"originCountry\": \"string\",\n      \"name\": \"string\"\n    }\n  ],\n  \"productionCountries\": [\n    {\n      \"iso_3166_1\": \"string\",\n      \"name\": \"string\"\n    }\n  ],\n  \"spokenLanguages\": [\n    {\n      \"englishName\": \"English\",\n      \"iso_639_1\": \"en\",\n      \"name\": \"English\"\n    }\n  ],\n  \"seasons\": [\n    {\n      \"id\": 0,\n      \"airDate\": \"string\",\n      \"episodeCount\": 0,\n      \"name\": \"string\",\n      \"overview\": \"string\",\n      \"posterPath\": \"string\",\n      \"seasonNumber\": 1,\n      \"episodes\": [\n        {\n          \"id\": 0,\n          \"name\": \"string\",\n          \"airDate\": \"string\",\n          \"episodeNumber\": 0,\n          \"overview\": \"string\",\n          \"productionCode\": \"string\",\n          \"seasonNumber\": 0,\n          \"showId\": 0,\n          \"stillPath\": \"string\",\n          \"voteAverage\": 0,\n          \"voteCount\": 0\n        }\n      ]\n    }\n  ],\n  \"status\": \"string\",\n  \"tagline\": \"string\",\n  \"type\": \"string\",\n  \"voteAverage\": 0,\n  \"voteCount\": 0,\n  \"credits\": {\n    \"cast\": [\n      {\n        \"id\": 123,\n        \"castId\": 1,\n        \"character\": \"Some Character Name\",\n        \"creditId\": \"string\",\n        \"gender\": 0,\n        \"name\": \"Some Persons Name\",\n        \"order\": 0,\n        \"profilePath\": \"string\"\n      }\n    ],\n    \"crew\": [\n      {\n        \"id\": 123,\n        \"creditId\": \"string\",\n        \"gender\": 0,\n        \"name\": \"Some Persons Name\",\n        \"job\": \"string\",\n        \"department\": \"string\",\n        \"profilePath\": \"string\"\n      }\n    ]\n  },\n  \"externalIds\": {\n    \"facebookId\": \"string\",\n    \"freebaseId\": \"string\",\n    \"freebaseMid\": \"string\",\n    \"imdbId\": \"string\",\n    \"instagramId\": \"string\",\n    \"tvdbId\": 4,\n    \"tvrageId\": 0,\n    \"twitterId\": \"string\"\n  },\n  \"keywords\": [\n    {\n      \"id\": 1,\n      \"name\": \"anime\"\n    }\n  ],\n  \"mediaInfo\": {\n    \"id\": 0,\n    \"tmdbId\": 1,\n    \"tvdbId\": 0,\n    \"status\": 0,\n    \"requests\": [\n      {\n        \"id\": 123,\n        \"status\": 0,\n        \"media\": \"string\",\n        \"createdAt\": \"2020-09-12T10:00:27.000Z\",\n        \"updatedAt\": \"2020-09-12T10:00:27.000Z\",\n        \"requestedBy\": {\n          \"id\": 1,\n          \"email\": \"hey@itsme.com\",\n          \"username\": \"string\",\n          \"plexToken\": \"string\",\n          \"plexUsername\": \"string\",\n          \"userType\": 1,\n          \"permissions\": 0,\n          \"avatar\": \"string\",\n          \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n          \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n          \"requestCount\": 5\n        },\n        \"modifiedBy\": {\n          \"id\": 1,\n          \"email\": \"hey@itsme.com\",\n          \"username\": \"string\",\n          \"plexToken\": \"string\",\n          \"plexUsername\": \"string\",\n          \"userType\": 1,\n          \"permissions\": 0,\n          \"avatar\": \"string\",\n          \"createdAt\": \"2020-09-02T05:02:23.000Z\",\n          \"updatedAt\": \"2020-09-02T05:02:23.000Z\",\n          \"requestCount\": 5\n        },\n        \"is4k\": false,\n        \"serverId\": 0,\n        \"profileId\": 0,\n        \"rootFolder\": \"string\"\n      }\n    ],\n    \"createdAt\": \"2020-09-12T10:00:27.000Z\",\n    \"updatedAt\": \"2020-09-12T10:00:27.000Z\"\n  },\n  \"watchProviders\": [\n    [\n      {\n        \"iso_3166_1\": \"string\",\n        \"link\": \"string\",\n        \"buy\": [\n          {\n            \"displayPriority\": 0,\n            \"logoPath\": \"string\",\n            \"id\": 0,\n            \"name\": \"string\"\n          }\n        ],\n        \"flatrate\": [\n          {\n            \"displayPriority\": 0,\n            \"logoPath\": \"string\",\n            \"id\": 0,\n            \"name\": \"string\"\n          }\n        ]\n      }\n    ]\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "TV details",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "params",
              "modifier": "tvId",
              "value": "1",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    }
  ],
  "rootChildren": [
    {
      "type": "route",
      "uuid": "f1a9a7ef-4e62-4d47-a4b9-82a0ff4c6aa0"
    },
    {
      "type": "route",
      "uuid": "17b21127-1d7b-4363-a8f5-a6223c2b61c3"
    },
    {
      "type": "route",
      "uuid": "dae9cc60-af1e-45ad-8a39-e901a1ca6eaf"
    },
    {
      "type": "route",
      "uuid": "00a5ca08-b0f7-4aa1-8617-a7870231f9cb"
    },
    {
      "type": "route",
      "uuid": "c74020c3-1c2e-442f-9ef2-44e3c53cb94f"
    },
    {
      "type": "route",
      "uuid": "9095460d-3d8c-4fbb-a359-0be35ce4b60b"
    },
    {
      "type": "route",
      "uuid": "8e1ac12e-a4c2-4a50-a0e6-28495f911469"
    },
    {
      "type": "route",
      "uuid": "c5c86283-91ef-4c4a-bf9e-b701c9f335c8"
    },
    {
      "type": "route",
      "uuid": "ca0e95ea-8e03-4da1-bb09-5a499876d413"
    },
    {
      "type": "route",
      "uuid": "158ceb66-483a-4133-bef6-82fa751db0c4"
    },
    {
      "type": "route",
      "uuid": "6d0b3936-bba1-4145-9f5a-b900706335b7"
    },
    {
      "type": "route",
      "uuid": "6dfa5ccf-3c6e-4c23-9ff2-a3bea6c5a65b"
    },
    {
      "type": "route",
      "uuid": "da24fe2e-2292-451c-a812-909fd46789dc"
    },
    {
      "type": "route",
      "uuid": "dc39d6db-64a4-4003-b851-0c2eed7d5c6e"
    },
    {
      "type": "route",
      "uuid": "4c145360-44b7-4ebf-9dbf-4bb634be9c6d"
    },
    {
      "type": "route",
      "uuid": "37753e2a-1c7d-4e06-856a-68226211c6fe"
    },
    {
      "type": "route",
      "uuid": "646b5e92-d8bd-45a9-9f28-7532af79e8bb"
    },
    {
      "type": "route",
      "uuid": "035e099b-0c83-453d-ab66-d8f41c01238f"
    },
    {
      "type": "route",
      "uuid": "210043cc-782b-44fb-a95d-49a965a48381"
    },
    {
      "type": "route",
      "uuid": "8bcbc92d-0a48-4fa2-8552-be26b4f4f03e"
    },
    {
      "type": "route",
      "uuid": "4718f267-21f8-4ed7-b232-8025863bfab2"
    },
    {
      "type": "route",
      "uuid": "f5447fab-99b5-4eda-b7bd-e3126bb02e5f"
    },
    {
      "type": "route",
      "uuid": "9f154f36-736e-43c4-833a-454bb000c3dd"
    },
    {
      "type": "route",
      "uuid": "e29d703b-e9f0-439e-999d-bc1a58e7e2dc"
    },
    {
      "type": "route",
      "uuid": "74fac1be-829a-4f83-bf57-08d3f65d41b0"
    },
    {
      "type": "route",
      "uuid": "41f20c82-df47-4dc3-8187-4f0e62127d9a"
    },
    {
      "type": "route",
      "uuid": "c0a8a168-a5a0-44e9-b0c1-ea7772ee4b28"
    },
    {
      "type": "route",
      "uuid": "c0d457ab-8549-4b0a-854a-0298bc2ca640"
    },
    {
      "type": "route",
      "uuid": "c79f19d0-8d02-40f2-b00e-8c08c933af93"
    },
    {
      "type": "route",
      "uuid": "ccf342f0-8029-4a73-9a17-5251f594f36d"
    },
    {
      "type": "route",
      "uuid": "40e2c237-36fe-4709-9fff-e82b5f3fd441"
    },
    {
      "type": "route",
      "uuid": "04875b42-2a37-4a2c-a9a7-1611d6e08253"
    },
    {
      "type": "route",
      "uuid": "d49b5f21-c28b-4ff4-8e11-d69f833570d2"
    },
    {
      "type": "route",
      "uuid": "a664d188-3f23-4c76-9843-5ceb4cc4bcbd"
    },
    {
      "type": "route",
      "uuid": "0cf17b03-c7a6-4a1d-80be-817185df8d9c"
    },
    {
      "type": "route",
      "uuid": "f46419a2-d204-42a0-aa75-8fa1e65d7432"
    },
    {
      "type": "route",
      "uuid": "0f39838b-d7fa-42b3-9154-9f23894e5a0e"
    },
    {
      "type": "route",
      "uuid": "e9d9dc47-30d0-4289-8897-c4dc77d85b65"
    },
    {
      "type": "route",
      "uuid": "7e259916-514c-4a88-ae24-9f6b8e5aaf9a"
    },
    {
      "type": "route",
      "uuid": "708d15a1-7d15-476b-a24f-71b5eb30733f"
    },
    {
      "type": "route",
      "uuid": "0f4d90a5-d9f4-4cbb-9a2c-551f84d4d299"
    },
    {
      "type": "route",
      "uuid": "32b6d037-ed03-4678-973f-8d83d56c18ab"
    },
    {
      "type": "route",
      "uuid": "ff37f14c-7341-4f64-a339-f0a238034aad"
    },
    {
      "type": "route",
      "uuid": "15814d11-ab56-40c8-9f25-fde070a6566a"
    },
    {
      "type": "route",
      "uuid": "0037a909-82fe-4207-b9f1-bdeef872bf69"
    },
    {
      "type": "route",
      "uuid": "09480581-b5a6-4adf-8de8-2d465e12bf76"
    },
    {
      "type": "route",
      "uuid": "f943888a-67cb-4c55-a595-f5ee7877e710"
    },
    {
      "type": "route",
      "uuid": "40630956-157f-4347-a7f7-7e74fce25367"
    },
    {
      "type": "route",
      "uuid": "72cb447c-5ec0-4400-84a6-cc7eb9a7cffd"
    },
    {
      "type": "route",
      "uuid": "3c9bf947-37c8-48d7-9bd6-2130c3e14b2c"
    },
    {
      "type": "route",
      "uuid": "424be48d-3193-4db8-ac4d-8d98a0d42b69"
    },
    {
      "type": "route",
      "uuid": "262317ae-c4c9-4e6c-a46c-8a940b1834a6"
    },
    {
      "type": "route",
      "uuid": "58c8a16c-ca2b-4b50-892b-46a4676baca9"
    },
    {
      "type": "route",
      "uuid": "a9361eb5-3031-4592-b017-f222b47bbd8c"
    },
    {
      "type": "route",
      "uuid": "0e019c5a-aad8-436b-b7db-4e63f905b61a"
    },
    {
      "type": "route",
      "uuid": "2d6ce729-9639-4280-9d23-35f265e664e5"
    },
    {
      "type": "route",
      "uuid": "1b4831bd-7619-42a5-8c52-20df2622b189"
    },
    {
      "type": "route",
      "uuid": "7a6b4891-3333-4c9e-b19e-b34881dc400e"
    },
    {
      "type": "route",
      "uuid": "2501da4c-43f6-4d05-9e46-e73676e02516"
    },
    {
      "type": "route",
      "uuid": "583907d3-e237-494c-9726-484e8980cea5"
    },
    {
      "type": "route",
      "uuid": "03b53bcc-2d85-46dc-ba81-22ca2fe4c236"
    },
    {
      "type": "route",
      "uuid": "ca7fee78-cc2e-4e89-8368-f6ae4e5bc3f0"
    },
    {
      "type": "route",
      "uuid": "d13f4a56-ab68-4efa-a8d7-23957d7ad7a8"
    },
    {
      "type": "route",
      "uuid": "dbfdd81b-2d8d-4e18-b4a8-62c9a5a648e6"
    },
    {
      "type": "route",
      "uuid": "ddcf337d-610b-49b6-acf1-fb1f0bc6d2cc"
    },
    {
      "type": "route",
      "uuid": "e3366455-3c9b-4b76-8374-01627205f737"
    },
    {
      "type": "route",
      "uuid": "db039393-a426-4691-a0f4-41a157b157fa"
    },
    {
      "type": "route",
      "uuid": "88ad1d11-ab3b-4ba7-a0bc-ee0c3a4ea8bd"
    },
    {
      "type": "route",
      "uuid": "5f79af4a-2d62-4fad-9143-4154c03f5963"
    },
    {
      "type": "route",
      "uuid": "ea9efa4d-d51a-4565-a46a-6c453b3ddeda"
    },
    {
      "type": "route",
      "uuid": "44c71966-027f-4624-86bc-ce55fab6cc46"
    },
    {
      "type": "route",
      "uuid": "6d8ce7a1-7fa3-412d-87c4-162c565a6aee"
    },
    {
      "type": "route",
      "uuid": "494eff3b-9f64-4e85-a108-71e7965de50c"
    },
    {
      "type": "route",
      "uuid": "768ff023-548b-4111-95ab-020bc589a999"
    },
    {
      "type": "route",
      "uuid": "f55835e5-1e33-4ecb-aa34-0a7e44a545b8"
    },
    {
      "type": "route",
      "uuid": "2cbfd7b0-a3f1-4380-ad8a-372ae6c8569c"
    },
    {
      "type": "route",
      "uuid": "c89c5a5e-5520-4f22-94a0-55cf4148edfd"
    },
    {
      "type": "route",
      "uuid": "961918a1-f98b-4804-b642-5cdb99a2fd19"
    },
    {
      "type": "route",
      "uuid": "0bd5fca1-3438-4ef0-9f1a-3a7d26d9ad66"
    },
    {
      "type": "route",
      "uuid": "ea806ed1-d38d-427e-ad98-c7ca92548937"
    },
    {
      "type": "route",
      "uuid": "ea0766b0-69f8-4315-859c-2de6937b9dc2"
    },
    {
      "type": "route",
      "uuid": "57fe1476-3e0c-4281-85d9-79af03662b98"
    },
    {
      "type": "route",
      "uuid": "cb67efee-45f8-481b-b313-6b1f7537d61e"
    },
    {
      "type": "route",
      "uuid": "1acc717e-e8e4-45c2-8ecb-9c6b813fd294"
    },
    {
      "type": "route",
      "uuid": "fe01da65-1443-40f2-926c-4ed2da929a2f"
    },
    {
      "type": "route",
      "uuid": "34f61ead-61b2-49ba-9760-0891153caa58"
    },
    {
      "type": "route",
      "uuid": "ad673c63-bbc4-48cd-ba88-d895eddcbbf5"
    },
    {
      "type": "route",
      "uuid": "de068bf7-6405-4caf-90e1-2b04287e103a"
    },
    {
      "type": "route",
      "uuid": "68f7f17d-93f9-4192-910e-c93048d01f6a"
    },
    {
      "type": "route",
      "uuid": "22612825-5ffa-4a47-b740-94d3b95b17b5"
    },
    {
      "type": "route",
      "uuid": "9a0d4691-6f8c-4dcc-90f3-4490bb7c3357"
    },
    {
      "type": "route",
      "uuid": "1b6a9a8b-594e-4e3a-9145-15409b6e6a8d"
    },
    {
      "type": "route",
      "uuid": "bfb395ee-7148-4c08-9c64-e58256a8d633"
    },
    {
      "type": "route",
      "uuid": "e56ca6f7-b2b2-434d-ad95-f4351fddd3cf"
    },
    {
      "type": "route",
      "uuid": "663908bb-3447-48a9-97fe-368f4469eaaf"
    },
    {
      "type": "route",
      "uuid": "7072df14-0c3f-44f9-9225-8bdc3bf8091c"
    },
    {
      "type": "route",
      "uuid": "f45ab358-d4f0-49e4-bccf-55e605ffb98d"
    },
    {
      "type": "route",
      "uuid": "3d425a97-00ed-485c-a2bc-35a42f4157c8"
    },
    {
      "type": "route",
      "uuid": "d6c0886b-4023-405b-bfad-3b42c1d474ce"
    },
    {
      "type": "route",
      "uuid": "4c5d1246-5b21-4c4f-a84d-12c71339864b"
    },
    {
      "type": "route",
      "uuid": "c7c0bf3c-4f29-4edb-8c04-ca028a436890"
    },
    {
      "type": "route",
      "uuid": "2492572f-d3ab-4f2e-b7ee-03ad9370ffa0"
    },
    {
      "type": "route",
      "uuid": "78de8b09-f326-4e3c-9561-64212adff6a6"
    },
    {
      "type": "route",
      "uuid": "77738d8b-ddee-4705-9231-d837d089c382"
    },
    {
      "type": "route",
      "uuid": "1300cb8f-096e-4802-96fe-1b09a809dcc3"
    },
    {
      "type": "route",
      "uuid": "a1c973a6-d53e-4268-8a53-bfaea11c9ba3"
    },
    {
      "type": "route",
      "uuid": "3dc3743a-cb25-4d8e-bf86-efa4fcf44bb9"
    },
    {
      "type": "route",
      "uuid": "254ea020-a2e9-49b7-8367-2778492a41eb"
    },
    {
      "type": "route",
      "uuid": "13e34bf0-2801-43d8-b300-b511acb7d8f6"
    },
    {
      "type": "route",
      "uuid": "6e4c58e6-f61b-4c81-9994-a21e74242f02"
    },
    {
      "type": "route",
      "uuid": "7de22fc6-3a61-4e12-961c-244ba9d62b7f"
    },
    {
      "type": "route",
      "uuid": "49c5dcf5-34fe-45dc-8d46-b120353b1bb4"
    },
    {
      "type": "route",
      "uuid": "234a0d88-54f9-428c-a53c-aaeca12df42e"
    },
    {
      "type": "route",
      "uuid": "515be0e1-05b9-4aff-9be2-bf7318ff8797"
    },
    {
      "type": "route",
      "uuid": "2453ade2-3cba-4e68-9144-832343fe9540"
    },
    {
      "type": "route",
      "uuid": "8c97da0b-3242-4e88-a1bc-d60314a5deee"
    },
    {
      "type": "route",
      "uuid": "9652b60b-559d-41b8-b000-3b67016bb2c4"
    },
    {
      "type": "route",
      "uuid": "de50e1c9-560c-455b-a948-d1a3024aebfc"
    },
    {
      "type": "route",
      "uuid": "93355c08-0a50-4ccb-9145-31adc56f18e6"
    },
    {
      "type": "route",
      "uuid": "49150415-2ab9-47c7-80c0-d3e8117416b5"
    },
    {
      "type": "route",
      "uuid": "c2816376-73c3-48c8-971e-3e7586bf8ff8"
    },
    {
      "type": "route",
      "uuid": "29bd2002-b64e-46a5-98d8-bd5b92868d53"
    },
    {
      "type": "route",
      "uuid": "f0f1bd87-cf43-46af-bcae-847d4140f080"
    },
    {
      "type": "route",
      "uuid": "8e24d3fb-e801-4e97-b45b-3f93a536749d"
    },
    {
      "type": "route",
      "uuid": "b5d2e58f-70de-4de1-a39e-038e06ace34d"
    },
    {
      "type": "route",
      "uuid": "7edf2727-5f96-4c9e-a4de-0ffe0cee3852"
    },
    {
      "type": "route",
      "uuid": "6f3452ef-6b75-4b0b-9708-cafaf5dcb524"
    },
    {
      "type": "route",
      "uuid": "85061eb3-90f3-4a63-aa7e-7817943a3299"
    },
    {
      "type": "route",
      "uuid": "3d26f6a5-76d9-464b-9a04-88569f8b02a4"
    },
    {
      "type": "route",
      "uuid": "879f0ad4-dd43-43ca-9b00-67496447ab00"
    },
    {
      "type": "route",
      "uuid": "53a547e6-8bc5-4644-af78-4478563bc28c"
    },
    {
      "type": "route",
      "uuid": "2c9fbf90-b76f-4cd4-a943-54de708d7dbf"
    },
    {
      "type": "route",
      "uuid": "ef527d24-b7e7-4671-8934-26140a2ce739"
    },
    {
      "type": "route",
      "uuid": "8efca3b1-47ca-4b21-83e6-e9aa731f77fe"
    },
    {
      "type": "route",
      "uuid": "2806938f-aba0-49c9-849d-0895903a58a3"
    },
    {
      "type": "route",
      "uuid": "ba81a194-ec1f-4bee-a0a5-f3379545854d"
    },
    {
      "type": "route",
      "uuid": "b9637dac-27f7-4be9-b08e-fb5e1ff9a4be"
    },
    {
      "type": "route",
      "uuid": "4e96a54f-74d6-49cf-822d-ad845fe3edcf"
    },
    {
      "type": "route",
      "uuid": "4c6d0d9f-d9a4-4824-8a13-478f791e1790"
    },
    {
      "type": "route",
      "uuid": "f29073e1-4c7b-45c4-aa7f-d1691d18df67"
    },
    {
      "type": "route",
      "uuid": "51a2a31c-b921-41e2-a550-ea2cbba908ce"
    },
    {
      "type": "route",
      "uuid": "855845ab-1ee0-4e89-a077-e92e0d26fbf0"
    },
    {
      "type": "route",
      "uuid": "c45dee57-eb53-4953-8cbe-696916557a97"
    },
    {
      "type": "route",
      "uuid": "dab1d0fa-39c1-46d3-8841-969cf3ecb48c"
    },
    {
      "type": "route",
      "uuid": "7c4636ff-debc-4abc-9735-fef782d6d06c"
    },
    {
      "type": "route",
      "uuid": "dff936c1-d072-4904-a932-eaa50ec3cea0"
    },
    {
      "type": "route",
      "uuid": "706b7a3e-9751-4684-b364-2263757393f0"
    },
    {
      "type": "route",
      "uuid": "21d55052-00da-4397-88dd-3d86388d8a82"
    },
    {
      "type": "route",
      "uuid": "3a1626bd-58cb-4ff6-9982-15347542f3a1"
    },
    {
      "type": "route",
      "uuid": "56f2db1a-723b-41a7-babe-52995fef88ed"
    },
    {
      "type": "route",
      "uuid": "7cdad8fc-8d20-4aed-98ea-4924fede12e2"
    },
    {
      "type": "route",
      "uuid": "f6a1c649-3c1e-44bc-bb5d-71ea157b3441"
    },
    {
      "type": "route",
      "uuid": "ccd0d33d-66a3-4f3a-9ed1-c6e42406848d"
    },
    {
      "type": "route",
      "uuid": "7d2d62ea-356f-441b-bcc3-2ac588d3b17a"
    },
    {
      "type": "route",
      "uuid": "7692657e-3841-468f-825c-4b2387273bbf"
    },
    {
      "type": "route",
      "uuid": "e4ac4846-be94-4d51-86ad-c7c3bf4781c9"
    },
    {
      "type": "route",
      "uuid": "6eac493c-5f19-46ab-b1f3-92a7682f024f"
    },
    {
      "type": "route",
      "uuid": "466c5c7d-ada5-40db-8e08-6e4ac357e29a"
    },
    {
      "type": "route",
      "uuid": "8a257f84-427f-46d7-9fd8-9790007035d2"
    },
    {
      "type": "route",
      "uuid": "90fb750c-c918-4acb-baf6-2118298292d7"
    },
    {
      "type": "route",
      "uuid": "44de921d-139a-4274-85f2-ebeb721e8de7"
    },
    {
      "type": "route",
      "uuid": "de36152e-552b-4224-8784-e03625b8ce9c"
    },
    {
      "type": "route",
      "uuid": "f6c3af63-bb41-4f3e-b808-5c8b3e7a0153"
    },
    {
      "type": "route",
      "uuid": "4b1a50d3-3497-47ec-8393-141e42f93832"
    },
    {
      "type": "route",
      "uuid": "094d6f79-524d-47e2-8290-6d9bd52c9933"
    },
    {
      "type": "route",
      "uuid": "bbc5383b-f7cd-42c6-9f7a-54bcf67e1e69"
    },
    {
      "type": "route",
      "uuid": "4e9df053-e2d0-4a0f-b70c-91fa120a0692"
    },
    {
      "type": "route",
      "uuid": "e94ef0d5-95a6-4b1b-96e4-c49b026a32d8"
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": [],
  "callbacks": []
}