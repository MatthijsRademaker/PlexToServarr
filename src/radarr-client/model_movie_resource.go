/*
 * Radarr
 *
 * Radarr API docs
 *
 * API version: 3.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swaggerClientRadarr

import (
	"time"
)

type MovieResource struct {
	Id                    int32                      `json:"id,omitempty"`
	Title                 string                     `json:"title,omitempty"`
	OriginalTitle         string                     `json:"originalTitle,omitempty"`
	OriginalLanguage      *Language                  `json:"originalLanguage,omitempty"`
	AlternateTitles       []AlternativeTitleResource `json:"alternateTitles,omitempty"`
	SecondaryYear         int32                      `json:"secondaryYear,omitempty"`
	SecondaryYearSourceId int32                      `json:"secondaryYearSourceId,omitempty"`
	SortTitle             string                     `json:"sortTitle,omitempty"`
	SizeOnDisk            int64                      `json:"sizeOnDisk,omitempty"`
	Status                *MovieStatusType           `json:"status,omitempty"`
	Overview              string                     `json:"overview,omitempty"`
	InCinemas             time.Time                  `json:"inCinemas,omitempty"`
	PhysicalRelease       time.Time                  `json:"physicalRelease,omitempty"`
	DigitalRelease        time.Time                  `json:"digitalRelease,omitempty"`
	ReleaseDate           time.Time                  `json:"releaseDate,omitempty"`
	PhysicalReleaseNote   string                     `json:"physicalReleaseNote,omitempty"`
	Images                []MediaCover               `json:"images,omitempty"`
	Website               string                     `json:"website,omitempty"`
	RemotePoster          string                     `json:"remotePoster,omitempty"`
	Year                  int32                      `json:"year,omitempty"`
	YouTubeTrailerId      string                     `json:"youTubeTrailerId,omitempty"`
	Studio                string                     `json:"studio,omitempty"`
	Path                  string                     `json:"path,omitempty"`
	QualityProfileId      int32                      `json:"qualityProfileId,omitempty"`
	HasFile               bool                       `json:"hasFile,omitempty"`
	MovieFileId           int32                      `json:"movieFileId,omitempty"`
	Monitored             bool                       `json:"monitored,omitempty"`
	MinimumAvailability   *MovieStatusType           `json:"minimumAvailability,omitempty"`
	IsAvailable           bool                       `json:"isAvailable,omitempty"`
	FolderName            string                     `json:"folderName,omitempty"`
	Runtime               int32                      `json:"runtime,omitempty"`
	CleanTitle            string                     `json:"cleanTitle,omitempty"`
	ImdbId                string                     `json:"imdbId,omitempty"`
	TmdbId                int32                      `json:"tmdbId,omitempty"`
	TitleSlug             string                     `json:"titleSlug,omitempty"`
	RootFolderPath        string                     `json:"rootFolderPath,omitempty"`
	Folder                string                     `json:"folder,omitempty"`
	Certification         string                     `json:"certification,omitempty"`
	Genres                []string                   `json:"genres,omitempty"`
	Tags                  []int32                    `json:"tags,omitempty"`
	Added                 time.Time                  `json:"added,omitempty"`
	AddOptions            *AddMovieOptions           `json:"addOptions,omitempty"`
	Ratings               *Ratings                   `json:"ratings,omitempty"`
	MovieFile             *MovieFileResource         `json:"movieFile,omitempty"`
	Collection            *MovieCollectionResource   `json:"collection,omitempty"`
	Popularity            float32                    `json:"popularity,omitempty"`
	Statistics            *MovieStatisticsResource   `json:"statistics,omitempty"`
}
